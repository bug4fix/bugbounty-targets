{
    "data": [
        {
            "id": "13",
            "type": "program",
            "attributes": {
                "handle": "security",
                "name": "HackerOne",
                "currency": "usd",
                "policy": "# Must Read\n\n-  **Scope Inclusions:** Third-party assets outside of our control. We cannot authorize you to test assets that we do not host. Any such reports will be closed as Informative, but on occasion, we may reward a bonus if value to HackerOne's security posture is demonstrated. Note that issues within our control always fall within the scope of our program. This includes correct asset configuration and vulnerabilities/patching relating to self-hosted assets.\n\n# Hint & Tips\n\n- **Sandboxes:**  HackerOne offers a sandbox for hackers to help them test program functionality for security vulnerabilities. To create a program, go [here](https://hackerone.com/teams/new/sandbox). You can select any product edition, giving you access to almost all features HackerOne offers. Hackers can create up to 30 programs in the sandbox.\n- **Existence of Invite-Only Programs:** HackerOne has six different program states that are important to understand: sandbox, invite-only, public, external program, external program + sandbox, and external program + invite-only. It is **only** a valid vulnerability when there is a difference between the sandbox and invite-only programs. It is **not** a vulnerability when you can't distinguish a sandboxed program from an invite-only program. You can use the following example program handles for your tests.\n\n| Program state | Program handle | ID | Node ID |\n| ------------- | -------------- | -- | ------- |\n| Sandbox | @security-test-sandbox | 49806 | `Z2lkOi8vaGFja2Vyb25lL1RlYW0vNDk4MDY=` |\n| Invite-only | @security-test-invite-only | 49807 | `Z2lkOi8vaGFja2Vyb25lL1RlYW0vNDk4MDc=` |\n| Public | @security | 13 | `Z2lkOi8vaGFja2Vyb25lL1RlYW0vMTM=` |\n| External program | @security-test-ep | 49803 | `Z2lkOi8vaGFja2Vyb25lL1RlYW0vNDk4MDM=` |\n| External program + sandbox | @security-test-ep-sandbox | 49804 | `Z2lkOi8vaGFja2Vyb25lL1RlYW0vNDk4MDQ=` |\n| External program + invite-only | @security-test-ep-invite-only | 49805 | `Z2lkOi8vaGFja2Vyb25lL1RlYW0vNDk4MDU=` |\n\n- **Other Object Identifiers for Proof of Concept:** You may use the following object identifiers to test again on hackerone.com. Feel free to use these for a proof of concept when submitting a report to us.\n\n| GraphQL ID | Class | ID | Note |\n| ---------- | ----- | -- | ---- |\n| `Z2lkOi8vaGFja2Vyb25lL1N0cnVjdHVyZWRTY29wZS81ODU3OQ==` | `StructuredScope` | 58579 | An asset belonging to @security-test-sandbox |\n| `Z2lkOi8vaGFja2Vyb25lL1N0cnVjdHVyZWRTY29wZS8xMDA1Nzg=` | `StructuredScope` | 100578 | An asset belonging to @security-test-invite-only |",
                "profile_picture": "https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/19c85a12ac35f466af1ea2b0ae853bfe5e8f057fb1d6fb62db131707bb67b30d",
                "submission_state": "open",
                "triage_active": true,
                "state": "public_mode",
                "started_accepting_at": "2013-11-06T00:00:00.000Z",
                "number_of_reports_for_user": 0,
                "number_of_valid_reports_for_user": 0,
                "bounty_earned_for_user": 0.0,
                "last_invitation_accepted_at_for_user": null,
                "bookmarked": false,
                "allows_bounty_splitting": true,
                "offers_bounties": true,
                "open_scope": true,
                "fast_payments": true,
                "gold_standard_safe_harbor": true
            }
        },
        {
            "id": "18",
            "type": "program",
            "attributes": {
                "handle": "phabricator",
                "name": "Phabricator",
                "currency": "usd",
                "policy": "Security is serious business, just like Phabricator. If you can find a security vulnerability in the project, we\u2019ll reward you with cold, hard cash. The cash will be transmitted electronically, so it will be cold and hard only figuratively.\r\n\r\nREAD THIS\r\n==============\r\n\r\n* __IMPORTANT: DO NOT TEST `secure.phabricator.com`__. __Do not test an install of Phabricator that you do not own.__ This includes `secure.phabricator.com` and any other existing install you might find. If you report an issue against `secure.phabricator.com` or another install you do not own, it will not be accepted. Instead, install a local copy of Phabricator. This will let you test Phabricator without disrupting other users.\r\n* __IMPORTANT: SERVER CONFIGURATION ISSUES DO NOT QUALIFY__. __Do not report configuration issues with `phabricator.org`, `phabricator.com`, etc.__ For example: software versions, SPF headers, etc. These are outside of program scope. The goal of this program is to find vulnerabilities in the Phabricator software itself.\r\n* For instructions on installing a local copy of Phabricator, see the [Installation Guide](https://secure.phabricator.com/book/phabricator/article/installation_guide/).\r\n* We receive many reports (significantly more than 50%) from researchers who do not read these rules. To prove that you've read and understood these rules, please include the word \"mongoose\" somewhere in your report. If you do not, your report will be closed as \"Not Applicable\".\r\n\r\nThe Fine Print\r\n==========\r\n\r\n* Responsibly disclose a previously unknown vulnerability directly to us.\r\n* This vulnerability must significantly compromise the security of a typical Phabricator installation.\r\n* Denial of Service and Social Engineering attacks are unlikely to qualify unless particularly clever.\r\n* Vulnerabilities in Phabricator and Arcanist are in scope.\r\n* Vulnerabilities in other bundled dependencies (in `externals/` directories) qualify if they affect a typical Phabricator installation, but are less interesting than vulnerabilities in Phabricator itself.\r\n* Report vulnerabilities only if you are comfortable with full disclosure once the report is closed.\r\n\r\nGetting Started\r\n============\r\n* You can find the source and start looking for vulnerabilities [on GitHub](https://github.com/phacility/phabricator).\r\n* Phabricator has more than 300,000 lines of PHP, so there are probably at least sixty or seventy million security vulnerabilities in the project. Virtually limitless wealth!\r\n\r\nResponse Timeline / End of Life\r\n========\r\n\r\n* Effective June 1, 2021: Phabricator is no longer actively maintained. This program is still monitored, but can no longer offer a specific response timeline.\r\n\r\nBounty Range: ~$300 - $3,000, based on severity. ",
                "profile_picture": "https://profile-photos.hackerone-user-content.com/variants/000/000/018/61446f7e6f0684c8c9f7c36c918b7ecd58183588_original.jpg/91b2506fe54e617e9b2199fff02f67a626ec348f74368200b42055b3004dd8a8",
                "submission_state": "open",
                "triage_active": null,
                "state": "public_mode",
                "started_accepting_at": "2013-12-03T19:32:50.696Z",
                "number_of_reports_for_user": 0,
                "number_of_valid_reports_for_user": 0,
                "bounty_earned_for_user": 0.0,
                "last_invitation_accepted_at_for_user": null,
                "bookmarked": false,
                "allows_bounty_splitting": true,
                "offers_bounties": true,
                "open_scope": null,
                "fast_payments": null,
                "gold_standard_safe_harbor": null
            }
        },
        {
            "id": "22",
            "type": "program",
            "attributes": {
                "handle": "rails",
                "name": "Ruby on Rails",
                "currency": "usd",
                "policy": "Rails is used to power some of the most important sites on the web and its increasing popularity has made it a critical piece of internet infrastructure. If you've found a security bug that could potentially impact the security of these sites, you have our thanks and might be eligible for a cash reward.\n\n## General eligibility\n\nThe scope of the Rails project's HackerOne program is limited to the source code under https://github.com/rails. Please take a look at [our scope page](https://hackerone.com/rails/policy_scopes).\n\n### Out of scope\n\nSome types of issues are out of scope, and may be closed as N/A if a report is opened:\n\n- Regular expression denial of service attacks (ReDOS)\n  - Ruby 3.2's [Regexp.timeout](https://docs.ruby-lang.org/en/master/Regexp.html#method-c-timeout-3D) allows Rails to mitigate these types of attacks.\n- Obviously unsafe sanitizer configurations, such as allowing a default-disallowed tag and/or attribute that is documented to allow javascript\n  - Out-of-scope tags include (but are not limited to) `iframe`, `embed`, `frame`, `frameset`, and `form`.\n  - Out-of-scope attributes include (but are not limited to) `onload`, `animate`, `onfocus`, and `srcdoc`.\n  - Complex combinations of disallowed tags and attributes _may_ be eligible but will be evaluated on a case-by-case basis and will be closed if we deem the combination to be unlikely or obviously insecure.\n\nIn addition, HackerOne's [Core Ineligible Findings](https://docs.hackerone.com/en/articles/8494488-core-ineligible-findings) are out of scope and will be closed as N/A.\n\n## Bounty Qualification\n\nThe Internet Bug Bounty awards security research on Ruby on Rails. If your vulnerability meets the eligibility criteria, you can submit the post-fix information to the IBB for payout. As the IBB supports the whole vulnerability lifecycle, these bounty awards are awarded as an 80/20 split, where 80% will go to you, the finder, and 20% will be given to Ruby on Rails to continue to support the vulnerability remediation efforts.\n\nTo submit eligible vulnerabilities for a payout go to https://hackerone.com/ibb for submission instructions **after the project maintainers have resolved the vulnerability.**\n\nThe project maintainers have final decision on which issues constitute security vulnerabilities. The IBB team will respect their decision, and we ask that you do as well.\n\n### $500 Bonus for a Valid Patch\n\nIf your report includes a correctly formatted patch for the issue you've uncovered, you may be eligible for a $500 bonus when the report is accepted and resolved.\n\nPlease note that your patch will also need to be considered an acceptable solution by the project maintainers.\n\nPatch eligibility requirements are as follows:\n- Patch file created with `git format-patch` or equivalent format.\n- Includes a solution for all relevant supported Rails versions. Details on supported versions available [here](https://guides.rubyonrails.org/maintenance_policy.html#security-issues).\n- Includes regression tests for the reported issue.\n- Patch is accepted and adopted by project maintainers\n\n\nPatches risk being ineligible if any of the stated requirements are not met.\n\n\nYou can learn more about how to contribute to Ruby on Rails [here](https://guides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-code).\n\n## Safe Harbor\n\nAny activities conducted in a manner consistent with this policy will be considered authorized conduct and we will not initiate legal action against you. If legal action is initiated by a third party against you in connection with activities conducted under this policy, we will take steps to make it known that your actions were conducted in compliance with this policy.",
                "profile_picture": "https://profile-photos.hackerone-user-content.com/variants/000/000/022/5e2b46658c8b86bed62f574d8e1793f353cbbc63_original.png/19c85a12ac35f466af1ea2b0ae853bfe5e8f057fb1d6fb62db131707bb67b30d",
                "submission_state": "open",
                "triage_active": null,
                "state": "public_mode",
                "started_accepting_at": "2013-12-03T19:32:50.689Z",
                "number_of_reports_for_user": 0,
                "number_of_valid_reports_for_user": 0,
                "bounty_earned_for_user": 0.0,
                "last_invitation_accepted_at_for_user": null,
                "bookmarked": false,
                "allows_bounty_splitting": true,
                "offers_bounties": true,
                "open_scope": null,
                "fast_payments": null,
                "gold_standard_safe_harbor": null
            }
        },
        {
            "id": "23",
            "type": "program",
            "attributes": {
                "handle": "django",
                "name": "Django",
                "currency": "usd",
                "policy": "Django is used to power some of the most important sites on the web and its increasing popularity has made it a critical piece of internet infrastructure. If you\u2019ve found a security bug that could potentially impact the security of these sites, you have our thanks and might be eligible for a cash reward.\r\n\r\nThe Fine Print\r\n==========\r\n\r\n* Responsibly disclose a previously unknown vulnerability using the HackerOne platform, or directly to us while following our guidelines for [reporting security issues](https://docs.djangoproject.com/en/dev/internals/security/)\r\n* The vulnerability must significantly compromise the security of a typical Django installation.\r\n* Low priority vulnerabilities, such as Denial of Service attacks, are unlikely to qualify.\r\n* Vulnerabilities in dependencies may qualify only if they are exploitable in the context of a typical Django installation.\r\n* You should install Django on a server you own and test locally. Testing against a server without permission is grounds for disqualification. For help, see our [Getting Started Guide](https://docs.djangoproject.com/en/dev/intro/)\r\n* We maintain a detailed [archive of security issues](https://docs.djangoproject.com/en/dev/releases/security/) to provide examples of the type of issues we\u2019re interested in learning about.\r\n* If you\u2019re also a developer, you can optionally send us a patch for the issue. If we end up accepting your patch, we may add an extra bonus to your bounty depending on the complexity and completeness of the patch.\r\n\r\nYOU MAY NOT TEST AGAINST SERVERS YOU DO NOT HAVE EXPLICIT PERMISSION TO TEST. YOU DO NOT HAVE PERMISSION TO SCAN THE DJANGOPROJECT.COM SERVERS.\r\n\r\n**IF YOU TEST AGAINST THE DJANGOPROJECT.COM SERVERS, YOU WILL NOT BE REWARDED ANY BOUNTY.**\r\n\r\nBounty\r\n===========\r\n\r\nThe Django team reserves the right to make the final call on the severity for any issue, but to give you an idea of our priorities, here are some rough ranges, and the types of issues we expect would fall into each range:\r\n\r\nSevere issues\r\n* Remote code execution\r\n* SQL injection\r\n\r\nModerate issues\r\n* XSS\r\n* CSRF\r\n* Broken authentication\r\n\r\nLow severity issues\r\n* Sensitive data exposure\r\n* Broken session management\r\n* Unvalidated redirects/forwards\r\n* Issues requiring an uncommon configuration option\r\n\r\nNo Reward\r\n* Any behavior which is clearly documented\r\n* Any behavior which is the result of deliberate misconfiguration\r\n* Issues in third-party libraries (please report issues directly to the maintainers)\r\n* Issues discovered while scanning without permission\r\n* The OPTIONS header\r\n\r\nThe Internet Bug Bounty awards security research on Django. If your vulnerability meets the eligibility criteria, you can submit the post-fix information to the IBB for payout. As the IBB supports the whole vulnerability lifecycle, these bounty awards are awarded as an 80/20 split, where 80% will go to you, the finder, and 20% will be given to the Django Software Foundation (https://www.djangoproject.com/foundation/) to continue to support the vulnerability remediation efforts.\r\n\r\nTo submit eligible vulnerabilities for a payout go to https://hackerone.com/ibb for submission instructions **after the project maintainers have resolved the vulnerability.**\r\n\r\nThe project maintainers have final decision on which issues constitute security vulnerabilities. The IBB team will respect their decision, and we ask that you do as well.\r\n",
                "profile_picture": "https://profile-photos.hackerone-user-content.com/variants/000/000/023/b457fd4bd71786ab14973cc3d53f9faf4d6c38ea_original.png/19c85a12ac35f466af1ea2b0ae853bfe5e8f057fb1d6fb62db131707bb67b30d",
                "submission_state": "open",
                "triage_active": null,
                "state": "public_mode",
                "started_accepting_at": "2013-12-03T19:32:50.679Z",
                "number_of_reports_for_user": 0,
                "number_of_valid_reports_for_user": 0,
                "bounty_earned_for_user": 0.0,
                "last_invitation_accepted_at_for_user": null,
                "bookmarked": false,
                "allows_bounty_splitting": true,
                "offers_bounties": true,
                "open_scope": null,
                "fast_payments": null,
                "gold_standard_safe_harbor": null
            }
        },
        {
            "id": "41",
            "type": "program",
            "attributes": {
                "handle": "cloudflare",
                "name": "Cloudflare Public Bug Bounty",
                "currency": "usd",
                "policy": "# Our Values\nCloudflare appreciates the work of security researchers and takes security, trust, and transparency seriously. This program was developed to make vulnerability reporting easier and to recognize the efforts of all people striving to help make the Internet a better place.\n\nIf you believe you have found a security vulnerability that could impact Cloudflare or our users, we encourage you to inform us right away. We will investigate all legitimate reports and do our best to quickly fix the problem.\n\n# What we expect from you\nBy participating in this program, you agree to the following program rules and guidelines in addition to HackerOne's [Disclosure Guidelines](https://www.hackerone.com/disclosure-guidelines). Failure to follow these rules will lead to disqualification from the Cloudflare Bug Bounty program.\n\n## Program Rules\n* You must make a good faith effort to avoid privacy violations, destruction of data and interruption or degradation of Cloudflare\u2019s services and products during your research.\n* All attacks must be executed against your own Cloudflare Account. You can sign up for a free Cloudflare account and use it for testing.\n    * Accounts should be created with a `@wearehackerone.com` email address.\n* Do not perform tests against customers of Cloudflare. \n* Once you find a vulnerability, report it and reach out to us before you use the vulnerability to pivot across multiple in-scope assets.\n* Make sure that scanners have a narrow scope set that is [limited to authorized Cloudflare IPs only](https://cloudflare.com/ips). Aggressive, overly broad scans or those which include Cloudflare customer IPs without permission will be considered tests against Cloudflare customers.\n* Do not send unsolicited bulk messages (spam) or unauthorized messages.\n* Do not knowingly post, transmit, upload, link to, or send any program or script that might be considered malicious.\n* If your report is the product of collaboration, please add your collaborators _before the bounty_ is awarded.\n\nAny of the activities below will result in disqualification from the program permanently:\n* Testing against Cloudflare customers, partners, service providers, suppliers, or vendors\n* Social engineering of Cloudflare employees/contractors, including but not limited to: pre-authenticated clickjacking, phishing, impersonating Cloudflare in emails or convincing customer support to do something on behalf of another user\n* Physical attacks against Cloudflare employees/contractors, offices, or data centers\n* Executing Denial of Service attacks against Cloudflare\n\n### Leaked credentials\nCloudflare appreciates researchers who take time to report leaked credentials. If you discover what looks like valid Cloudflare employee, customer or partner credentials, immediately submit a report to Cloudflare who will determine the validity of the leaked credentials. Please do not attempt to verify the validity of the credentials yourself by attempting to authenticate with the credentials. This makes triage more difficult, and will lead to the report being ineligible for a bounty. Additionally, keep in mind that Cloudflare cannot authorize testing against third-parties. **Under no circumstances should you use leaked Cloudflare employee, customer or partner credentials to access non-public information.**\n\n## Submitting a report\nWhen submitting a report, we expect that researchers:\n* Provide detailed reports with reproducible steps. If the report is not detailed enough to reproduce the issue, the issue will not be eligible for a reward.\n* Provide a realistic attack scenario including prerequisites for an attack and expected gains after the exploitation.\n    * Reports without such a scenario, with unrealistic assumptions or without meaningful outcomes will not be eligible for reward.\n    * Example: \"invite an attacker account into your organization\".\n* Submit one vulnerability per report, unless you need to chain vulnerabilities in order to demonstrate impact.\n* Do not store any Cloudflare IP or PII information once the report is submitted.\n\nSubmitting high quality reports is highly encouraged and will speed up the triage and award process. Please address the following bits of information in your report to demonstrate the quality of the vulnerability. Reports that are low quality and unclear will be closed. This recommended format will help you create a report that is in a readable format and contains all the information needed by Cloudflare.\n\n* Affected target, feature, or URL\n* Description of a problem\n* Impact of an issue\n* Steps to reproduce or Proof of Concept\n* Is knowledge of this issue currently public?\n\n# What you can expect from us\n\n## Handling of reports\nCloudflare will make best effort to handle reports within the following time frame. Note that all times are in business days.\n\n| First Response | Triage | Bounty | Resolution |\n| --- | --- | --- | --- |\n| 2 days |\u00a02 days (from first response) |\u00a010 days (from triage) | Depends on severity and complexity |\n\n## Rewards\nWhen duplicates occur, we award only the first report that was received, provided that it can be fully reproduced. If multiple vulnerabilities are caused by one underlying issue, we reserve the right to award only one bounty. All reward decisions are at the sole discretion of Cloudflare.\n\n### Mergers and acquisitions\nWe encourage and appreciate researchers who report vulnerabilities in new Cloudflare products coming through mergers and acquisitions. However, findings are eligible for rewards at Cloudflare's sole discretion.\n\n## Big Bonanza\nWe're excited to announce an exclusive opportunity for our top-tier talent! Researchers who demonstrate excellence by submitting 2 valid critical severity reports or 4 valid high severity reports can request entry into our prestigious Cloudflare VIP Program.\n\nAs a member of the VIP program, you\u2019ll unlock: \n\n\u2728 Access to enterprise features!\n\u2728 Exclusive access to test our cutting-edge Beta products \n\u2728 Opportunity to participate in special bug bounty campaigns \n\u2728 Higher bounty payouts and more!\n\nJoin our VIP program and take your bug hunting to the next level!\n\n## Disclosure\nCloudflare strongly supports coordinated disclosure. Our pledge to you, a vulnerability reporter, is to respond promptly and to fix the vulnerability in the sensible timeframe and in exchange we ask you to coordinate the disclosure with us.\n\nCloudflare aims to resolve all the vulnerabilities within the 90 days and we ask you not to disclose the information before that time. If we won\u2019t be able to uphold that commitment on our end, we will let you know (but the decision if you would like to publish after the 90 days will be yours).\n\nFor some of the submissions we might decide not to treat it as vulnerability or not to issue a bounty. Still, we would like you to coordinate the disclosure with us so we are prepared for it.\n\nOften we decide on the payout before the vulnerability is fixed so the reward is not a payment for your silence. Still, we really want to have a chance to fix the vulnerability before it can be used by a malicious actor. For this reason we ask you to let us know about any plans you might have regarding plans to present your findings in any way (like blog posts, articles, conference presentations etc.)\n\nAt the end of the day the decision on what to disclose and when to disclose it is yours and we would like to support you so feel free to share any drafts of your presentation or article before the publishing so we can even provide some feedback or share it with internal teams.\n\nWe have to mention however, that any actions done in bad faith might result in excluding malicious reporters from the program or, in case of disclosing Cloudflare or Cloudflare customers\u2019 information (like PII, or other sensitive information) might even force us to take legal actions.\n\n# Privacy Policy, Restrictions and Taxes\nCloudflare maintains both a [privacy policy](https://www.cloudflare.com/privacypolicy/) and [transparency report](https://www.cloudflare.com/transparency/). As mentioned in our Privacy Policy, Cloudflare's website and services are not intended for, or designed to attract individuals under the age of 18. Due to the Children's Online Privacy Protection Act (COPPA), we cannot accept submissions from children under the age of 13. Reporters under the age of 18 will not be eligible to receive Cloudflare service rewards. \n\nThis program is not open to any individual on, or anyone residing in any country on, any U.S. sanctions lists. Cloudflare employees and their family members are not eligible for bounties.\n\nThe decision to pay a reward is entirely at our discretion. You must not violate any law. You are responsible for any tax implications or additional restrictions depending on your country and local law. We reserve the right to cancel this program at any time.",
                "profile_picture": "https://profile-photos.hackerone-user-content.com/variants/000/000/041/a819f0d518a4854df667be26210167805f38a6a4_original.png/19c85a12ac35f466af1ea2b0ae853bfe5e8f057fb1d6fb62db131707bb67b30d",
                "submission_state": "open",
                "triage_active": true,
                "state": "public_mode",
                "started_accepting_at": "2014-04-21T18:40:25.858Z",
                "number_of_reports_for_user": 0,
                "number_of_valid_reports_for_user": 0,
                "bounty_earned_for_user": 0.0,
                "last_invitation_accepted_at_for_user": null,
                "bookmarked": false,
                "allows_bounty_splitting": true,
                "offers_bounties": true,
                "open_scope": true,
                "fast_payments": false,
                "gold_standard_safe_harbor": true
            }
        },
        {
            "id": "48",
            "type": "program",
            "attributes": {
                "handle": "mavenlink",
                "name": "Mavenlink",
                "currency": "usd",
                "policy": "Mavenlink makes the security of our product a top priority and we value the role the security community plays in this process. If you believe that you've found a potential security issue in any of our products, please let us know right away. We're committed to working closely with anyone with a desire to help keep users safe.  We investigate all reports.\r\n\r\n# Responsible Disclosure Policy\r\n\r\nIf you give us a reasonable amount of time to respond, verify, and fix your report before making any information public, and you make a good faith effort to avoid privacy violations, destruction of data, or degradation of our service during your research, we will not bring any lawsuit against you or ask law enforcement to investigate you.\r\n\r\n# Security Research Guidance\r\n\r\n* Please conduct your research in a manner that does not negatively impact other users of our service, either by degrading their experience, or by violating their privacy.\r\n* Make a good faith effort to avoid accessing accounts or data that does not belong to you.\r\n* Do not interact with other users without their permission.\r\n* Refrain from using or reporting Denial of Service or Social Engineering attacks.\r\n* Please do not use automated scanners or fuzzers, as they may affect our quality of service.  All security testing must be manual.\r\n* Please do not just copy and paste reports from other closed HackerOne tickets. Make sure you do your own work, and that you verify that a bug is actually valid.\r\n\r\n# Scope of Responsible Research\r\n\r\nPlease **do not** submit the \"Request a Demo\", \"Request Access\", or \"Live Chat\" forms, as they require time from our support and sales teams. Testing of these features is outside the scope of our Responsible Disclosure Policy.\r\n\r\nThe following domains are in scope for this Responsible Disclosure Policy:\r\n\r\n* Our marketing website (https://www.mavenlink.com)\r\n* Our main application (https://app.mavenlink.com)\r\n* Our HTML5 mobile app (https://m.mavenlink.com)\r\n* Our API (https://api.mavenlink.com)\r\n\r\nVulnerabilities in scope include:\r\n* XSS vulnerabilities\r\n* Missing CSRF tokens\r\n* Remote code execution\r\n* Unauthorized data access\r\n* Any other attack that can likely result in unauthorized access to our systems' or users\u2019 data\r\n\r\nPlease note that the following techniques and issues are not currently in scope:\r\n* Bugs that affect only legacy browsers\r\n* Attacks that require the use of the \"Email messages and files to your project\" feature\r\n* Potential attacks that would require direct access to a user's computer\r\n* Attacks that would require exceedingly unlikely user interaction\r\n* Denial of service attacks\r\n* Social engineering attacks\r\n* Minor information leakage (such as web server version)\r\n* Insecure cookies (all necessary cookies are marked as secure)\r\n* Clickjacking on the login page\r\n* Ratelimiting\r\n\r\nThe following domains are not currently in scope:\r\n* start.mavenlink.com\r\n* learn.mavenlink.com\r\n* go.mavenlink.com\r\n* blog.mavenlink.com\r\n* mavengineering.com\r\n* mavenlink.zendesk.com\r\n\r\nWe are mainly interested in specific security bugs. While you are welcome to submit \"best practices\", chances are that we are already aware of and have considered them.\r\n\r\n# Getting a test account\r\n\r\nIn order to test our full feature set, we recommend [signing up for a free trial Premier account](https://www.mavenlink.com/signup/premier?utm_campaign=hackerone).\r\n\r\n# Thanks!\r\n\r\nWe believe in giving credit where credit is due. If our customers end up more secure as a result of your work, we'll credit your discovery in our [Security Hall of Fame](https://hackerone.com/mavenlink/thanks). We may also offer small bounties at our discretion.\r\n\r\n# Duplicate reports\r\n\r\nIf more than one person submits the same issue the recognition will go to the first reporter. Please see the [HackerOne guidelines](https://hackerone.com/guidelines) for more info.\r\n\r\n# About Mavenlink\r\n\r\nMavenlink delivers enterprise-grade Software as a Service (SaaS) that transforms how businesses work with distributed teams, contractors and clients around the globe. Mavenlink's innovative technology suite enables organizations of any size to successfully manage and scale their people, projects, revenue and profitability. Consulting firms, creative agencies and professional services teams in more than 100 countries are running their businesses more efficiently and more elegantly with Mavenlink. Learn more at www.mavenlink.com.\r\n",
                "profile_picture": "https://profile-photos.hackerone-user-content.com/variants/000/000/048/f0b795a31dcd39219030322524224cd0b61cc45e_original.png/19c85a12ac35f466af1ea2b0ae853bfe5e8f057fb1d6fb62db131707bb67b30d",
                "submission_state": "paused",
                "triage_active": null,
                "state": "public_mode",
                "started_accepting_at": "2014-06-02T22:00:58.915Z",
                "number_of_reports_for_user": 0,
                "number_of_valid_reports_for_user": 0,
                "bounty_earned_for_user": 0.0,
                "last_invitation_accepted_at_for_user": null,
                "bookmarked": false,
                "allows_bounty_splitting": true,
                "offers_bounties": true,
                "open_scope": null,
                "fast_payments": null,
                "gold_standard_safe_harbor": null
            }
        },
        {
            "id": "55",
            "type": "program",
            "attributes": {
                "handle": "wordpress",
                "name": "WordPress",
                "currency": "usd",
                "policy": "[WordPress](https://wordpress.org/) is an open-source publishing platform. Our HackerOne program covers the Core software, as well as a variety of related projects and infrastructure.\r\n\r\nOur most critical targets are:\r\n\r\n* WordPress Core [software](https://wordpress.org/download/source/), [API](https://codex.wordpress.org/WordPress.org_API), and [website](https://wordpress.org/).\r\n* Gutenberg [software](https://github.com/WordPress/gutenberg/) and Classic Editor [software](https://wordpress.org/plugins/classic-editor/).\r\n* WP-CLI [software](https://github.com/wp-cli/) and [website](https://wp-cli.org/).\r\n* BuddyPress [software](https://buddypress.org/download/) and [website](https://buddypress.org/).\r\n* bbPress [software](https://bbpress.org/download/) and [website](https://bbpress.org/).\r\n* GlotPress [software](https://github.com/glotpress/glotpress-wp) (but not the website).\r\n* WordCamp.org [website](https://central.wordcamp.org).\r\n\r\nSource code for most websites can be found in [our GitHub account](https://github.com/WordPress/), or in the Meta repository (`git clone git://meta.git.wordpress.org/`). Many of the sites have Docker environments that will automatically provision a local copy for you to test against.\r\n\r\nFor more targets, see the `In Scope` section below.\r\n\r\n**All bounties are doubled** [if they're reported before the bug is released to users](https://make.wordpress.org/security/2019/02/13/doubling-bounties-for-vulnerabilities-discovered-before-release/).\r\n\r\n\r\n*Please note that __WordPress.com is a separate entity__ from the main WordPress open source project. Please report vulnerabilities for WordPress.com or the WordPress mobile apps through [Automattic's HackerOne page](https://hackerone.com/automattic).*\r\n\r\n## Qualifying Vulnerabilities\r\n\r\nAny reproducible vulnerability that has a severe effect on the security or privacy of our users is likely to be in scope for the program. Common examples include XSS, CSRF, SSRF, RCE, SQLi, and privilege escalation.\r\n\r\nWe generally **aren\u2019t** interested in the following problems:\r\n\r\n* Any vulnerability with a [CVSS 3](https://www.first.org/cvss/calculator/3.0) score lower than `4.0`, unless it can be combined with other vulnerabilities to achieve a higher score.\r\n* Brute force, DoS, phishing, text injection, or social engineering attacks. Wikis, Tracs, forums, etc are intended to allow users to edit them.\r\n* Availability of XML-RPC file without PoC demonstrating a significant security impact. As noted above, this excludes DDoS and brute force attacks.\r\n* Security vulnerabilities in WordPress plugins not *specifically* listed as an in-scope asset. Out of scope plugins can be [reported to the Plugin Review team](https://developer.wordpress.org/plugins/wordpress-org/plugin-developer-faq/#how-can-i-send-a-security-report).\r\n* Reports for hacked websites. The site owner can [learn more about restoring their site](https://make.wordpress.org/core/handbook/testing/reporting-security-vulnerabilities/#ive-been-hacked-what-do-i-do-now).\r\n* [Users with administrator or editor privileges can post arbitrary JavaScript](https://make.wordpress.org/core/handbook/testing/reporting-security-vulnerabilities/#why-are-some-users-allowed-to-post-unfiltered-html)\r\n* Self-XSS issues **within wp-admin** requiring users with `unfiltered_html` capability are not under the scope of this program. For example, script execution within `/wp-admin` as an administrator or editor on a single-site installation. Only the cases where a less-privileged user is able to execute XSS attacks on a higher-privileged user will be under the bug bounty scope.\r\n* [Disclosure of user IDs](https://make.wordpress.org/core/handbook/testing/reporting-security-vulnerabilities/#why-are-disclosures-of-usernames-or-user-ids-not-a-security-issue)\r\n* Open API endpoints serving public data (Including [usernames and user IDs](https://make.wordpress.org/core/handbook/testing/reporting-security-vulnerabilities/#why-are-disclosures-of-usernames-or-user-ids-not-a-security-issue))\r\n* [Path disclosures for errors, warnings, or notices](https://make.wordpress.org/core/handbook/testing/reporting-security-vulnerabilities/#why-are-there-path-disclosures-when-directly-loading-certain-files)\r\n* WordPress version number disclosure\r\n* Mixed content warnings for passive assets like images and videos\r\n* Lack of HTTP security headers (CSP, X-XSS, etc.)\r\n* Output from automated scans - please manually verify issues and include a valid proof of concept.\r\n* Any non-severe vulnerability on `irclogs.wordpress.org`, `lists.wordpress.org`, or any other low impact site.\r\n* Clickjacking with minimal security implications\r\n* Vulnerabilities in Composer/NPM `devDependencies`, unless there's a practical way to exploit it remotely.\r\n* Theoretical vulnerabilities where you can't demonstrate a significant security impact with a PoC.\r\n\r\n## Guidelines\r\n\r\nWe're committed to working with security researchers to resolve the vulnerabilities they discover. You can help us by following these guidelines:\r\n\r\n* Follow [HackerOne's disclosure guidelines](https://www.hackerone.com/disclosure-guidelines).\r\n* Pen-testing Production:\r\n  * Please **setup a local environment** instead whenever possible. Most of our code is open source (see above).\r\n  * If that's not possible, **limit any data access/modification** to the bare minimum necessary to reproduce a PoC.\r\n  * ***Don't* automate form submissions!** That's very annoying for us, because it adds extra work for the volunteers who manage those systems, and reduces the signal/noise ratio in our communication channels.\r\n * If you don't follow these guidelines **we will not award a bounty for the report.**\r\n* Be Patient - Give us a reasonable time to correct the issue before you disclose the vulnerability. We care deeply about security, but we're an open-source project and our team is mostly comprised of volunteers.  WordPress powers 40% of the Web, so changes must undergo multiple levels of peer-review and testing, to make sure that they don't break millions of websites when they're installed automatically.\r\n\r\nWe also expect you to comply with all applicable laws. You're responsible to pay any taxes associated with your bounties.",
                "profile_picture": "https://profile-photos.hackerone-user-content.com/variants/000/000/055/f114d1d31f904e3b903cd99a6cf566bb531f8401_original.jpg/91b2506fe54e617e9b2199fff02f67a626ec348f74368200b42055b3004dd8a8",
                "submission_state": "open",
                "triage_active": null,
                "state": "public_mode",
                "started_accepting_at": "2016-07-23T00:29:17.952Z",
                "number_of_reports_for_user": 0,
                "number_of_valid_reports_for_user": 0,
                "bounty_earned_for_user": 0.0,
                "last_invitation_accepted_at_for_user": null,
                "bookmarked": false,
                "allows_bounty_splitting": true,
                "offers_bounties": true,
                "open_scope": null,
                "fast_payments": null,
                "gold_standard_safe_harbor": null
            }
        },
        {
            "id": "56",
            "type": "program",
            "attributes": {
                "handle": "vimeo",
                "name": "Vimeo",
                "currency": "usd",
                "policy": "#Vimeo's Bug Bounty Program Policy\r\n\r\nVimeo engineers work hard to ensure that our site and users are 100% safe and sound. We greatly respect the work of security experts everywhere and strive to stay up to date with the latest security techniques. But nobody's perfect. Should you encounter a security vulnerability in one of our products, we want to hear from you.\r\n\r\nBefore\ufeff submitting a report, please review our guidelines below as to what constitutes a security vulnerability and how we'd like you to go about finding them. Once you've filed a report, we promise to work expeditiously to evaluate and resolve any valid bugs. \r\n\r\nBounties are awarded based on merit at our discretion.\r\n\r\n &nbsp;\r\n &nbsp;\r\n\r\n# Table of Contents\r\n* [About Vimeo](#user-content-about-vimeo)\r\n* [Rules](#user-content-rules)\r\n* [Rules for us](#user-content-rules-for-us)\r\n* [Triage and Payout Process](#user-content-triage-and-payout-process)\r\n* [Criteria for premium accounts](#user-content-criteria-for-premium-accounts)\r\n* [Qualifying vulnerabilities (in-scope)](#user-content-qualifying-vulnerabilities-in-scope)\r\n* [Non-qualifying vulnerabilities (out-of-scope)](#user-content-non-qualifying-vulnerabilities-out-of-scope)\r\n* [Disclosure Policy](#user-content-disclosure-policy)\r\n* [Safe Harbor](#user-content-safe-harbor)\r\n \r\n &nbsp;\r\n &nbsp;\r\n\r\n# About Vimeo\r\n\r\nVimeo is a website for creating, hosting, sharing, and publishing videos for audiences to stream. We have many similarities to YouTube, but our revenue model is completely different (eg. our videos are ad-free, we charge content creators, etc.).\r\n\r\nOur company has 6 different components:\r\n- vimeo.com\r\n- vhx.tv (also known as \"OTT\")\r\n- livestream.com\r\n- magisto.com\r\n- wirewax.com \u2014\u00a0**out-of-scope**\r\n- wibbitz.com \u2014\u00a0**out-of-scope**\r\n\r\nPlease note that, previously, Vhx, Magisto, and Livestream each had their own separate bug bounty programs within HackerOne. We have now merged those three programs into the main Vimeo program.\r\n\r\n &nbsp;\r\n &nbsp;\r\n\r\n#Rules\r\n\r\n**Requirements for your submission to be eligible for a bounty reward:**\r\n- **You must demonstrate a vulnerability with proof/evidence.** When hunting for bugs and when providing evidence, please only use your own accounts. Do not use or access other people\u2019s data or accounts at any time.\r\n- **You must be the \u201cfirst reporter.\u201d** Please understand that we have an active security team that does regular internal testing and contracts out for pentests often. As such, we often find and fix issues on our own. If our internal security team or our pentesters or our developers happen to find the same issue before you find it, they will count as the \u201cfirst reporter\u201d and your report will be considered a duplicate.\r\n- **The underlying issue must be unique**, ie. multiple vulnerabilities caused by one underlying issue will be awarded one bounty.\r\n- **Your report must be in scope.** Please look over the scope table at the end of this policy before submitting a report. We want to help reduce your risk of submitting an out-of-scope report that could hurt your Signal, as well as reduce noise in our inbox.\r\n\r\n**Suggestions to ensure fast processing and maximum bounty:**\r\n- Communicate respectfully and professionally at all times\r\n- Provide detailed reproducible steps. This is important.\r\n- Explain the potential impact\r\n- Submit only one vulnerability per report, unless you need to chain vulnerabilities to provide impact.\r\n- We strongly encourage providing a video POC for each finding, although it is not required. If you do provide one, please upload the video in a file format that is supported by the [H1 embedded player](https://docs.hackerone.com/programs/using-markdown.html#inline-images-and-video) (e.g. `.mp4`, `.mov`, `.webm`, etc, but not `.avi`).\r\n\r\n**Your report does not necessarily need to include a full exploit.** Did you come across a spicy bug that has a good impact, but you\u2019re missing one or two pieces needed to complete the exploit? Send it our way, we\u2019d be happy to take a look and might even consider it without it being fully complete.\r\n\r\n**DO NOT use automated tools or scanners.** Reports as such will be closed as N/A.\r\n\r\n**DO NOT DDoS** or otherwise attack us in a way that would disrupt service for our customers.\r\n\r\n**DO NOT disclose** or discuss any vulnerability, even resolved ones, outside of the program at any time without express consent from Vimeo. Please see our Disclosure Policy below for instructions on requesting permission for disclosure. \r\n\r\n**DO NOT attempt to access other people's private data or accounts.** Basic Vimeo accounts are free, so setting up example cases with throwaway accounts should be easy.\r\n- We highly recommend that you sign up for any throwaway accounts using your *@wearehackerone.com*  email address. [Learn more here](https://docs.hackerone.com/hackers/hacker-email-alias.html). This helps us distinguish between bug bounty hunters and actual malicious actors. We\u2019ll be less likely to flag or suspend your Vimeo account(s).\r\n\r\n &nbsp;\r\n &nbsp;\r\n\r\n#Rules for us\r\nVimeo and HackerOne will make their best efforts to meet the following SLAs for hackers participating in our program:\r\n- HackerOne aims to complete initial triage within 2 days after you submit your report\r\n- Vimeo will complete the final triage within 3 business days after the H1 triage\r\n- Vimeo will award the full bounty immediately once we confirm that it\u2019s not a duplicate and we intend to fix it\r\n\r\n &nbsp;\r\n &nbsp;\r\n\r\n#Triage and Payout Process\r\nVimeo is a HackerOne-managed program. HackerOne currently has a commitment to complete initial triage within 2 days after you submit your report. Once they finish the initial triage, they will pass the report back to Vimeo so that we may conduct the final triage. Items in the *Triaged* state alone will NOT be considered accepted until Vimeo makes a final decision, which we will signify with a full bounty payout.\r\n\r\nPlease be aware that, even if the HackerOne team has triaged a ticket, the Vimeo team may potentially close the ticket at any time with no payout, eg. if we discover that it is a duplicate or if we decide not to fix the issue. Further note that if the report is a duplicate, we may potentially not provide any links to the original ticket, especially if the original reporter would prefer that their report be kept private or if the original ticket exists within our internal ticketing system.\r\n\r\n &nbsp;\r\n &nbsp;\r\n\r\n#Criteria for premium accounts\r\nBasic Vimeo accounts are free, but Vimeo offers additional features to our customers via our [paid plans](https://vimeo.com/upgrade). We\u2019d like to give our bug bounty researchers access to these paid plans free of charge so that they may test all the extra functionality that is available only in those plans.\r\n\r\nTo be eligible for a paid account, you must meet at least one of the following qualifications:\r\n- 1 Critical severity submission accepted\r\nOR \r\n- 2 High or higher severity submissions accepted\r\nOR\r\n- 3 Medium or higher severity submissions accepted\r\n\r\n &nbsp;\r\n &nbsp;\r\n\r\n#Qualifying vulnerabilities (in-scope) \r\nPlease take the time to provide a clear proof of concept that shows how a particular vulnerability is exploitable. You must be able to reproduce the issue on request with your account(s). Use the following table to categorize security issues. \r\n\r\nHowever, note that your report does not necessarily need to include a full exploit. Did you come across a spicy bug that has a good impact, but you\u2019re missing one or two pieces needed to complete the exploit? Send it our way \u2014 we\u2019d be happy to take a look and might even consider it without it being fully complete.\r\n\r\n*Note: Non-listed vulnerabilities may also be eligible. Some vulnerability types may fall under a variety of severity ratings determined by the scope/scale of exploitation and impact.*\r\n\r\n| Severity (Minimum) | Severity (Maximum) | Vulnerability Type                                       | Bug Examples                                                                            |   |\r\n|--------------------|--------------------|----------------------------------------------------------|-----------------------------------------------------------------------------------------|---|\r\n| Critical           | Critical           | OS Shell Execution                                       | Remote Code Execution; Code Injection; OS Command Injection                             |   |\r\n| Medium             | Critical           | SQL Injection                                            | SQL Injection (Inband SQLi; Blind SQLi)                                                 |   |\r\n| Medium             | Critical           | Server-Side Request Forgery                              | SSRF (unrestricted); Content-Restricted SSRF; Error-based SSRF (true/false); Blind SSRF |   |\r\n| Low                | Critical           | Incorrect Permission Assignment                          | IDOR; Horizontal Privilege Escalation; Vertical Privilege Escalation                    |   |\r\n| High               | Critical           | Improper Restriction of XML External Entity Reference    | XXE                                                                                     |   |\r\n| High               | Critical           | Uncontrolled Format String                               | Insecure Deserialisation                                                                |   |\r\n| Medium             | High               | Inconsistent Interpretation of HTTP Requests             | HTTP Request Smuggling                                                                  |   |\r\n| Low                | Critical           | Inclusion of Functionality from Untrusted Control Sphere | Server Side Includes Injection; Local File Inclusion; Directory Traversal               |   |\r\n| Low                | Critical           | Missing Authentication for Critical Function             | Exposed Administrative Interface                                                        |   |\r\n| Low                | Critical           | Information Exposure                                     | Exposure of PII; Credentials on GitHub; Confidential Information Exposure               |   |\r\n| Low                | Critical           | Incorrect Authorization                                  | Authorization Bypass; Account Takeover                                                  |   |\r\n| Medium             | Medium             | Download of Code Without Integrity Check                 | S3 Bucket Upload                                                                        |   |\r\n| Medium             | High               | Cross-Site Scripting                                     | Different type of XSS                                                                   |   |\r\n| Low                | High               | Cross-Site Request Forgery                               | State-Changing CSRF; Non-State-Changing CSRF                                            |   |\r\n| Low                | Medium             | Misconfiguration                                         | Subdomain Takeover; Dangling DNS Record                                                 |   |\r\n| Low                | Medium             | CRLF Injection                                           | CRLF Injection                                                                          |   |\r\n\r\n &nbsp;\r\n &nbsp;\r\n\r\n#Non-qualifying vulnerabilities (out-of-scope)\r\n- User enumeration\r\n- Open redirect (Unless chained to show an impact)\r\n- Reports from automated tools or scans\r\n- Missing rate limits, unless it can lead to account takeover\r\n- Missing cookie flags on non-sensitive cookies\r\n- Logout CSRF attacks (unless chained to show an impactful exploit)\r\n- Reports of insecure SSL/TLS ciphers (unless you have a working proof of concept -- and not just a report from a scanner)\r\n- Reports of insecure crossdomain.xml configuration (again, unless you have a working proof of concept and not just a report from a scanner)\r\n- Reports of window.opener redirects\r\n- Open SMTP redirects (just because it looks like you can use our servers doesn't mean it's true-- unless you have a PoC)\r\n- Email-related attacks including spoofing or any issues related to SPF, DKIM or DMARC\r\n- Clickjacking on static websites\r\n- Content spoofing/text injection\r\n- Use of a known vulnerable library (without evidence of exploitability)\r\n- Vulnerabilities affecting users of outdated browsers or platforms\r\n- Social engineering attacks\r\n- Missing HTTP security headers (unless you deliver a proof of concept that leverages their absence)\r\n- Self-XSS \r\n- Denial of service attacks, do not perform them\r\n- 3rd party sites used by Vimeo\r\n- Subdomain takeovers where someone has signed up for an account, forwarded to an external site that doesn't exist/can be compromised\r\n- RCE on sites that link or are redirected from Vimeo\r\n- Exploits that require the attacker to have access to the user\u2019s device or external account (phone, laptop, email, 2FA token, etc)\r\n- Issues where the user\u2019s device or account (phone, laptop, email, etc) has been rooted, malwared, bot'd, etc.\r\n\r\n &nbsp;\r\n &nbsp;\r\n\r\n#Disclosure Policy\r\nVimeo understands that disclosure helps the infosec community and strengthens your professional reputation.\r\n \r\n###Rules\r\n \r\n- If you wish to disclose a specific issue, you must receive explicit prior approval from Vimeo.\r\n- Please do not discuss any vulnerabilities, even resolved ones, outside of the program at any time without express consent from Vimeo.\r\n \r\n###How to request permission\r\nPlease request permission for disclosure by commenting on the report within HackerOne, and we\u2019ll kick off an internal disclosure process promptly.\r\n \r\n###Restrictions\r\n- Vimeo reserves the right to approve or deny any request for disclosure for any reason and at our sole discretion.\r\n- Only Resolved reports requested by the original reporter are eligible for disclosure. All other reports (Informative, NA, Spam) are not eligible for disclosure of any kind, in or outside the HackerOne platform.-\r\n- Duplicate reports are not eligible for disclosure. Only the original reporter is eligible for disclosure\r\n \r\nShould a researcher break any disclosure or program policies, that researcher shall no longer be protected under Safe Harbor and will be subject to legal action at our discretion. Furthermore, failure to comply with these rules may result in a program ban for all company properties.\r\n \r\nIn addition to these rules, please also follow [HackerOne's disclosure guidelines](https://www.hackerone.com/disclosure-guidelines)\r\n\r\n &nbsp;\r\n &nbsp;\r\n\r\n# Safe Harbor\r\nThank you for helping Vimeo, Inc. and its subsidiaries (\u201cVimeo\u201d). Vimeo provides this Safe Harbor Statement to encourage and facilitate research using HackerOne\u2019s bug bounty program to help us identify bugs and vulnerabilities.\r\n\r\nWe authorize access to our owned-and-operated systems, services, and applications for the purpose of conducting research consistent with HackerOne\u2019s then-current policies. We will not consider your good faith activities in this regard to violate applicable criminal or civil laws (even if those activities inadvertently exceed the scope of our authorization), such as the Digital Millennium Copyright Act or Computer Fraud and Abuse Act, and we will not commence legal action with respect to such activities.\r\n\r\nIf legal action is commenced against you as a result of your good faith activities, Vimeo will take steps to make it known to parties commencing such action that your activities were conducted in accordance with this Safe Harbor Statement.\r\n\r\nTo the extent that our applicable online terms of service are inconsistent with this Safe Harbor Statement, then this Safe Harbor Statement shall control.\r\n\r\nPlease note that this Safe Harbor Statement does not extend to systems, services, and applications that we do not control.\r\n\r\nWe encourage you to contact us if you have questions regarding the scope of this Safe Harbor Statement. You may do so through HackerOne or by emailing us at bugbounty@vimeo.com.\r\n\r\n**Thanks for helping us fight the good fight!**\r\n\r\n",
                "profile_picture": "https://profile-photos.hackerone-user-content.com/variants/000/000/056/c3188aa0fc4a95fd486b5ee1f4b2d0b90da111d3_original.png/19c85a12ac35f466af1ea2b0ae853bfe5e8f057fb1d6fb62db131707bb67b30d",
                "submission_state": "open",
                "triage_active": true,
                "state": "public_mode",
                "started_accepting_at": "2014-11-10T16:49:49.050Z",
                "number_of_reports_for_user": 0,
                "number_of_valid_reports_for_user": 0,
                "bounty_earned_for_user": 0.0,
                "last_invitation_accepted_at_for_user": null,
                "bookmarked": false,
                "allows_bounty_splitting": true,
                "offers_bounties": true,
                "open_scope": null,
                "fast_payments": null,
                "gold_standard_safe_harbor": null
            }
        },
        {
            "id": "58",
            "type": "program",
            "attributes": {
                "handle": "linkedin",
                "name": "LinkedIn",
                "currency": "usd",
                "policy": "#Introduction\r\n\r\nLinkedIn believes that close partnerships with security researchers makes us all more secure. Security researchers play an integral role in our ecosystem by discovering vulnerabilities that went undiscovered during the software development process. We partner with security researchers to better protect our millions of members worldwide.\r\n\r\nIf you are a security researcher that has found a vulnerability on LinkedIn, we want to hear from you. You can submit a report by clicking on \u201cSubmit Report\u201d on this page. And if your report affects a product or service that is within the scope of our bounty program, you may receive a bounty award. \r\n\r\n##Guidelines\r\n* We want to award you for your research: Submissions that contain steps to reproduce your proof of concept along with a detailed analysis are eligible for quicker awards because they help us quickly assess the risk posed by a vulnerability.\r\n* We are looking for new and novel vulnerabilities: Your contributions help us address vulnerabilities we did not discover during the development process or do not already know about. If you are the first external researcher to identify a vulnerability we already know about and are working to fix, you may still be eligible for a bounty award if there is new information within your report that we were previously not aware of.\r\n* Avoid harm to member data, privacy, and service availability: Since security research may depend on services that our members use and depend on, avoid research that violates member privacy, destroys data, or interrupts service. If you discover confidential member data while researching, stop and contact us immediately so we can work with you to address the issue.\r\n* Follow the disclosure process: If you find a vulnerability, report it to us privately and give us the opportunity to correct it and protect our members. We work on reports diligently in order to address them quickly, and in recognition of your partnership we offer bounty awards and will acknowledge your contributions when the vulnerability is fixed.\r\n\r\n##Bug Bounty Program Rules\r\nPlease review the program rules carefully before you submit a bug report. By participating in LinkedIn\u2019s Bug Bounty program, you agree to be bound by these rules.\r\nAs part of our security program at LinkedIn, we recognize and encourage responsible security research into our LinkedIn applications.\r\n\r\n##What Qualifies?\r\nImplementation and design issues that substantially impact LinkedIn members\u2019 data or LinkedIn infrastructure are within scope. Examples of these would include:\r\n* Cross-site scripting\r\n* Cross-site request forgery\r\n* SQL injection\r\n* Authentication flaws (website, mobile, or API)\r\n* Access control issues that impact member-to-member communications or other data that is not shared with connections\r\n* Server-side code execution bugs\r\n\r\n##Bugs that do NOT qualify:\r\n* Issues with profile visibility (except access control issues mentioned above)\r\n* Open redirects involving usage of LinkedIn\u2019s built-in redirectors\r\n* Bugs requiring unlikely user interaction or rely on social engineering\r\n* Issues that disclose information about our infrastructure such as version numbers or banners\r\n* Denial of Service\r\n* Clickjacking without demonstrable security impact\r\n* General best practices related to CSP policies, lack of specific security headers, etc.\r\n* Vulnerabilities affecting users of outdated browsers or platforms\r\n* Physical attempts against LinkedIn property or data centers\r\n* Accessing content directly from our CDN (Content Delivery Network)\r\n* Sending messages or invitations to anyone on LinkedIn\r\n* Content injection issues\r\n* Password complexity issues for members\r\n* Logout cross-site request forgery\r\n* Social engineering of LinkedIn employees or contractors\r\n* Mobile security issues that require that the attacker has physical access to the device or that the phone is rooted or jailbroken\r\n\r\n##Rules\r\n* All researchers over 16 years old who may otherwise legally participate in such programs, who are not rendered ineligible by their employer, and who were not previously excluded from the program are eligible.\r\n* The vulnerability must be described in a manner that allows LinkedIn to reproduce the problem. Submissions that contain steps to reproduce your proof of concept along with a detailed analysis or working exploit are eligible for quicker awards because they help us quickly assess the risk posed by a vulnerability.\r\n* Researchers must respect our services and our members\u2019 privacy. They must not: (i) degrade, interrupt, or deny service to our users; (ii) modify, delete, or otherwise misuse LinkedIn member data, nor access non-public member information without authorization; (iii) make threats nor demand money/payments in exchange for disclosing vulnerabilities; (iv) publicly disclose vulnerabilities without responsibly disclosing and receiving written approval from LinkedIn first; or (v) otherwise violate LinkedIn\u2019s [User Agreement](https://www.linkedin.com/legal/user-agreement). Any non-public member data inadvertently accessed must be promptly deleted, reported to LinkedIn, and may not be used for any purpose.\r\n* For every report, we will endeavor to: (i) acknowledge the vulnerability report within 48 hours of receipt; (ii) provide a time frame for fixing the issue; and (iii) provide notification that the issue has been fixed. Our  review time will vary depending on the complexity and completeness of your submission. Note that you may be paid before the issue is fixed, and payment is not notification of fix completion.\r\n\r\nIf you do not agree to these Terms, do not send us any submissions or otherwise participate in this program.\r\n\r\n##Disclosure Policy\r\nProtecting our members is critically important to us so we strive to address each report in a timely manner. While we are addressing the report, we require that all submissions remain confidential and are not disclosed to anyone else.\r\n\r\nAny information you receive or collect about us, our members, employees, or customers must be kept confidential and only used in connection with the Bug Bounty Program. Researchers must not sell the vulnerability or any of its details to other parties, and must not share, distribute, or discuss the vulnerability or any of its details with any other parties until the vulnerability fix has been released, verified, and confirmed by us.\r\n\r\nAny public disclosures should only occur after the vulnerability has been resolved and written approval has been provided by the LinkedIn team through the HackerOne platform. Only valid security vulnerabilities, as determined by LinkedIn, will be approved for disclosure. Failure to comply with the Disclosure Policy will result in immediate disqualification from the Bug Bounty Program and ineligibility from receiving any Bounty Payments.\r\n\r\n##Rewards & Recognition\r\nWe may choose to award a bounty for impactful vulnerabilities that are disclosed in accordance with these rules.\r\n\r\nOur minimum reward is $100. Clever, unusual, or severe vulnerabilities may qualify for higher award amounts. LinkedIn will decide, in its sole discretion, how much to award for any reported vulnerability and whether a reported vulnerability is the same or similar to one previously reported. LinkedIn\u2019s decision is final.\r\n\r\nLinkedIn will typically pay for bounties based on the severity of the issue. Bugs of similar nature reported by the same person may be combined into one item, thus constituting only a single award.\r\n\r\nWe will publicly recognize contributors to the program who submitted qualified bugs, whether or not a bounty was paid.\r\n\r\n##Reservation of Rights\r\nLinkedIn reserves the right to change or cancel this program at any time. The decision to pay a reward is entirely at our discretion. This offer is void where prohibited by law, and the participant must not violate any law.\r\n\r\n##Safe Harbor\r\nAny activities conducted in a manner consistent with this policy will be considered authorized conduct and we will not initiate legal action against you.\r\n\r\n\r\n",
                "profile_picture": "https://profile-photos.hackerone-user-content.com/variants/000/000/058/3aaa858b18e9807c5c1fea0c559156568a6647cc_original.png/19c85a12ac35f466af1ea2b0ae853bfe5e8f057fb1d6fb62db131707bb67b30d",
                "submission_state": "open",
                "triage_active": true,
                "state": "public_mode",
                "started_accepting_at": "2014-10-16T00:09:08.122Z",
                "number_of_reports_for_user": 0,
                "number_of_valid_reports_for_user": 0,
                "bounty_earned_for_user": 0.0,
                "last_invitation_accepted_at_for_user": null,
                "bookmarked": false,
                "allows_bounty_splitting": true,
                "offers_bounties": true,
                "open_scope": null,
                "fast_payments": null,
                "gold_standard_safe_harbor": null
            }
        },
        {
            "id": "59",
            "type": "program",
            "attributes": {
                "handle": "priceline",
                "name": "Priceline",
                "currency": "usd",
                "policy": "# Welcome to Priceline's Bug Bounty Program\nPriceline is committed to collaborating with security experts across the globe to stay up-to-date with the latest security developments. If you have discovered a security issue that you believe requires our attention, please submit a report, and our team will make every effort to resolve the vulnerability. We look forward to working with you. \n\n---\n##\n# Announcement\n* Priceline has a brand new AI assistant called Penny, who is there to help our customers with their travel-related bookings. You can find Penny on `https://www.priceline.com/penny`, and on many other pages (located at the bottom-right corner) where the bot performs page-specific functions. Help us test it out, we're happy to accept any vulnerability found within our [Policy Guidelines for Penny](#user-content-guidelines-for-penny).\n* Any security issues that could be escalated or exploited due to missing security flags for sessions or cookies are already known to us, as we are addressing them internally. As a result, you might see a change in the severity of such reported issues or find them listed as known issues (Informative).\n* `*.priceline.com` is in scope. However, the decision of the program to reward any reported asset under it will be dependent on the impact of the reported issue and the purpose of the reported asset.\n\n---\n##\n# Rules of Engagement\n\n# Program Rules\nWhile we want our hackers to perform at their best, we also want to ensure that there is minimal disruption to our business. On that note, please observe the following:\n* Submit only one vulnerability per report, unless multiple vulnerabilities need to be chained together to highlight the overall impact.\n* The severity of the issue will be determined based on its final impact and will be evaluated and adjusted by the Priceline team as needed.\n* Public disclosure of submitted report(s) is strictly not allowed.\n* When duplicates occur, we only award the first report that was received (provided that it can be fully reproduced).\n* Multiple vulnerabilities caused by one underlying issue will be awarded one bounty.\n* Social engineering (e.g. phishing, vishing, smishing) is prohibited.\n* Make a good faith effort to avoid privacy violations, destruction of data, and interruption or degradation of our service. Only interact with accounts you own or with the explicit permission of the account holder. You must adhere to [HackerOne's Disclosure Guidelines](https://docs.hackerone.com/organizations/disclosure.html#gatsby-focus-wrapper).\n* We cannot reward or do business with any individual on any U.S sanction lists or any individual residing in any country on any U.S. sanctions lists. This includes residents of Russia, Cuba, Sudan, North Korea, Iran or Syria.\n* Severity level is based on the CVSS scoring model; exceptions are granted at the sole discretion of the Priceline security team. Here is some more information on the [CVSS scoring system](https://docs.hackerone.com/organizations/environmental-score.html#how-the-calculation-works).\n* Subdomain takeover reports for out-of-scope Priceline assets will be accepted. However, the bounty reward might differ from the bounty table, as this is at our discretion. Third-party assets will not be eligible for bounty, although we may award a bonus at our discretion.\n\n# Testing Rules\n* Do not attempt to access private customer information. If you have accessed such information to support a finding, please do not misuse it. Instead, report it so we can address the issue.\n* Never attempt to view, modify, or damage information that belongs to other customers. If you need to test a vulnerability that involves accessing / modifying data of other users, create two accounts on Priceline.\n* Do not attempt to affect our availability (Denial of Service, spam).\n* Do not attempt to affect a product's (hotel, flight, rental car) availability by making unintended reservations and blocking the inventory for valid customers.\n* Please avoid making multiple reservations. If you submit a reservation, please make sure you cancel it.\n* Do not send reports exported from automated scanners. If it's a real bug, provide a detailed working PoC.\n\n## To help us identify you:\n* Please use a custom HTTP header and mention that in your report. For example, a header that includes your username: `X-Bug-Bounty:your-HackerOne-username`. If the custom header is not used, your report may not be considered.\n* Please use your HackerOne Email Alias (e.g., your-HackerOne-username@wearehackerone.com) when making an account or a reservation on Priceline.\n* Please provide your IP address in the bug report.\n\n---\n##\n# Guidelines for Penny\n\n## Acceptable Findings:\n1. **Business logic bypass flaws.**\nExamples (listing a few):\n* Ability to view or modify bookings of other customers using Penny\n* Authentication bypass\n* Pricing manipulation\n* Bypassing critical service restrictions\n2. **Access to Personally Identifiable Information (PII) of other customers**\n3. **Prompt Injection, specifically those leading to the disclosure of sensitive internal information** (such as proprietary data, backend raw source code, API keys, credentials, etc.)\n4. **Security issues that affect our infrastructure or can compromise our systems.**\nExamples (listing a few):\n* Code Execution\n* Server Side Request Forgery (SSRF)\n* Injections leading to data exfiltration or unauthorized data modification\n* Cross-Site Scripting (XSS)\n5. **Data Poisoning** (that is, modifying Penny's training data or input in such a way that corrupts its responses or functionality)\n6. **Safety Violations** (issues where Penny generates harmful, inappropriate, or misleading responses).\nThese will be reviewed on a case-by-case basis and will only be rewarded if the vulnerability is novel, significant, and can be exploited in a meaningful way. The default risk rating for issues from this category will be low.\n\n## Important Note\n1. All valid submissions must include detailed steps to reproduce the issue, accompanied by screenshots or videos, as well as the user prompts that were used to identify the issue.\n2. **Denial of Service (DoS) attempts that disrupt the chatbot service and make it inaccessible to others, is strictly forbidden. Any hackers attempting this will be banned from the program and will not be entitled to any bounties, regardless of the findings.**\n\n## Known Issues about Penny\n1. It is possible to jailbreak Penny and get the bot to respond to non-travel related queries, often involving controversial or malicious topics.\n2. Penny discloses system prompts / instructions / guidelines.\n3. Penny discusses competitors.\n\n---\n##\n# Response Targets\nPriceline will make a best effort to meet the following response targets for hackers participating in our program:\n\n* Time to first response (from report submit) - 2 business days\n* Time to triage (from report submit) - 2 business days \n* Time to bounty (from triage) - 1 business days (Max 2 weeks)\n* Time to resolution - 30 days\n\nAll times indicated are in business days.\n\n---\n##\n#  Non-Qualifying Vulnerabilities and Exclusions\n\n* Issues that are already known to the Priceline team will not be eligible for bounty.\n* Denial of Service (DOS), Distributed Denial of Service (DDOS), or other availability attacks.\n* Rate-limiting issues.\n* Session token in URL. `We know about the session token in the URL in some legacy portions of the site.`\n* Any resolved report that has been accidentally closed as resolved will not be eligible for a bounty if resubmitted by the same / different researcher.\n* Self XSS.\n* Web Browser XSS Protection not enabled.\n* Similar weaknesses/reports will not be paid out as separate bounties. For example, XSS in multiple parameters on the same endpoint.\n* Technology Name & Version disclosure.\n* Loading mixed content.\n* Missing HTTP security headers.\n* Missing cookie flags on non-sensitive cookies.\n* Weak Password Policy.\n* Clickjacking.\n* Physical attacks against any Priceline office or data center.\n* Social engineering (for example, phishing or phone calls targeting Priceline employees, contractors, or agents); leaked credentials in third-party software breaches.\n* Email notification for user profile changes.\n* Content Spoofing due to error pages or text injection.\n* Information disclosure through Referer header (e.g., Reset password token).\n* Vulnerable version of libraries (for example 'jquery') unless they can be demonstrated to be exploitable by an attacker.\n* Email/user enumeration.\n* Reports containing offer number disclosure will not be taken into consideration.\n* Google Maps API Key Leakage.\n* Publicly accessible xmlrpc.php files.\n* Browsable files that do not contain confidential data such as yarn.lock, package.json, client.js, or similar files.\n* Reiterating - please don't send us vulnerability scanner reports. If it's a real bug, you must provide steps to reproduce and/or a proof of concept.\n\n**Note: If you submit a report from the above category, your report will be closed as informative and will not be eligible for a bounty.**\n\n---\n##\n# Safe Harbor\nAny activities conducted in a manner consistent with this policy will be considered authorized conduct and we will not initiate legal action against you. If legal action is initiated by a third party against you in connection with activities conducted under this policy, we will take steps to make it known that your actions were conducted in compliance with this policy.",
                "profile_picture": "https://profile-photos.hackerone-user-content.com/variants/000/000/059/ebb250a0326046ab0360a7b35be8cb3f1fe46a2b_original.png/19c85a12ac35f466af1ea2b0ae853bfe5e8f057fb1d6fb62db131707bb67b30d",
                "submission_state": "open",
                "triage_active": true,
                "state": "public_mode",
                "started_accepting_at": "2014-12-24T13:47:09.979Z",
                "number_of_reports_for_user": 0,
                "number_of_valid_reports_for_user": 0,
                "bounty_earned_for_user": 0.0,
                "last_invitation_accepted_at_for_user": null,
                "bookmarked": false,
                "allows_bounty_splitting": true,
                "offers_bounties": true,
                "open_scope": null,
                "fast_payments": null,
                "gold_standard_safe_harbor": null
            }
        },
        {
            "id": "60",
            "type": "program",
            "attributes": {
                "handle": "concretecms",
                "name": "Concrete CMS",
                "currency": "usd",
                "policy": "[PortlandLabs Inc](https://portlandlabs.com) is the creator and maintainer of the open source content management system [Concrete CMS](https://www.concrete5.org/) (also known as concrete5 or Concrete).\n\nScope\n=====\n\nPortlandLabs manages the vulnerabilities in the Concrete core software, [https://github.com/concrete5/concrete5](https://github.com/concrete5/concrete5). PortlandLabs creates and updates CVEs for fixed security vulnerabilities for [supported versions of Concrete](https://documentation.concretecms.org/developers/introduction/system-requirements). \n\nConcrete core vulnerabilities are listed on [NIST](https://nvd.nist.gov/vuln/search/results?isCpeNameSearch=false&query=concrete&results_type=overview&form_type=Basic&search_type=all&startIndex=0) so that the community can take action to harden their sites.\n\nTo help keep the web safe, we will not disclose, discuss, or confirm security issues until a full investigation is complete and any necessary patches or releases are publicly available.\n\n-----\n\nWhat is not in Scope\n====================\n\nPortlandLabs does not commit to create CVEs for things outside the Concrete core or for things not considered to be vulnerabilities to the core. These include, but are not limited to:\n\n*   **Server or CMS configuration issues** - we recommend that you check [Concrete CMS Configuration Best Practices](https://documentation.concretecms.org/developers/introduction/configuration-best-practices) which contain some important configurations that may solve what you are about to report\n    \n*   **Default Credentials**\n    \n*   **CSRF Logout**\n    \n*   **Self DoS capability**\n    \n*   **Vulnerabilities for Concrete (concrete5) marketplace products created by the open source community** \n    *   Concrete is open source. There are thousands of add-ons and themes for Concrete which are not managed by PortlandLabs.  You may report vulnerabilities for products listed in the Concrete Marketplace via this Concrete Core HackerOne and we will inform the independent developer. However, we  do not create and manage CVEs for them.  \n    \n\n*  **3d Party libraries.** \n    *   The 3d party libraries used in Concrete (jQuery, PHP, ADODB, TinyMCE, etc) have their own vulnerability management programs. Our release notes, however, will identify updates to external libraries made for security reasons that are included as part of Concrete core releases.\n    \n\n  \n\n-------\n\nPatched Versions\n================\n\nUpdates, including security updates, are only guaranteed to be included in the next version of the Concrete core. In order to ensure that your site is secure, it is important for you to keep your site on the latest version of Concrete. \n\nSee [Concrete Core Releases](https://www.concrete5.org/about/blog/core-releases). Release notes detail the security fixes that are made. Recent releases mention CVEs that are remediated in that release. \n\nWe use the versioning scheme MAJOR.MINOR.PATCH\n\n*   MAJOR- example: For version 8.0.0, the eight would be the Major number. (Verify functionality on a staging site prior to upgrading. Major changes to CMS.)\n    \n*   MINOR - example: For version 8.5.0, the five is the minor number (Strongly recommend that you follow best practice and verify functionality on a staging site)\n    \n*   PATCH - example: For version 8.5.2, the two is the patch number. Patches are created for both bug and security fixes. We do not differentiate between bug and security fixes by the versioning number.  (Best practice would be to verify functionality on a staging site or take a backup snapshot first.)\n    \n\nWant to Report a Security Vulnerability? \n=========================================\n\n### Report Via HackerOne\n\nPlease report Concrete core and marketplace addon vulnerabilities via [HackerOne](https://hackerone.com/concrete5?type=team) which provides automatic status updates. Marketplace addon vulnerabilities will be closed as \"informative\" and the independent developer of the addon will be informed. HackerOne provides a monitored method to report, track and communicate remediation for Concrete Core vulnerabilities. HackerOne is monitored by the PortlandLabs security team and selected Concrete experts. PortlandLabs can only accept reports in English. \n\n### Avoid Duplicate Reporting\n\nCheck the [NIST](https://nvd.nist.gov/vuln/search/results?isCpeNameSearch=false&query=concrete&results_type=overview&form_type=Basic&search_type=all&startIndex=0) page where all CVEs related to the Concrete corebase are listed. If the vulnerability you are about to report already has a CVE, please help out the community by NOT submitting a duplicate. \n\nIf a vulnerability has previously been reported, we will inform the new reporter that their submission is a duplicate and will request that it not be publicly disclosed.\n\nOnly the first submitter will be credited for the vulnerability discovery.\n\n### Respect Others\n\nPlease install a local copy of Concrete. It is open source! This will let you test Concrete without disrupting other users. Beating on our trial servers or concrete5.org will not be well-received.\n\nSee the [Installation Guide](https://www.concrete5.org/documentation/developers/5.7/installation) to [download Concrete](https://www.concrete5.org/download) \n\n### Be Clear\n\nWe greatly appreciate the time you spent finding the issue. Please spend a couple extra minutes to spell out what you are able to exploit with it. We\u2019re eager to build a web for the greater good; the more info you provide, the swifter the web can be a safer place! Special public acknowledgement will be provided to reporters who provide a fix at the time they report the issue.\n\n### Rule Acknowledgement required to Report\n\nWe receive many reports from security researchers who do not read these submission requirements. To prove that you've read and understood the rules outlined on this page, please include the word \"crayons\" somewhere in your report. If you do not, your report will automatically flagged by HackerOne.\n\n### Do Not Disclose\n\nPlease be responsible! We're here because we want to know vulnerabilities before the world does so we have a chance to provide a solution in a reasonable timeframe. We assume you want the same; hence, please report issues directly to us on HackerOne.\n\nVulnerabilities will not be disclosed until a fix is publicly available. \n\nReporters are expected to follow the [HackerOne General Terms](https://www.hackerone.com/terms/general) and [Finder Terms](https://www.hackerone.com/terms/finder). \n\n### Credit\n\nWe've got some limited swag and lots of honor for those who are the first to submit an issue related to the core software, but no cash. Generally we're sending out stickers, but occasionally a truly stellar report gets a t-shirt. \n\n  \n\nWhat We Do \n===========\n\nKeeping You in the Loop\n-----------------------\n\nSince we deeply appreciate the contributions of the community to keep Concrete secure, we will acknowledge your security submission upon receipt. \n\nWe will respond to clear, understandable, reports within 5 days on whether we deem your submission to be a unique vulnerability. \n\nWe will apprise you once a CVE # is assigned. \n\nWe will advise reporters when the issue they reported is fixed. Credit for reporting a vulnerability will be given in the release to the initial reporter. \n\n  \n\nVulnerability Management Process\n--------------------------------\n\nAll security issues brought to our attention are examined and treated using PortlandLabs FedRAMP, ISO 27001:2013, and SOC 2 audited Vulnerability Management Process. \n\n### Risk Ranking\n\n[CVSS 3.1](https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:N/A:N) Base scoring is used by PortlandLabs to rank vulnerabilities to the Concrete core. PortlandLabs, as the founders of the Concrete CMS, has the ultimate authority to determine a vulnerability\u2019s score. \n\nNote that vulnerabilities which require administrative access to the CMS in order to exploit them are given a lower priority since administrative access, by its very nature, allows privileged access. \n\n### Remediation\n\nWe cannot promise absolute resolution on a fixed timeline for every issue. However, our intended remediation policy for vulnerabilities to the Concrete Core is as follows:\n\nCritical: CVSS 3.1 Score 9-10  30 Days \n\nHigh: CVSS 3.1 Score 7.0-8.9  90 Days\n\n### **CVE Management**\n\nConcrete CMS is a CVE Certificate Naming Authority (CNA) and hence publishes CVEs for active versions of Concrete CMS.  We attempt to publish CVEs within 24 hours of PortlandLabs publicly advising on a vulnerability.\n\n\nIF YOU HAVE ANY DOUBTS or confusion as to where or how to report your security concern or issue, please email **security@concretecms.org**",
                "profile_picture": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/mhbwznkvtxed2330krmlxr2bpqa8/19c85a12ac35f466af1ea2b0ae853bfe5e8f057fb1d6fb62db131707bb67b30d?response-content-disposition=inline%3B%20filename%3D%22concrete_CMS_logo_-_handat2x.png%22%3B%20filename%2A%3DUTF-8%27%27concrete_CMS_logo_-_handat2x.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQXAFJNWKW%2F20250402%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250402T053736Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEGEaCXVzLXdlc3QtMiJHMEUCIGO7uAci%2B5FA8WHx%2B4NbQItNPuO7ETT75zZND7jqKc8tAiEA3Kevc8OjHiS1y%2F5yGekpfESaSRtf7Wcbminfr%2FO8GCQquwUIyv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwwMTM2MTkyNzQ4NDkiDLRAzx3m5jsvOwG0ZCqPBffr6ZkSENp7sJgLuTEhEnLhzbXzFVAk7sNcDo0TFdtkWwEbAIJtlPahhFrvkDYydQzF9slKKEWtAzYKP5uPytsEbj4tfHgIw9rTtgr1TW4mCm6M9FwuZz1Enk9H5CFQCZqszHur0Wxt6gkk4GyUCT%2FUcCbDpcX7XpNSrKFEaS6vrEY8UibepzjcVVAEiQMib7wikFaG%2BG3COVx0vu6D%2FRZpBfA991oCLhnjeM5eqR2WGiBy56IY24NS9TxnQc2rcQq5xTHqGWUrErCv6ER%2BrYov2YqzYCIpd7kFxJx1J85d6OgG5gw9JejI1sglLVhaJ4%2Fq8RYuoYscKt1R0%2F8gtQpOjTDtucvoMES5FH8pmUOeyufsEajMsb57tsNPmIXloCz3EiTIFHUsVzusYpcUhgEu3bU%2BFX2ZB7XjkUoCt%2FqaAZYefxUmADbNCBr0%2FvFrSFuYPA8Oi2V6b1NPqztVBXk7OwvFZNosMBay%2F20KZfH%2FBNn5ZKkVKxNmBnE0nsnmk6%2BX3fHnzg3U9DG1%2Bkk6GsOeC23gyuBc5ggxZOW3l9RK0QnUCP%2FfKqgufgh16%2F3gqZuH1iErqmJgWkmEkJl2pkdzzCTuvGgTn6qYwYLvsAe5Wiq3tLrI7LQ%2F4Z1FkbxiAMS20rOsW68%2FrsBKGa%2BLf7FQDk40ro%2B0h%2F8l3g4k1bhIYOy1tJX%2BCYcyvCjA458fHiE8k2alsILUrtvDZHQm3LundpFZa8NODFkM7W1rNA%2BtmfZpyn1C%2FIXKZm1rCVK1a7ZnbQ9hBAj3l%2F%2Fsra3ciSMhKwUhJmhQ5woiIQc6SCuggrT%2B2Lb1Gbfhw2a9rF7FtBqeWV5gew9b4VcM1QbTMvftV3aqNqGqxm9LIb2Yd58w2o6yvwY6sQHWj8uQtllWZIyFD%2F0TyB0gy4NrUHXPDArM5Y3%2BZTRlXiAqvBU4ea2pCSywIUAKb7BZvwWc6j%2B09O2QddjJIYNev7mo1TpYVkPHIIz2u2T5m9gAqxBG%2FuA5NpblJD32CR1Pm1FoOnxBT61I5lQm5ihmUp%2FslHzhHmmo1hW61ZBZMntsMXHZ7giPu%2FYQ%2BvXX23LTS4tvUDvUH6PixCPEox94XJUHNAzX%2FhtiqysTHXPxEy4%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=b791637df9b075bd9329c5885a4d7a0c9d9d933d526b130d1745858168ae499f",
                "submission_state": "open",
                "triage_active": null,
                "state": "public_mode",
                "started_accepting_at": "2014-03-25T16:58:11.964Z",
                "number_of_reports_for_user": 0,
                "number_of_valid_reports_for_user": 0,
                "bounty_earned_for_user": 0.0,
                "last_invitation_accepted_at_for_user": null,
                "bookmarked": false,
                "allows_bounty_splitting": false,
                "offers_bounties": false,
                "open_scope": null,
                "fast_payments": null,
                "gold_standard_safe_harbor": null
            }
        },
        {
            "id": "61",
            "type": "program",
            "attributes": {
                "handle": "x",
                "name": "X (Formerly Twitter)",
                "currency": "usd",
                "policy": "# Program Rules\n\nMaintaining effective security is a community effort, and we are proud to have a vibrant group of independent security researchers who volunteer their time to help us spot potential issues. To recognize their efforts and the important role they play in keeping X safe for everyone, we offer a bounty for reporting certain qualifying security vulnerabilities. Please make sure you review the following program rules before you report a vulnerability. By participating in this program, you agree to be bound by these rules.\n\n## Rewards\n\n* X may, at its sole discretion, provide rewards to eligible reporters of qualifying vulnerabilities.\n* Issue severity is calculated by an internal 5x5 risk matrix based on X-specific data and use cases. Severity is considered a combination of Impact and Likelihood, each assigned a value of Informative, Low, Medium, High, or Critical.\n* Payouts are determined by a panel of security experts\n\n## Legal\n\n### Fine Print\n\nYou must comply with all applicable laws in connection with your participation in this program. You are also responsible for any applicable taxes associated with any reward you receive.\n\nWe may modify the terms of this program or terminate this program at any time. We won\u2019t apply any changes we make to these program terms retroactively. \n\n## SLA\nX will make a best effort to abide by the following timelines:\n* First Response: 2 business days\n* Time to Triage: 10 business days\n* Time to Bounty: 14 business days\n* Time to Resolution: depends on severity and complexity\n\n## Rules of Engagement\nWhen researching security issues, especially those which may compromise the privacy of others, you must use test accounts in order to respect our users\u2019 privacy. Accessing private information of other users, performing actions that may negatively affect X users (e.g., spam, denial of service), or sending reports from automated tools without verifying them will immediately disqualify the report and may result in additional steps being taken.\n\n## Report Eligibility\n\n### General\n* You must be the first reporter of the vulnerability\n* The vulnerability must demonstrate security impact to a site or application in scope (see below)\n* You must not have compromised the privacy of our users or otherwise violated the [X Rules](https://help.twitter.com/en/rules-and-policies/X-rules)\n* You must not have publicly disclosed the vulnerability prior to the report being closed, in compliance with the process described in the [HackerOne Vulnerability Disclosure Guidelines](https://www.hackerone.com/disclosure-guidelines)\n* We must not be legally prohibited from rewarding you\n\n### Open-Source Recommendation Algorithm\nReports for the open-source recommendation algorithm have additional requirements:\n* In most cases, a working proof of concept is required for report acceptance.\n* If a proof of concept is not provided, nor sufficient supporting documentation for X engineers to feasibly recreate and evaluate the issue, the report may not be accepted.\n* Report quality for acceptance will be at the discretion of X's HackerOne program.\n\n### AI\n* Model issues are out of scope for this program and should be reported through safety@x.ai\n\n### Ineligible Issues\n#### The following issues are outside the scope of our vulnerability rewards program (either ineligible or false positives):\n\n* Attacks requiring physical access to a user's device\n* Any physical attacks against X property or data centers\n* Forms missing CSRF tokens (we require evidence of actual CSRF vulnerability)\n* Logout CSRF\n* Password and account recovery policies, such as reset link expiration or password complexity\n* Invalid or missing SPF (Sender Policy Framework) records\n* Content spoofing / text injection\n* Issues related to software or protocols not under X control\n* Reports of spam ([see here for more info](https://support.twitter.com/articles/64986-reporting-spam-on-X))\n* Bypass of URL malware detection\n* Vulnerabilities only affecting users of outdated or unpatched browsers and platforms\n* Social engineering of X staff or contractors\n* Issues without clearly identified security impact, such as clickjacking on a static website, missing security headers, or descriptive error messages\n* Issues that result in Denial of Service (DoS) to X's servers at the network or application layer.\n* Cache poisoning techniques that impact service availability for other users.\n* Reports of broken hyperlinks from X blog posts, press releases, or support articles to unclaimed X Handles or to a location where it is not possible to cause the controlled contents to be downloaded to the victim\u2019s filesystem.\n* Issues relating to unlocking client-side features in modified X applications, rooted devices, or jailbroken devices.\n* Open redirects unless they can demonstrate a higher security risk than phishing.\n* Manipulation of \"likes/follows/views\" count due to caching issues. We are already aware that some statistics on our site may temporarily display inaccurate figures when many requests are sent in a brief period of time. However, that is because the numbers are cached, and the cache may take a bit of time to synchronize with the accurate backend data store. \n* Homoglyph attacks in URLs that can lead to phishing scenarios, unless the finding can demonstrate larger issues on our platform (e.g AuthN/AuthZ bypass)\n* Reports that demonstrate bypassing rate limits on Grok or xAI APIs.\n\n####The following are common reports that are not security concerns:\n\n*  Documents in the [Ads Transparency Center](https://business.twitter.com/en/help/ads-policies/product-policies/ads-transparency.html) do not disclose private account information. We intentionally disclose the advertising status of accounts to better inform our users of ads being run our platform.\n\n## Report Disclosures\nWe currently don't disclose reports marked as **Informative**. Exceptional reports may be considered for disclosure on a case-by-case basis.",
                "profile_picture": "https://profile-photos.hackerone-user-content.com/variants/ikx4ept298unt534kpz4am2bd4zs/91b2506fe54e617e9b2199fff02f67a626ec348f74368200b42055b3004dd8a8",
                "submission_state": "open",
                "triage_active": true,
                "state": "public_mode",
                "started_accepting_at": "2014-05-28T19:28:58.772Z",
                "number_of_reports_for_user": 0,
                "number_of_valid_reports_for_user": 0,
                "bounty_earned_for_user": 0.0,
                "last_invitation_accepted_at_for_user": null,
                "bookmarked": false,
                "allows_bounty_splitting": true,
                "offers_bounties": true,
                "open_scope": null,
                "fast_payments": null,
                "gold_standard_safe_harbor": null
            }
        },
        {
            "id": "67",
            "type": "program",
            "attributes": {
                "handle": "basecamp",
                "name": "Basecamp",
                "currency": "usd",
                "policy": "**TL;DR** - Your insight and discoveries = our deep <3, and now $.\nWe're a small team born and bred on open source, so we look to the security community's lead for exploit patterns, best practices, top vulns, new research\u2014everything. We've learned much and keep adapting. Thank you.\nWe push for the best in web security and it's your research that makes the big strides and reveals blind spots. We invite you to pursue and demonstrate your work here. We'll pair closely with you, respond to your findings speedily & thoroughly, and publicly share our appreciation.\n\n**Bounties range from USD $100 to $10,000** and scale according to impact and ingenuity, from an unlikely low-sensitivity XSS to a deep, novel RCE. One per bug; first discovery claims it; ties break toward the best report.\n\nWhere possible, use a `@wearehackerone.com` email address to create accounts and only test against accounts you create. Read the sections below carefully to avoid having your report closed as N/A. \n\n## Our focus is on\n- Strong auth (sign-in, sessions, OAuth, account recovery, MFA)\n- Access control (bypasses, faults, CSRF, etc)\n- Injection prevention (SQL, XSS, method args, etc)\n- For HEY only: potential privacy leaks, such as bypasses of our spy pixel blocking features or any other leak enabled by any of the HEY features. \nConcatenating bugs to increase the attack scenario is encouraged. \n\n## General eligibility\nThe scope of the bug bounty program is limited to the apps and domains listed [on our scope page](https://hackerone.com/basecamp/policy_scopes?type=team). Valid vulnerabilities on any domain or app not explicitly listed in scope may be accepted but are ineligible for a reward. \nAs a general rule:\n- Reports that do not demonstrate a relevant CVSS impact on any of the apps in scope will be closed as N/A. \n- In cases where multiple reports share _the same root cause_, these will be closed as Duplicate.\n- We will only award and triage reports when the root cause is under our control.\n\n## This is out of scope for all our apps\n- Hyperlink injection on emails\n- Existing sessions not being invalidated when 2FA is enabled\n- Enabling 2FA without verifying email address to prevent someone from signing up\n- Rate limiting\n- Best practices concerns (we require evidence of a security vulnerability)\n- Vulnerabilities only affecting users of outdated or unpatched browsers and platforms\n- Race conditions that don't compromise the security of any user or Basecamp. This includes race conditions that lead to bypassing the limits of your current plan\n- Reports about theoretical damage without a real risk\n- The output of automated scanners without explanation\n- CSRF with no security implications (like Login/logout/unauthenticated CSRF)\n- Broken links\n- Missing cookie flags on non-security sensitive cookies\n- Attacks requiring physical or console access to a user's device\n- Any issue in a mobile application that can only be exploited on a rooted or jailbroken device, that depends on debug access being enabled, or that depends on a vulnerability in the operating system\n- Missing security headers not related to a security vulnerability\n- Reports of insecure SSL/TLS ciphers unless you have a working proof of concept\n- Banner grabbing issues to figure out the stack we use or software version disclosure\n- Open ports without a vulnerability\n- Password and account recovery policies, such as reset link expiration or password complexity\n- Disclosure of known public files or directories, (e.g. robots.txt)\n- Reports of spam\n- Username/email address enumeration\n- Presence of autocomplete attribute on web forms\n- DNSSEC and DANE\n- HSTS or CSP headers\n- Host header injection unless you can show how a third party can exploit it\n- Reflected File Download (RFD)\n- EXIF information not stripped from uploaded images\n- DoS targeting other users on the same account, e.g. using malformed inputs or crafted file uploads\n- DoS vulnerabilities based on submitting a large payload in an input field and triggering a 500 error\n- DoS vulnerabilities based on unlimited password length (hint: the password length is not unlimited)\n- DoS vulnerabilities based on lack of pagination or lots of user content slowing response times\n- Using product features like invitation/signup/forgot-password to deliver messages to any email address\n- Unrestricted file upload without a clear attack scenario or PoC\n- JavaScript code executed from a PDF within the browser's PDF viewer, where the attack surface is locked down (for example, [JavaScript support in PDF in Chrome's PDF viewer is an intentional feature](https://bugs.chromium.org/p/chromium/issues/detail?id=511295), so so long as it can't be used to mount an attack)\n\nThese apply to all our in-scope assets. See each app below for more specific out-of-scope reports. \n\n## Disqualifiers\n- Attempting access to other customers' accounts or accessing other customers' accounts and data unless it's completely unintentional and accidental. \n- Denial of service: disrupting other customers' access to their own accounts.\n- Social engineering of any kind against other customers or Basecamp/HEY staff, including spearphishing attempts or contacting our support team.\n- Overwhelming our support team with messages. Don't fuzz Contact Support forms.\n- Physical intrusion.\n- Automated scanning, mail bombing, spam, brute-forcing or automated attacks with programs like Burp Intruder.\n- Leaking, manipulating, or destroying any user data.\n\n## Guidelines\n- All reports **should include** a detailed step-by-step explanation of how to replicate the issue and an attack scenario to demonstrate the risk.\n- Practice responsible disclosure. That's a responsibility to users, not us. We strive to live up to the other end of this by resolving bugs in a timely manner.\n- If you sign up for a HEY or Basecamp account for vulnerability testing, please include \"HackerOne\" somewhere in your email address or use a `@wearehackerone.com` address. \n- If you include any secrets or confidential information in your report, partially mask it, as far as possible, so you can still convey the severity of your findings without accidentally leaking information. \n\n## Note about reports with dumps of leaked credentials\nWe have mechanisms in place to check for leaked passwords on login, and we won't be awarding any bounties for reports with dumps of leaked credentials obtained from [stealer logs](https://www.troyhunt.com/begging-for-bounties-and-more-info-stealer-logs/) or other kind of data breaches. We'll accept other kinds of credential leaks, such as accidental exposure of tokens, administrative passwords or secrets. \n\n## HEY\n### In scope\n- HEY websites and native apps\n- Web: https://*.hey.com\n- Email: hey.com and custom domains hosted with HEY\n- Your own HEY accounts only\n\n### Out of scope\n- `stats.hey.com`, `stats.world.hey.com` and `stats.hey.science`.\n\n## Basecamp websites and native apps.\n### In scope\n- Web: https://3.basecamp.com.\n- API: As described by https://github.com/basecamp/bc3-api and https://github.com/basecamp/api.\n- Authentication: https://launchpad.37signals.com.\n- Basecamp access controls provided by the [Admin Pro Pack](https://3.basecamp-help.com/article/687-admin-pro-pack).\n- Your own Basecamp accounts only.\n\n### Out of scope\n- Email spoofing, including SPF/DKIM/DMARC policies, for Basecamp. Email spoofing is in scope for HEY.\n- Vulnerabilities that presume users on the same account are untrusted. For example, uploading malware, embedding phishing URLs in comments, RTLO based attacks in URLs, IDN homograph attacks, modifying projects and member lists, etc.\n- Password not required to update the existing password or email address, switch to/from Google Sign In, or enable 2FA.\n\n## Open source\n\n### In scope\n- Trix: our rich-text editor. Used in HEY and Basecamp 3.\n- Stimulus: our client-side JavaScript framework. Used in HEY and Basecamp 3.\n- Other first-party open-source projects under the Basecamp org on GitHub.\n\n### Out of scope\n- Editable wiki pages in GitHub in open source projects\n- \"Leak\" of test and fixture data that appears to be personal identifiable information but it's just test data\n\n## Questions?\nThis works because we work together.\nContact us with any questions: security@basecamp.com\n",
                "profile_picture": "https://profile-photos.hackerone-user-content.com/variants/STtZ2opgRsHdKby72xs56KhB/19c85a12ac35f466af1ea2b0ae853bfe5e8f057fb1d6fb62db131707bb67b30d",
                "submission_state": "open",
                "triage_active": null,
                "state": "public_mode",
                "started_accepting_at": "2015-04-03T05:06:59.053Z",
                "number_of_reports_for_user": 0,
                "number_of_valid_reports_for_user": 0,
                "bounty_earned_for_user": 0.0,
                "last_invitation_accepted_at_for_user": null,
                "bookmarked": false,
                "allows_bounty_splitting": true,
                "offers_bounties": true,
                "open_scope": null,
                "fast_payments": null,
                "gold_standard_safe_harbor": null
            }
        },
        {
            "id": "69",
            "type": "program",
            "attributes": {
                "handle": "slack",
                "name": "Slack",
                "currency": "usd",
                "policy": "## Slack Technologies, LLC, a Salesforce company\n\nOver _$12M_ in bounties awarded across all our H1 Bug Bounty programs since 2015!\n\n\nAt Slack, a Salesforce company, Trust is our #1 value and we take the protection of our customers' data very seriously. As a result, we encourage responsible reporting and disclosure of any vulnerabilities that may be found on our websites, APIs, or applications. \n\nSlack is committed to working with security researchers to verify and address any potential vulnerabilities that are reported to us. If you want to help us make our products safer with the possibility of a reward in the process, you are in the right place!\n\nPlease review these terms before you test and/or report a vulnerability. Slack pledges not to initiate legal action against researchers for penetrating or attempting to penetrate our systems as long as they adhere to this policy.\n\n*Eligibility for the Bug Bounty Program*\n\nUnder our Bug Bounty Program, qualified individuals are encouraged to submit bug reports that detail existing vulnerabilities in certain in-scope Salesforce products and services. In certain circumstances, Salesforce may grant monetary rewards to those who submit vulnerability reports.\n\nWe are happy to thank every individual researcher who submits a vulnerability report helping us improve our overall security posture at Slack. However, only those researchers that meet the following criteria may be eligible to receive a reward. Some of the requirements to participate in the Bug Bounty Program include:\n\n\n* You must be the first reporter of a vulnerability associated with a participating service (we will also not reward for a known vulnerability which we are actively fixing)\n* You must have personally discovered the vulnerability and you may not report a vulnerability that was discovered by another person (including, and especially, someone who does not qualify to participate in the Bug Bounty Program)\n* You must not be employed by Slack, Salesforce, its subsidiaries, or any related entities, currently or in the last 12 months.\n* You must comply with this Policy when discovering the vulnerability and submitting the vulnerability report\n* Slack or H1 can\u2019t be legally prohibited from rewarding you for any reason\n* Non-automated testing is allowed on production Slack infrastructure, preferably using dedicated test teams. Any testing for cross-team vulnerabilities should be conducted using dedicated teams created and owned by the researcher.\n\n*Conduct Guidelines*\n\n\nWhile we encourage you to discover and report to us any vulnerabilities you find in a responsible manner, the following conduct is expressly prohibited and will result in disqualification from the Bug Bounty Program:\n\n\n* Disclosing any vulnerabilities or suspected vulnerabilities you discover to any other person without explicit Salesforce authorization\n* Disclosing the contents of any submission to our program without explicit Slack authorization\n* Accessing private information of any person stored on a Slack product or service \u2013 You must use test accounts\n* Accessing sensitive information (e.g., credentials)\n* Performing actions that may negatively affect Salesforce system performance or its users (e.g. Spam, Phishing, Brute force, Distributed Denial of Service (DDoS))\n* Conducting any kind of physical attack on Slack personnel, property or data centers\n* Social engineering any Slack employee or contractor\n* Conduct vulnerability testing of participating services using anything other than test accounts (e.g. Developer or Trial Edition instances)\n* Exfiltrating data. Please test only the minimum necessary to validate a vulnerability (we can verify if data exfiltration would be possible from a vulnerability, and will reward with the impact in mind)\n* Violating any laws or breaching any agreements in order to discover vulnerabilities\n\nIf you are testing a publicly viewable area of Slack (eg. https://success.salesforce.com), please remove any test posts or accounts when you are done and refrain from engaging with actual users.\n\n\n*Our Commitment to Researchers*\n\n\nIf you submit a vulnerability report, the Salesforce security team and associated development organizations will use reasonable efforts to:\n\n\n\n* Respond in a timely manner, acknowledging receipt of your vulnerability report.\n* Investigate and consider your vulnerability report for eligibility under our Bug Bounty Program within 30 days of submission or less.\n* Notify you when the remediation or other action regarding the vulnerability has been implemented. \n\nSlack Products/Services In Scope for H1 Security Researchers\n\nThe Bug Bounty Program is limited to Slack products as specified within the *scope* section in HackerOne.\n\n\n\n*Qualifying Vulnerabilities & Bounties (In Scope)*\n\n\nThe decision to grant a reward for a vulnerability report, and the value of a reward (if any), is entirely within Salesforce\u2019s discretion. If we decide to offer a reward for a vulnerability report, the value of the reward will usually be based on the *impact and severity* of the reported vulnerability. \n\n\n* You will qualify for consideration for a reward only if you are the first person to responsibly disclose an unknown vulnerability to us in accordance with these policies. The determination of whether you are the first person is solely within our responsibility. Vulnerabilities must also be relevant, exploitable, and well-documented in the vulnerability report. We are more likely to grant a reward if the vulnerability is specific, fixable and not currently exploited against us or our customers. \n\nOur target reward range for different types of vulnerabilities within the published scope. Additional bounty may be awarded on top of these base amounts, as determined by the Bug Bounty Management team.\n\n\n*Vulnerability Severity Definitions*\n\nThe following vulnerability severity definitions are based on internal Salesforce documentation. These definitional are a work in progress. The goal of adding these definitions to our policy is to: \n\n* Allow more efficient report triage\n* Align directly with internal Salesforce vulnerability ranking definitions\n* Remove ambiguity and subjective assignment of severity\n* Promote fair bounty payments\n* Promote researcher satisfaction\n\nIf you have feedback and/or suggestions to help us make these more clear and useful, please email your ideas to bugbountymanager@salesforce.com\n\n*Critical*\n\n\n* Severity level includes but is not limited to:\n    * Vulnerabilities that can compromise the confidentiality, integrity, or availability of production and corporate resources and/or data with limited exploitation difficulty and/or attacker skill.\n    * Vulnerabilities that could be easily exploited by a remote or unauthenticated attacker and lead to system compromise and/or exposure of highly sensitive or customer data of any kind without requiring user interaction. \n    * Exploitation of a vulnerability that results in a root-level compromise of servers or infrastructure devices.\n* Examples include, but are not limited to:\n    * External facing remote arbitrary code execution without mitigating circumstances. \n    * External facing SQL injection. \n    * External facing unintended single tenant or cross tenant information disclosure and/or multi-tenancy break\n    * Authentication flaws resulting in arbitrary account compromise.\n    * Session management flaws leading to arbitrary account compromise. \n    * External facing credential leaks and default credential usage resulting in access to production systems containing customer data.\n    * Client and server software and system s susceptible to publicly disclosed and exploited vulnerability.\n    * Susceptibility to an external, simply executed, single actor, logic-based attacks resulting in a service outage of one or more critical systems/products.\n* Tooling Score Estimates include, but are not limited to:\n    * Nessus: Critical (In a small subset of cases)\n    * CVSSv3 Temporal Score: 9-10\n    * Qualys Severity 5\n    * nCircle: 1000+ (Based on risk )\n    * PCI Violating Vulnerability: Yes\n    * AppDetective: High (Based on risk )\n    * Whitehat: Urgent\n\n*High*\n\n\n* Severity level includes but is not limited to:\n    * Vulnerabilities that can compromise the confidentiality, integrity, or availability of production and corporate resources and data.\n    * Vulnerabilities that could be easily exploited by an internal and/or external, authenticated/unauthenticated attacker and lead to system compromise and/or exposure of highly sensitive or customer data without requiring user interaction.\n    * Vulnerabilities that allow local users to gain increased privileges.\n    * Vulnerabilities that allow unauthenticated remote users to view sensitive information.\n    * Susceptibility to an external, simply executed, single actor, logic-based attacks resulting in significant performance degradation of one or more critical systems/products.\n* Examples include, but are not limited to:\n    * Privilege Escalation  \n    * External facing Persistent/Stored Cross-Site Scripting (XSS).\n    * External facing Cross-Site Request Forgery (CSRF) exposure on sensitive or critical functions.\n    * External facing stack traces containing sensitive information exposed to clients.\n    * Internal network/system use of weak cryptography that is practically exploitable in a real kill chain without nation-state resources.\n    * Internal network/system remote arbitrary code execution without mitigating circumstances.\n    * Internal network/system command or SQL injection without mitigating circumstances.\n    * Internal network/system exposure of sensitive information.\n    * Internal network/system use of default or weak credentials.\n    * Client/Server software and/or systems susceptible to publicly disclosed vulnerability.\n* Tooling Score Estimates include, but are not limited to:\n    * Nessus: Critical/Severe\n    * CVSSv3 Temporal Score: 7 - 8.93\n    * Qualys: Severity 44\n    * nCircle:1000 +\n    * PCI Violating Vuln: Yes\n    * AppDetective: High\n    * Whitehat: Critical\n\n*Medium*\n\n\n* Severity level includes but is not limited to:\n    * Vulnerabilities that may be more difficult to exploit but could still lead to some compromise of the confidentiality, integrity, or availability of resources, under certain circumstances. \n    * Vulnerabilities that could have had a critical or high impact but are less easily exploited based on a technical evaluation of the flaw, or affect unlikely configurations.\n    * Susceptibility to external, simply executed, single actor, logic-based attacks resulting in some measurable performance degradation of one or more critical systems/products.\n* Examples include, but are not limited to:\n    * External unintended internal information disclosure.\n    * Internal network/application Cross-Site Scripting (XSS).\n    * Internal network/application Cross-Site Request Forgery (CSRF).\n    * Internal use of weak cryptography that is practically exploitable in a real kill chain with nation-state resources.\n    * Usage of EoL operating systems or software.\n    * External facing content spoofing.\n* Tooling Score Estimates include, but are not limited to:\n    * Nessus: Moderate\n    * CVSSv3 Temporal Score: 4 - 6.93\n    * Qualys: Severity 34. \n    * nCircle: 500 - 999.5. \n    * PCI Violating Vuln: No\n    * AppDetective: Medium\n    * Whitehat: High\n\n*Low*\n\n\n* Severity level includes but is not limited to:\n    * Vulnerabilities that may be more difficult to exploit but could lead to minimal compromise of the confidentiality, integrity, or availability of resources under unlikely circumstances.\n    * These types of vulnerabilities require unlikely circumstances to be able to be exploited, or where a successful exploit would have minimal consequences.\n    * Susceptibility to external, simply executed, single actor, logic-based attacks resulting in minor performance degradation of one or more critical systems/products. \n* Examples include, but are not limited to:\n    * XSS from an authenticated customer admin\n    * Internal default pages or content without vulnerabilities such as an Apache server-status page enabled, allowing anyone browsing it to see the information of the server, as well as any request currently being made.\n    * Exposure of server config information\n    * Use of weak cryptography that is not practically exploitable in a real kill-chain.\n    * Documentation bugs\n* Tooling Score Estimates include, but are not limited to:\n    * Nessus: Moderate (Informational in nature)\n    * CVSSv3 Temporal Score: 0.1 -3.93\n    * Qualys: Severity 24\n    * nCircle: 1 -499.5.\n    * PCI Violating Vuln: No\n    * AppDetective: Low 7\n    * Whitehat: Low\n\n*Qualifying Vulnerability Descriptions*\n\n\n| Category | Description |\n| --- | --- |\n| Remote Code Execution | CWE-94: AKA \"Arbitrary Code Execution\".  Describes a security bug that allows an attacker to execute arbitrary commands or code on a target machine or in a target process. The exploit PoC may include many other vulnerability types, but ultimately the result is p0wnage of the server(s) and/or environment.  [src: https://en.wikipedia.org/wiki/SQL_injection] |\n| Disclosure of Credit Card data | CWE-359:  This is self-explanatory. Any security bug which allows disclosure of credit card information to an unauthorized user or system qualifies as Disclosure of Credit Card Data |\n| SQL Injection | CWE-1027:  SQL injection is a code injection technique in which nefarious SQL statements are inserted into an entry field for execution (e.g. to dump the database contents to the attacker). SQL injection must exploit a security vulnerability in an application's software, for example, when user input is either incorrectly filtered for string literal escape characters embedded in SQL statements or user input is not strongly typed and unexpectedly executed. SQL injection is mostly known as an attack vector for websites but can be used to attack any type of SQL database.SQL injection attacks allow attackers to spoof identity, tamper with existing data, cause repudiation issues such as voiding transactions or changing balances, allow the complete disclosure of all data on the system, destroy the data or make it otherwise unavailable, and become administrators of the database server. [src: https://en.wikipedia.org/wiki/SQL_injection] |\n| Unrestricted XXE / File System Access | CWE-611:  External XML Entity Injection (XXE) is a specific type of Server Side Request Forgery(SSRF) which affects an XML processing engine server-side on a target. Specifically, blind XXE is when the results are either error-based or cause 3rd party interaction with services such as HTTP, FTP & DNS. An XXE attack typically occurs when XML input containing a reference to an external entity is processed by a weakly configured parser. An attacker can leverage an XXE attack to access sensitive data and read local or remote files. In a similar manner to SSRF, an attacker could introduce malicious code through Remote Code Execution (RCE).  [scr: https://blog.zsec.uk/out-of-band-xxe-2/]  [src: https://chris-young.net/2018/04/13/xxe-xml-external-entity/] |\n| Significant Authentication Bypass | CWE-305:  Authentication bypass is a vulnerability that allows an attacker access to credential protected resources without first acquiring valid credentials. Examples of this vulnerability include:* SQL injection during login to bypasses credential authentication* Direct access to resources normally beyond an authentication mechanism, such as a login screen, which do not independently validate the users authenticated session.* Failure to enumerate and enforce the systems' access policy. * A weak authentication system that allows a valid identity to be forged. | \n| Significant Authorization Bypass | CWE-285:  Authorization is the concept of allowing access to resources only to those permitted to use them. Vulnerabilities that bypass authorization checks may allow access to protected resources beyond what was intended by the system. Examples of authorization bypass include Insecure Direct Object Reference and Session Token Alteration. In each of these examples, the system trusts the users' requests because of improper or insecure implementation. |\n| Cross Instance Privilege Escalation | Salesforce is a multi-tenant platform in which \"instances\" are created for each Org. A cross-instance privilege escalation involves some user in instance A having access to data in instance B without proper authorization. |\n| Denial of Service | Susceptibility to an external, simply executed, single actor, logic-based attack resulting in a service outage or significant performance degradation of one or more critical systems/products  |\n| Disclosure of Personal Identifiable Information | CWE-200:  Personally identifiable information, or PII, is any data that could potentially be used to identify a particular person. As it relates to Salesforce, PII Disclosure bugs involve PII data stored within any in-scope platforms, excluding Salesforce Employee data such as Name and Contact information.  [src: https://www.lifelock.com/learn-identity-theft-resources-what-is-personally-identifiable-information.html] |\n| Salesforce Platform Misconfiguration and/or Custom APEX Vulnerabilities (Salesforce Owned/Controlled) | The Salesforce Platform is highly configurable, customizable, and supports custom code in the form of APEX code, Visualforce pages, etc. It is therefore capable of being misconfigured in such a way as to leak information or to otherwise be insecure. This category of vulnerability is specific to Salesforce owned and operated sites, NOT Salesforce customer-owned and operated Salesforce instances. If you identify a configuration vulnerability in a customer site please report it to that company via their Bug Bounty program or their security@<some company dot com> email address. There is no guarantee that the customer will respond to your email or bug submission, and it is out of Salesforce control. Please do not expect Salesforce to handle reports of customer misconfiguration.|\n| Privilege Escalation / Improper Access Control | Privilege escalation is the act of exploiting a bug, design flaw or configuration oversight in a software application to gain elevated access to resources that are normally protected from an application or user. The result is that a user with more privileges than intended by the application developer or system administrator can perform unauthorized actions. Note that Privilege Escalation is different from Permission Model Circumvention in that PE involves accessing functionality beyond that assigned to a given role, or somehow adding resource permissions to a given role without authorization, while PMC involves a complete bypass of security controls meant to enforce permissions. Ultimately, PE involves a user within the system increasing their access somehow, while PMC involves an anonymous user gaining access.  [src: https://en.wikipedia.org/wiki/Privilege_escalation] |\n| Non-XXE SSRF | In a Server-Side Request Forgery (SSRF) attack, the attacker can abuse functionality on the server to read or update internal resources. The attacker can supply or modify a URL which the code running on the server will read or submit data to, and by carefully selecting the URLs, the attacker may be able to read server configuration such as AWS metadata, connect to internal services like HTTP enabled databases or perform post requests towards internal services which are not intended to be exposed.[src:https://www.owasp.org/index.php/Server_Side_Request_Forgery] |\n| Insecure Direct Object Reference | IDOR occurs when unvalidated user-supplied input is submitted and direct access to the object requested is provided. Vulnerability reports for IDOR are valid when the result is unauthorized information disclosure, modification or destruction of data, or performing a function outside of the limits of the current user. |\n| CRLF injection/HTTP response splitting  | HTTP response splitting occurs when data enters a web application through an untrusted source, most frequently an HTTP request. The data is included in an HTTP response header sent to a web user without being validated for malicious characters. HTTP response splitting is a means to an end, not an end in itself. At its root, the attack is straightforward: an attacker passes malicious data to a vulnerable application, and the application includes the data in an HTTP response header. [src: https://www.owasp.org/index.php/HTTP_Response_Splitting] |\n| Circumvention of our Platform\u2019s Permission Model | Permission Model Circumvention involves a complete bypass of security controls meant to enforce permissions. An example of PMC involves an insecurely configured system in which an API gateway fronts for several servers and implements authentication/authorization. The configuration is such that the URI to the backend servers can be identified and they are directly accessible without any additional authentication or authorization checks..While there is an authX model in place, it was trivially circumventable. Ultimately, PE involves a user within the system increasing their access somehow, while PMC involves an anonymous user gaining access. |\n| Cross-Site Scripting (excluding self-XSS) | CWE-80:  Cross-site scripting (XSS) is a type of computer security vulnerability typically found in web applications. XSS enables attackers to inject client-side scripts into web pages viewed by other users. A cross-site scripting vulnerability may be used by attackers to bypass access controls such as the same-origin policy. [src:https://en.wikipedia.org/wiki/Cross-site_scripting] |\n| Cross-Site Request Forgery (CSRF) on critical actions | CWE-352:  Cross-site request forgery, also known as one-click attack or session riding and abbreviated as CSRF (sometimes pronounced sea-surf[1]) or XSRF, is a type of malicious exploit of a website where unauthorized commands are transmitted from a user that the web application trusts.[2] There are many ways in which a malicious website can transmit such commands; specially-crafted image tags, hidden forms, and JavaScript XMLHttpRequests, for example, can all work without the user's interaction or even knowledge. Unlike cross-site scripting (XSS), which exploits the trust a user has for a particular site, CSRF exploits the trust that a site has in a user's browser.  [src: https://en.wikipedia.org/wiki/Cross-site_request_forgery] |\n| Insufficiently Protected Credentials / Credential Exposure | CWE-522:  CWE-522: Within the context of the Salesforce/HackerOne Bug Bounty program, credential exposure involves finding, or gaining access to a user or system credentials which are not meant to be public. An example of IPC would be finding a Github or other repo containing configuration files that contain usernames, passwords, API keys, private keys, etc. Another example is an exposure of a single user's credentials on the querystring, in cookies, or in other HTTP headers. |\n| Insecure/Open Redirect | CWE-601:  An HTTP parameter may contain a URL value and could cause the web application to redirect the request to the specified URL. By modifying the URL value to a malicious site, an attacker may successfully launch a phishing scam and steal user credentials. Because the server name in the modified link is identical to the original site, phishing attempts have a more trustworthy appearance. |\n| DNS Hijacking / Subdomain Takeover | DNS hijacking or DNS redirection is the practice of subverting the resolution of Domain Name System (DNS) queries.The basic premise of a subdomain takeover is a host that points to a particular service not currently in use, which an adversary can use to serve content on the vulnerable subdomain by setting up an account on the third-party service.  [src: https://en.wikipedia.org/wiki/DNS_hijacking] [src: https://www.hackerone.com/blog/Guide-Subdomain-Takeovers] |\n| Configuration/Stats//Log File Exposure | CWE-532 Information Exposure Through Log Files. CWE-200: Information Exposure. Any instance in which log files or server/application configuration files are accessible when they are not meant to be. |\n| Documentation Bug | Any instance in which, from a strictly security-based perspective, the published documentation is incorrect with regard to the behavior of the product. | \n\n\nNon-Qualifying Vulnerabilities (Out of Scope)\n\n\nThe following types of issues are *specifically excluded* from our Bug Bounty Program:\n* CSRF-able actions that do not require authentication (or a session) to exploit or CSRF issues which have no security impact to Slack.\n\n*Commerce Cloud Specific*\n\n* XSS that is stored in Business Manager and is reflected in the storefront / executed in a Storefront context.\n* Admin to Admin or Admin to User XSS. In these cases, a higher privileged user is attempting to attack the lower privileged user. As an admin, such script execution is considered a feature due to the nature of the platform.\n* CSRF in Storefront\n* CSRF that can only be used to make modifications on the file system\n* Session Fixation inside of Storefront\n* XSS in the following areas: HTML Editor and file upload\n* Login Page / Forgot Password Page Account Brute force or account lockout not enforced\n* Submissions regarding product deficiencies, as opposed to exploitable vulnerabilities\n\n*Other Clouds and Services (Including Commerce Cloud)*\n\n* Access control to objects and fields in Salesforce are done through permission set or profile in setup tree. If that permission or profile in the setup tree is not respected, only then it is considered as an access control issue. Please check all permissions & profiles for that particular user before filling access control bugs.\n* HTML and Link injections\n* Issues related to \"Editable Github Wiki Pages\"\n* Issues related to Salesforce *Partner* User Credential Disclosure in public code repositories such as GitHub. *Please note that this type of activity is explicitly excluded by the Conduct Guidelines in this policy.*\n* TOCTOU bugs involving platform permission changes. For example; User A has an active session, Admin reduces or increases permissions for User A, User A permissions do not change until User A logs out and back in. This is currently WAD on Salesforce platforms.\n* Invalid links from any Salesforce site to any social media site in which a claim of \"account takeover\" or \"possible phishing attacks\" are the basis for the report.\n* Bugs in content/services that are not owned/operated by Salesforce\n* Vulnerabilities affecting users of outdated or unsupported browsers or platforms\n* Vulnerabilities that have already been addressed in a product update regardless of whether the update has been applied to the publicly available research machines\n* Subdomain takeovers for out of scope domains\n* Self-XSS or XSS bugs requiring an unlikely amount of user interaction\n* XSS in our content sandbox under .content.force.com (http://content.force.com/)\n\n- XSS under \\.sitepreview.(na\\/gus).force.com (http://force.com/)\n- XSS under \\.livepreview.(na\\/gus).force.com (http://force.com/)\n- XSS under \\.visual.force.com (with the exception of Salesforce developed and maintained apps like LiveMessage, Agile Accelerator, Private Appexchange, etc.)\n\n* XSS in custom apps under .force.com (with the exception of lightning.force.com and Salesforce developed and maintained apps like LiveMessage, Agile Accelerator, Private Appexchange, etc.)\n\n- Bugs categorized as P3 (low risk)\n- SalesforceDX: Attacks by a root user against another user on the same machine\n- SalesforceDX: Attacks by a user on the same user\n- CSRF on forms that are available to anonymous users (e.g. web2lead contact form)\n- Clickjacking and issues only exploitable through clickjacking\n- Descriptive error messages (e.g. Stack Traces, application or server errors)\n- HTTP 404 codes/pages or other HTTP non-200 codes/pages.\n- Fingerprinting / banner disclosure on common/public services.\n- Disclosure of known public files or directories, (e.g. robots.txt)\n- Scripting or other automation and brute-forcing of intended functionality\n- Presence of application or web browser \u2018autocomplete\u2019 or \u2018save password\u2019 functionality.\n- Lack of Secure and HTTPOnly cookie flags\n- Content spoofing (text injection) or IDN homograph attacks\n- Tabnabbing \n- Email configuration issues (SPF, DKIM, DMARC)\n- Weak Captcha / Captcha Bypass\n- Forced Login / Logout CSRF\n- Account lockout, Login or Forgot Password page brute force\n- Password complexity or account recovery policies\n- Username / email enumeration (brute force)\n- HTTPS Mixed Content\n- Missing HTTP security headers, specifically: Strict-Transport-Security, X-Frame-Options, X-XSS-Protection, X-Content-Type-Options, and Content-Security-Policy.\n- OPTIONS HTTP method enabled\n- Known SSL issues (e.g. attacks such as BEAST, BREACH, POODLE, TLS Renegotiation)\n- SSL Forward Secrecy or HSTS not enabled\n- Weak SSL/TLS Cipher Suites\n- CSV Excel Formula injection\n- Issues related to networking protocols or industry standards not controlled by Salesforce\n- Sending vulnerability reports using automated tools without validation\n- Use of a known-vulnerable library without evidence of exploitability\n- Attacks requiring physical access to a user's unlocked device\n- Reports of spam, phishing or security best practices\n- Reflected XSS involving Adobe Flash files (.swf)\n\n*If you are unsure whether a bug or issue that you discover in a participating service is a non-qualifying vulnerability, please email us at <bugbountymanager@salesforce.com>*\n\n\n_Intellectual Property_\n\n\nParticipating in the Bug Bounty Program does not grant to you or any other third party any rights to any Slack or Salesforce intellectual property, product or service. All rights not otherwise granted herein are expressly reserved. Whether or not we grant you a reward, you hereby assign to Salesforce all right, title and interest (including all intellectual property rights), in the contents of all vulnerability reports that you submit to Salesforce. \n\nBy participating in the Bug Bounty Program, you represent that you have the right to assign all such right, title and interest to us and that your participation in the Bug Bounty Program and assignment of such right, title and interest will not breach any agreement you may have with a third party (e.g. your employer).\n\n\n_Other Terms and Conditions_\n\n\nSalesforce pledges not to pursue a civil action or initiate a complaint to law enforcement against researchers for security research and vulnerability disclosure activities conducted in accordance with this Policy. We consider security research and vulnerability disclosure activities conducted in accordance with this Policy \u201cauthorized\u201d conduct under the Computer Fraud and Abuse Act, the DMCA and applicable anti-hacking laws such as Cal. Penal Code 502(c). We waive any DMCA claim against you for circumventing the technological measures we have used to protect the applications in scope. If legal action is initiated by a third party against you and you have complied with this Policy, we will take steps to make it known that your actions were conducted in compliance with this Policy.\n\nBy participating in the Bug Bounty Program, you agree to be bound by these rules. These policies will apply to you in addition to, and will not replace, any other terms and conditions that are imposed by HackerOne.\n\n- Your participation in the Bug Bounty Program does not create any kind of employment relationship or partnership between you and Salesforce. You must not hold yourself out as a Salesforce employee or as someone in any way affiliated with Salesforce.\n- You must comply with all applicable laws in connection with your participation in this program. \n- You are responsible for any applicable taxes associated with any reward you receive. \n- Vulnerability reports received prior to the Bug Bounty Program launch are not eligible for rewards and may not be re-submitted for a reward.\n- You will not use any of our trademarks, service marks and logos.\n- We may modify this Policy at any time by posting an updated version of this document.\n- We may terminate this Bug Bounty Program at any time without notice. \n\n\n",
                "profile_picture": "https://profile-photos.hackerone-user-content.com/variants/000/000/069/683fee312381bc46cadc7ea1950abc87944d12c3_original.png/19c85a12ac35f466af1ea2b0ae853bfe5e8f057fb1d6fb62db131707bb67b30d",
                "submission_state": "open",
                "triage_active": null,
                "state": "public_mode",
                "started_accepting_at": "2014-02-28T18:05:03.940Z",
                "number_of_reports_for_user": 0,
                "number_of_valid_reports_for_user": 0,
                "bounty_earned_for_user": 0.0,
                "last_invitation_accepted_at_for_user": null,
                "bookmarked": false,
                "allows_bounty_splitting": true,
                "offers_bounties": true,
                "open_scope": null,
                "fast_payments": null,
                "gold_standard_safe_harbor": null
            }
        },
        {
            "id": "102",
            "type": "program",
            "attributes": {
                "handle": "tinder",
                "name": "Tinder",
                "currency": "usd",
                "policy": "Tinder Bug Bounty Program Terms \r\n====\r\nSecurity is a top priority at Tinder. If you believe you've found a security bug in our in-scope applications or infrastructure, we are happy to work with you to resolve the issue promptly and ensure you are fairly rewarded for your discovery.\r\n\r\nYour participation in our Bug Bounty Program is voluntary. By participating in our Bug Bounty Program, submitting a report or otherwise disclosing a vulnerability to us (\u201cSubmission\u201d), you are indicating that you have read and agree to follow the rules set forth on this page (\u201cProgram Terms\u201d).\r\n\r\nIf (i) you do not meet the eligibility requirements below; (ii) you breach any of these Program Terms or any other agreements you have with Tinder or its affiliates; or (iii) we determine that your participation in our Bug Bounty Program could adversely impact us, our affiliates or any of our members, employees or agents, we, in our sole and absolute discretion, may ban you from our Bug Bounty Program and disqualify you from receiving any benefit of our Bug Bounty Program.\r\n\r\nIf you have questions about the Tinder service or are trying to get help with your own Tinder account, please read our [FAQ](https://www.tinder.com/faq) for assistance.\r\n\r\n# Confidentiality\r\nAny information you receive, collect or otherwise obtain about us, our services, our affiliates or any of our members, employees or agents in connection with our Bug Bounty Program (whether after or before you participate in the Bug Bounty Program, notably as a result of you finding and/or investigating a security bug in our in-scope applications or infrastructure) (\u201cConfidential Information\u201d) must be kept confidential, only used in connection with the Bug Bounty Program and not disclosed to any third party. You may not use, disclose or distribute any such Confidential Information, including without limitation any information regarding your participation in our Bug Bounty Program and any Submission.\r\n\r\nBy participating in our Bug Bounty Program, you represent and warrant that you have not used and will not use Confidential Information for any purpose other than in connection with the Bug Bounty Program and that you have not shared and will not share such Confidential Information with any third party.\r\n\r\nOnce a Submission is made, Tinder reserves the right to request from you, and you already accept to abide by this request, to securely and irreversibly delete any data related to such Submission, including, without limitation, any data about us, our services, our affiliates or any of our members, employees or agents. Additionally, you agree to securely and irreversibly delete any data related to the Submission immediately upon it no longer being reasonably necessary to retain for the purposes of conveying the impact or scope of the reported issue, after verifying with Tinder that it is no longer necessary, and/or if the Submission is closed, regardless of outcome.\r\n\r\n# Eligibility to Participate\r\nTo participate in our Bug Bounty Program, you must: \r\n- Be at least 18 years of age if you test using a Tinder account, and otherwise be the age of majority in your jurisdiction of residence or have the consent of your parent or guardian to participate in our Bug Bounty Program. In any event, you must be over the age of 13.\r\n- Not be a resident of, or make a Submission to our Bug Bounty Program from, a country against which the United States has issued export sanctions or other trade restrictions.\r\n- Not be in violation of any national, state, or local law or regulation with respect to any activities directly or indirectly related to our Bug Bounty Program.\r\n- Not be employed by Tinder or any of its affiliates or an immediate family member of a person employed by Tinder or any of its affiliates.\r\n\r\nYou are responsible for any tax implications of a reward from our Bug Bounty Program depending on your country of residency and citizenship.\r\n\r\n# Program Ground Rules\r\n- Don\u2019t mass create accounts to perform testing against our applications and services.\r\n- No destructive automated testing - under no circumstance should automated testing cause intentional damage to Tinder systems.\r\n- Don\u2019t engage in social engineering (e.g. phishing, vishing, smishing).\r\n- Don\u2019t attempt to extort us.\r\n- Don\u2019t leave any system in a more vulnerable state than you found it.\r\n- Don\u2019t publicly disclose vulnerabilities without our explicit consent.\r\n- Do respect our members\u2019 privacy.\r\n- Do research vulnerabilities and disclose vulnerabilities to us in good faith.\r\n- Do be respectful when interacting with our team.\r\n- Don't leak, manipulate, or destroy any user data. Please only test against accounts you own yourself or with explicit permission of the account holder.\r\n\r\n\r\n# Bounty Eligibility\r\nTinder reserves the right to decide if the minimum severity threshold is met and whether it was previously reported.\r\n\r\nTo qualify for a reward under this program, you must:\r\n\r\n- Send a clear textual vulnerability description of the bug along with the steps to reproduce the vulnerability.\r\n- Include attachments such as screenshots and proof of concept code as necessary. A clear description and proof of concept helps you prove that the security bug is legitimate and speeds up the reward process.\r\n- Be the first to report a specific vulnerability.\r\n- Disclose the vulnerability report directly and exclusively to us. Reminder: you are not permitted to disclose vulnerabilities to third parties -- including vulnerability brokers.\r\n- Stay in scope.\r\n- Do not attempt to elevate privileges, or explore a system beyond the minimum necessary to prove access or attempt to pivot in any way. This will disqualify you from receiving a bounty.\r\n\r\n\r\nIn general, the following would not meet the threshold for inclusion:\r\n-------------------------------------------------------------------\r\n* Vulnerabilities on sites hosted by third-parties unless they lead to a vulnerability on the main website / application\r\n* Broken link hijacking\r\n* Denial of service\r\n* Social engineering\r\n* Spamming\r\n* Homographs, RTLO, or other types of UI issues\r\n* Content spoofing and text injection issues without showing an attack vector/without being able to modify HTML/CSS\r\n* Click-jacking, or issues only exploitable via click-jacking\r\n* Disclosure of known public files or directories (.htaccess, robots.txt, etc)\r\n* Third-party vulnerabilities (e.g. Wordpress) that have recently become publicly known will generally be out of scope for a period of 30 days from the public release of an official patch or workaround. \r\n* Missing or misconfigured security headers which do not lead directly to a vulnerability\r\n* Overly verbose responses (errors, banners, etc.), which cannot be directly used in an exploit\r\n* Software version disclosure without proof of exploitability\r\n* Reports from automated tools or scans\r\n* Lack of certificate pinning, or HSTS\r\n* TLS/SSL version, configuration, weak ciphers or expired certificates\r\n* Lack of Secure, or HTTPOnly flags on cookies\r\n* Lack of, or weak, Captcha, or rate-limiting\r\n* Tap-jacking\r\n* Tab-nabbing\r\n* SPF/DKIM/DMARC related issues, including missing SPF records on subdomains\r\n* Scenarios that require unlikely user interaction and/or outdated OS or software version\r\n* Self-XSS\r\n* Login/Logout CSRF\r\n* Unrestricted file uploads without a clear impact, beyond resource consumption, DoS, undesirable content, etc.\r\n* Third-party API Keys/Secrets embedded in mobile applications, without a clear impact, as many third-parties require this for their own client attribution purposes.\r\n* The ability to obtain multiple promotional items by opening multiple accounts\r\n* Most GPS spoofing related issues\r\n* Attacks against corporate IT infrastructure (e.g. firewalls and their software)\r\n* Attacks against employees (phishing, stealing laptops, physical security issues, etc.)\r\n* Host header injection without a clearly exploitable condition\r\n* Mobile client issues requiring a rooted device and/or outdated OS version\r\n* Attacks requiring MITM or physical access to a user's device.\r\n* Comma Separated Values (CSV) injection without demonstrating a vulnerability.\r\n\r\n# Program Updates and Licenses\r\nWe may modify the Program Terms or cancel our Bug Bounty Program at any time in our sole and absolute discretion.\r\n\r\nAs a condition of participation in the our Bug Bounty Program, you hereby grant Tinder and its affiliates a perpetual, irrevocable, worldwide, royalty-free, transferrable, sublicensable and exclusive license to use, reproduce, adapt, modify, publish, distribute, publicly perform, create derivative work from, make, use, sell, offer for sale and import the Submission, as well as any materials submitted to Tinder in connection therewith, for any purpose. You should not send us any Submission that you do not wish to license to us. You hereby represent and warrant that the Submission is original to you and you own all right, title and interest in and to the Submission. \r\n\r\nThank you for helping keep the Tinder community safe!",
                "profile_picture": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/d225q7g6slolzu41w17rqerob0m6/19c85a12ac35f466af1ea2b0ae853bfe5e8f057fb1d6fb62db131707bb67b30d?response-content-disposition=inline%3B%20filename%3D%22Untitled-1.png%22%3B%20filename%2A%3DUTF-8%27%27Untitled-1.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQXAFJNWKW%2F20250402%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250402T053736Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEGEaCXVzLXdlc3QtMiJHMEUCIGO7uAci%2B5FA8WHx%2B4NbQItNPuO7ETT75zZND7jqKc8tAiEA3Kevc8OjHiS1y%2F5yGekpfESaSRtf7Wcbminfr%2FO8GCQquwUIyv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwwMTM2MTkyNzQ4NDkiDLRAzx3m5jsvOwG0ZCqPBffr6ZkSENp7sJgLuTEhEnLhzbXzFVAk7sNcDo0TFdtkWwEbAIJtlPahhFrvkDYydQzF9slKKEWtAzYKP5uPytsEbj4tfHgIw9rTtgr1TW4mCm6M9FwuZz1Enk9H5CFQCZqszHur0Wxt6gkk4GyUCT%2FUcCbDpcX7XpNSrKFEaS6vrEY8UibepzjcVVAEiQMib7wikFaG%2BG3COVx0vu6D%2FRZpBfA991oCLhnjeM5eqR2WGiBy56IY24NS9TxnQc2rcQq5xTHqGWUrErCv6ER%2BrYov2YqzYCIpd7kFxJx1J85d6OgG5gw9JejI1sglLVhaJ4%2Fq8RYuoYscKt1R0%2F8gtQpOjTDtucvoMES5FH8pmUOeyufsEajMsb57tsNPmIXloCz3EiTIFHUsVzusYpcUhgEu3bU%2BFX2ZB7XjkUoCt%2FqaAZYefxUmADbNCBr0%2FvFrSFuYPA8Oi2V6b1NPqztVBXk7OwvFZNosMBay%2F20KZfH%2FBNn5ZKkVKxNmBnE0nsnmk6%2BX3fHnzg3U9DG1%2Bkk6GsOeC23gyuBc5ggxZOW3l9RK0QnUCP%2FfKqgufgh16%2F3gqZuH1iErqmJgWkmEkJl2pkdzzCTuvGgTn6qYwYLvsAe5Wiq3tLrI7LQ%2F4Z1FkbxiAMS20rOsW68%2FrsBKGa%2BLf7FQDk40ro%2B0h%2F8l3g4k1bhIYOy1tJX%2BCYcyvCjA458fHiE8k2alsILUrtvDZHQm3LundpFZa8NODFkM7W1rNA%2BtmfZpyn1C%2FIXKZm1rCVK1a7ZnbQ9hBAj3l%2F%2Fsra3ciSMhKwUhJmhQ5woiIQc6SCuggrT%2B2Lb1Gbfhw2a9rF7FtBqeWV5gew9b4VcM1QbTMvftV3aqNqGqxm9LIb2Yd58w2o6yvwY6sQHWj8uQtllWZIyFD%2F0TyB0gy4NrUHXPDArM5Y3%2BZTRlXiAqvBU4ea2pCSywIUAKb7BZvwWc6j%2B09O2QddjJIYNev7mo1TpYVkPHIIz2u2T5m9gAqxBG%2FuA5NpblJD32CR1Pm1FoOnxBT61I5lQm5ihmUp%2FslHzhHmmo1hW61ZBZMntsMXHZ7giPu%2FYQ%2BvXX23LTS4tvUDvUH6PixCPEox94XJUHNAzX%2FhtiqysTHXPxEy4%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=46cbd71b6e9f1248679af794a4aa185786dc0aedc461a1cf4084c5794de68061",
                "submission_state": "open",
                "triage_active": true,
                "state": "public_mode",
                "started_accepting_at": "2015-09-28T16:41:43.358Z",
                "number_of_reports_for_user": 0,
                "number_of_valid_reports_for_user": 0,
                "bounty_earned_for_user": 0.0,
                "last_invitation_accepted_at_for_user": null,
                "bookmarked": false,
                "allows_bounty_splitting": true,
                "offers_bounties": true,
                "open_scope": null,
                "fast_payments": null,
                "gold_standard_safe_harbor": null
            }
        },
        {
            "id": "103",
            "type": "program",
            "attributes": {
                "handle": "publitas",
                "name": "Publitas",
                "currency": "usd",
                "policy": "Publitas is committed to working with security experts across the globe to stay up to date with the latest security techniques. If you have discovered a security issue that you believe we should know about, we'd welcome working with you. Please let us know about it and we'll make every effort to quickly correct the issue.\n\n\nIn-Scope security Vulnerabilities:\n========================\n1. SQL Injection\n2. Insecure direct Object references\n3. Remote command execution\n4. Authentication bypass\n5. User enumeration attacks\n6. Application logic flaws\n7. DNS misconfigurations\n8. XXE\n\n\nOut-of-Scope:\n========================\n\n1. XSS in Publitas catalog viewer (We are aware of existing XSS in our catalog viewer. Users can create a catalog and customise the viewer behaviour including injecting code in the buttons and hotspots CTA.\nSubmissions and Report Quality)\n2. CSRF\n3. Running **automated scanners**\n4. Using emails from public db dumps for user enumeration attacks\n5. Abusing contact forms \n6. Email settings SPF/DMARC/DKIM\n7. Security headers (e.g X-FRAME-Options)\n8. BruteForce attacks\n9. Sending bulk emails\n\nSubmissions and Report Quality\n========================\n\nHigh quality Submissions allow our team to better understand the issue and relay the bug to the internal team to fix. The best reports provide enough actionable information to verify and validate the issue without any follow up clarifying questions.\n\n* Check the scope page before you begin writing your report to ensure the issue you are reporting is in scope for the program.\n* Think through the attack scenario and exploitability of the vulnerability and provide as many clear details as possible for our team to reproduce the issue (include screenshots if possible).\n* Please include your understanding of the security impact of the issue. Our acceptance criteria is directly tied to security impact, so the more detail you can provide, the better. \n* In some cases, it may not be possible to have all of the context on the impact of a bug. If you\u2019re unsure of the direct impact, but feel you may have found something interesting, feel free to submit a detailed report and ask.\n* Video only proof-of-concepts (PoCs) will not be considered.\n* A vulnerability must be verifiable and reproducible for us to be considered in-scope.\n* In case of duplicate submissions, we will consider/reward the researcher who reported it first. \n\nConfidentiality\n===========\n\nAny information you receive or collect about us, our affiliates or any of our users, employees or agents in connection with the Bug Bounty Program (\u201cConfidential Information\u201d) must be kept confidential and only used in connection with the Bug Bounty Program. You may not use, disclose or distribute any such Confidential Information, including without limitation any information regarding your Submission, without our prior written consent. You must get written consent by submitting a disclosure request through the HackerOne platform.\n\nIn-Scope domains:\n=================\n* integration1-app.publitas.com\n* integration1-view.publitas.com\n* integration1-api.publitas.com\n* env-publitas-publitas.kinsta.cloud\n\n**Integration1*** env is an exact replica of our production system which is dedicated for security testing. Any testing done on **production/live env will not be eligible for submission/bounty**. \n\n\nWe believe in recognising the work of others. If your work helps us improve the security of our service, we'd be happy to acknowledge your contribution in our [Hall of Fame](https://hackerone.com/publitas/thanks) and consider a reward based on the business value of the reported issue. ",
                "profile_picture": "https://profile-photos.hackerone-user-content.com/variants/000/000/103/83b23429fe1d8e894f5e774b12356c6809e15b3d_original.png/19c85a12ac35f466af1ea2b0ae853bfe5e8f057fb1d6fb62db131707bb67b30d",
                "submission_state": "open",
                "triage_active": null,
                "state": "public_mode",
                "started_accepting_at": "2016-05-26T17:23:06.989Z",
                "number_of_reports_for_user": 0,
                "number_of_valid_reports_for_user": 0,
                "bounty_earned_for_user": 0.0,
                "last_invitation_accepted_at_for_user": null,
                "bookmarked": false,
                "allows_bounty_splitting": false,
                "offers_bounties": false,
                "open_scope": null,
                "fast_payments": null,
                "gold_standard_safe_harbor": null
            }
        },
        {
            "id": "104",
            "type": "program",
            "attributes": {
                "handle": "coinbase",
                "name": "Coinbase",
                "currency": "usd",
                "policy": "#IMPORTANT UPDATE: \n\n** March 27, 2025 Update**\n***CB-MPC (Coinbase Multi-Party Computation) Open Source Release***\nCoinbase is proud to announce the open-sourcing of our MPC cryptography library! You can access it here: https://github.com/coinbase/cb-mpc. This significant milestone underscores our commitment to transparency, security, and promoting innovation within the cryptographic community.\n\nWith this release, we aim to:\n- Enhance the security of the field by enabling developers to quickly deploy threshold signing/MPC for protecting cryptoassets in their applications.\n- Increase transparency regarding Coinbase\u2019s use of MPC, and encourage collaboration within the developer community.\n\nNote that while the code is based on Coinbase's production environment, it is not exactly the same, and it has been modified to make it useful as a general-purpose library.\n\nThe primary focus of our bug bounty program will include identifying and addressing potential vulnerabilities in our open-source MPC implementation. Given the sensitive nature of these cryptographic protocols, it's imperative to safeguard against any exploits that could compromise cryptoassets. Responsible disclosure via the Bug Bounty Program or directly is encouraged (for direct disclosure see https://github.com/coinbase/cb-mpc/blob/master/SECURITY.md).\n\nThrough community collaboration and vigilant security reviews, we aspire to provide an easy to use and highly secure MPC library to help developers secure cryptoassets across the entire cryptocurrency and blockchain ecosystem.\n\n\n**January 10, 2025 Update**\nWe are now publicizing our open source projects for our bug bounty program. These open source projects can be found here:\n\n* github.com/coinbase\n* github.com/base-org\n\nPlease reference this matrix in regards to all open source related bugs:\n\n## Open Source Severity Matrix\n\n| Vulnerability Tier | Explanation |\n|:------------- | :-----|\n| Critical | High-severity vulnerabilities that affect common configurations and are easily exploitable. Examples: significant disclosure of sensitive data, remote code execution. Private by default; triggers new releases for all supported versions. |\n| High | High-severity vulnerabilities that affect less common configurations or are less easily exploitable. Private by default; triggers new release for all supported versions within a reasonable timeframe. |\n| Medium |  Issues like crashes, local flaws, and protocol vulnerabilities in less commonly used scenarios. Private until next release; released with subsequent updates. |\n| Low | Non-cryptographic issues or deprecated cryptographic code. Fixed immediately in latest development versions; may be backported to older versions. |\n|||\n\n**April 16, 2024 Update**\nWe have included a severity matrix for web3 related bugs into the program page below.\n\n**April 10, 2024 Update**\nWe have added a new section below regarding all submissions for our L2 BASE network and related assets. This section outlines new items in-scope, and areas of focus for our researchers.\n\n**August 28, 2023 Update**\nWe would like to clarify that our severity ratings and payouts at Coinbase do not rely on the CVSS (Common Vulnerability Scoring System) score, other companies' payouts, or even examples listed on our program page below. These items may be used as a guideline to approach a final decision. Instead, we utilize an internal scoring metric to assess and determine the severity of reported vulnerabilities and their respective payouts. The CVSS score serves as a guideline for researchers to submit their assessment of severity, based on their evaluation. However, it is important to note that Coinbase is not bound to payout solely based on the CVSS metrics, any other reports referenced on the HackerOne platform, or any examples listed on our program page. All payouts are subject to the discretion of our Coinbase security team, who carefully evaluate the reported vulnerabilities and their potential impact.\n\n**August 22, 2023 Update**\n\nWe are changing our internal tracking process for bugs. After a bug is paid out, even after it is triaged, it will automatically be moved into a \"closed\" state on HackerOne. This does not necessarily the mean the bug has been remediate, but it instead means the ticket has been addressed and the final decision regarding the bug has been decided upon. If you have any questions about this, please reach out to us via HackerOne.\n\n**February 8, 2023 Update**\n\nWe have updated our payout structure and criteria for earning higher bug bounty payouts. A new payout cap of $1 Million has been implemented. Details of these updates can be found below:\n\n| New Vulnerability Tier(s) | Description | Reward |\n|:------------- | :-----| :-------|\n| Extreme | Vulnerabilities that affect critical assets that could cause serious business disruption such as: Unauthorized access to Coinbase owned hot/cold wallet assets,funds, and/or wallet private keys. | Up-to $1,000,000 |\n\nSeveral internal metrics will be used to calculate the validity of an \"extreme tier\" bug. Careful time and consideration is put into these bug bounty awards. This table entry has been added below in the main program policy.\n\n**Updated on October 25, 2022**\n\nWe have added some new changes to the bug bounty program. We are including new categories that are eligible for bug bounty rewards to our program. We have also added specific examples of what severity ratings different bugs will constitute. The new updated table with severity ratings can be found below.\n\n\n# Introduction\n\nCoinbase recognizes the importance and value of security researchers\u2019 efforts in helping keep our community safe. We encourage responsible disclosure of security vulnerabilities via our bug bounty program (\u201cBug Bounty Program\u201d)  described on this page.  \n\n**Note: This program is for the disclosure of software security vulnerabilities only. If you believe your Coinbase account has been compromised, change your password and immediately contact support via our [support form] (https://support.coinbase.com/customer/portal/emails/new)**\n\nThe Bug Bounty Program directly serves Coinbase's [mission](https://www.coinbase.com/mission) by helping us be the most trusted way to use digital currency.  In that spirit, the scope and philosophy of the program aim to safeguard two highest priority assets (\u201cSensitive Data\u201d) :  \n* Digital and fiat currency balances\n* Customer information\n\nThe Bug Bounty Program scope covers all software vulnerabilities in services provided by Coinbase.  \n\nA valid report is any in-scope report that clearly demonstrates a software vulnerability that harms Coinbase or Coinbase customers.  A report must be a valid, in scope report in order to qualify for a bounty. Coinbase will determine in its sole discretion whether a report is eligible for a reward and the amount of the award.\n\n# New Categories\n\n**Updated on October 25, 2022**\n\n* **Fraud Loss** - A loss of funds or revenue that can be attributed to insider trading, control/chargeback bypass or rate limit abuse. \n* **Staking Loss** -  Issues impacting staking rewards that can be attributed to abuse and/or misconfigurations. \n* **MNPI exposure** - Issues that provide unfair market advantages to stakeholders trading or holding securities. \n* **Third Party integrations** - Issues that may impact our corporate environment, brand or disrupt a critical service.\n\n# BASE Network (Updated April 10, 2024)\n\nWith the launch of our Layer 2 blockchain Base, we're intensifying our focus on securing transactions within the cryptocurrency ecosystem. As leaders in this space, we prioritize stringent security protocols to safeguard user assets. To this end, we're expanding our scope to address critical vulnerabilities, specifically targeting **memory pool information leaks**. These vulnerabilities pose a significant threat, potentially affording unauthorized access to pending transaction data, thereby exposing sensitive information to MEV searchers. By mitigating these risks, we aim to enhance the resilience of our platform against exploitation, ensuring the confidentiality and integrity of all transactions. \n\nBase is built on the [OP Stack framework](https://github.com/ethereum-optimism/optimism), so researches should also refer to  **Optimism's** bug bounty program which can be found [here](https://immunefi.com/bounty/optimism/), for any findings that stem from the core framework or protocol.\nOptimism is a project dedicated to scaling Ethereum's technology and expanding its ability to coordinate people from across the world to build effective decentralized economies and governance systems.\n\n# Web3 Components Severity Matrix\n\nThe following severity matrix serves as a guideline for assessing potential payouts for bugs related to our Web3 components. Please note that while this chart provides a general framework, actual payouts may vary. Factors such as the extent of exposure and risk involved are also considered in our final payout decisions.\n\n## Severity Levels and Examples\n\n| Severity          | Examples                                                                 |\n|:-------------------|:--------------------------------------------------------------------------|\n| **Critical**      | Exposures of Material Non-Public Information (MNPI), sustained business disruptions, significant monetary losses to Coinbase, or compromises affecting the broader Web3 ecosystem.  |\n| **High**          | Significant but not critical impacts, including considerable monetary losses or ecosystem compromises affecting a substantial user base. |\n| **Medium**        | Moderate monetary impacts to Coinbase or compromises within the Web3 ecosystem involving a moderate number of users.              |\n| **Low**           | Minor monetary impacts to Coinbase.                                      |\n\n### Additional Information\n\n- **Risk Rating System**: We use an internal risk rating system that includes specific metrics related to monetary impact. These metrics are confidential and are applied internally to determine the final payout.\n- **PII Leaks**: Personal Identifiable Information (PII) leaks are evaluated through our internal scoring system, which categorizes the severity based on the specifics of the leaked information and the associated risk.\n\nThis matrix is part of our ongoing effort to ensure transparency and fairness in our bug bounty program while protecting the integrity of our systems and the privacy of our users.\n\n# Program Policies\n\nCoinbase adheres to and supports the HackerOne Gold Standard Safe Harbor terms, included herein. We believe it is critical to provide these assurances in order to allow security researchers to fully investigate potential security vulnerabilities.  As such, we embrace the standardization of policy language that provides legal protection to security researchers\n\n\n### Researcher Requirements\n\nComplying with the Bug Bounty Program policy requires researchers to adhere to \u201cResponsible Disclosure\u201d.  Responsible Disclosure includes:\n\n1. Providing Coinbase a reasonable amount of time to fix a vulnerability prior to sharing details of the vulnerability with any other party and requesting permission to publish pursuant to the HackerOne Disclosure Process. https://www.hackerone.com/disclosure-guidelines\n2. Making a good faith effort to preserve the confidentiality and integrity of any Coinbase customer data.\n3. Not defrauding Coinbase customers or Coinbase itself in the process of participating in the Bug Bounty Program.\n4. Not profiting from or allowing any other party to profit from a vulnerability outside of Bug Bounty Program payouts from Coinbase. \n5. Reporting vulnerabilities with no conditions, demands, or ransom threats.\n\nCoinbase considers Social Engineering attacks against Coinbase employees be a violation of Program Policies.  Researchers engaging in Social Engineering attacks against Coinbase employees will be banned from the Coinbase Bug Bounty program.  We define Social Engineering as acts that influence people to perform security-impacting actions or divulge confidential information.\n\nResearchers that engage in extortion attempts will be banned from the Coinbase Bug Bounty program and reported to law enforcement.\n\n\n# Report Evaluation\nCoinbase Security\nIn order to be deemed valid, a report must demonstrate a software vulnerability in a service provided by Coinbase that harms Coinbase or Coinbase customers.  Reports that include a clear Proof of Concept or specific step by step instructions to replicate the vulnerability are considerably more effective at communicating a researcher\u2019s findings and are therefore far more likely to be deemed valid.\n\nA report must be a valid, in scope report in order to qualify for a bounty.  Coinbase awards bounties based on severity of the vulnerability.  We determine severity based on two factors: Impact and Exploitability.\n\nA report must also follow all the rules of HackerOne's Code of  Conduct found here: https://www.hackerone.com/policies/code-of-conduct along with all rules found on our Coinbase HackerOne page.\n\nImpact describes the effects of successful exploitation upon Coinbase systems or customers.  We make this assessment primarily by examining the effects of exploitation on confidentiality, integrity, or availability of underlying information.  Vulnerabilities that require considerable response and remediation efforts or could result in reputational damage are also considered to have greater impact.  For example:\n* Critical Impact: Attackers can read or modify Sensitive Data in a system, execute arbitrary code on the system, or exfiltrate digital or fiat currency in some way.\n* Low Impact: Attackers can gain small amounts of unauthorized, low sensitivity information impacting a subset of users, or slightly impact accuracy and performance of a system. (Please note that Denial of Service bugs will be considered on a case-by-case basis. Denial of Service issues that don't impact availability of funds or user data will not likely be accepted as a valid report.) Lack of rate limiting in Coinbase products have been accepted as valid reports in the past, but will be not considered valid unless a critical impact to the environment is demonstrated\n\nPlease see the following guidance on rate limiting submissions:\n1. A clear bypass that demonstrates access to user data or funds will not be considered unless an actual user of the Coinbase platform and not a test account can be accessed.\n2. A researcher should be aware that rate limiting exists and has been evaluated by security internally and by other security researchers via the HackerOne Platform\n3. A researcher should take into consideration compensating controls when rating the criticality of the rate limiting submission. Note: Do not assume there are no security controls in place\n\n\nExploitability describes the difficulty of actively exploiting the vulnerability itself.  We make this assessment primarily based on the prerequisites for exploitation, including level of access required, availability of information critical for successful exploitation, and likelihood of alignment of required factors outside the attacker's direct control such as social engineering requirements or timing requirements.\n\nThis table was last updated **Oct 25, 2022**\n\n| Vulnerability Tier | Reward |\n|:------------- | :-----|\n| Extreme | Vulnerabilities that affect critical assets that could cause serious business disruption such as: Unauthorized access to Coinbase owned hot/cold wallet assets,funds, and/or wallet private keys.\n| Critical | Vulnerabilities that could influence market swings via Coinbase Api or Services (positive or negative), Remote Code Execution on staking nodes, Abuse of staking rewards over 10M, Proof of insider trading, Large scale money laundering, 2FA bypass for institutional trading accounts\n| High | Bypassing Coinbase fee structures that impact the majority of Coinbase users, A flaw in the system that leads to a small-moderate (Less than 15% of Coinbase users) number of sensitive customer PII being leaked, A flaw in the system that allows users from a given region to bypass KYC restrictions, 2FA bypass that impacts one Coinbase product|\n| Medium |  Bypassing fee structures that impact a small to moderate number of Coinbase users, A flaw in the system that leads to a small-moderate (Less than 15% of Coinbase users) number of customers\u2019 semi-sensitive information being leaked, A flaw in the system that prevents over 1000 users from purchasing/trading crypto currency on Coinbase infrastructure |\n| Low | Financial loss of less than $100,000 for any Coinbase owned system, Default security misconfiguration or best practices, that should be implemented but do not directly result in an exploit or significantly decrease the security of the application or service, Localized exploitation within a constrained environment and/or parameters, Exploit exposure to a smaller subset of non-critical systems and/or data |\n\nIn order to provide general guidelines to researchers regarding the payouts that can be expected for a given report, Coinbase uses the severity of a report to place the report into one of the following tiers.  \n\n| Vulnerability Tier | Reward |\n|:------------- | -----:|\n| Extreme  | $1,000,000 |\n| Critical | $50,000 |\n| High | $15,000|\n| Medium |  $2,000 |\n| Low | $200 |\n|||\n\n**Updated Dec 21, 2022**\n\nThe payouts listed next to each tier are minimum bounties for the tier.  Bonuses in excess of the tier minimum can be awarded based on the severity of the vulnerability or creativity of the exploitation.  Researchers are also more likely to earn a larger reward for exceptionally clear and high-quality reports.  The cap for bounty payouts is $1,000,000.  Different metrics on severity and impact will be used internally to determine larger bug bounty payouts. \n\nPrevious bounty amounts are not considered precedent for future bounty amounts.  Software is constantly changing and therefore the given security impact of the exact same vulnerability at different times in the development timeline can have drastically different security impacts.\n\nCertain vulnerabilities with a working proof of concept on some of our Android mobile app(s) may qualify for an additional bounty through the Google Play Security Rewards Program. To see which apps and vulnerabilities may qualify for a bounty, please refer to the Google Play Security Rewards Program\u2019s Scope and Vulnerability Criteria.\n\nResearchers should not attempt to transfer any funds.  If a proof of concept requires such an attempt, the researcher must first contact Coinbase and seek approval.  A researcher that attempts to transfer funds not owned by the researcher without prior approval is ineligible for bounty payments.\n\n# Report Closure\nCoinbase reviews all findings that are reported via our Bug Bounty Program.  Each report submission is reviewed and evaluated to ensure validity. If the description in the report is unclear, Coinbase will request additional information from the reporter.  After all information is aggregated; the report submission goes through an internal review and scoring process.  After the internal review process is complete, any bugs that are not reproducible, invalid or informative will be closed.\n\nPLEASE NOTE: It is up to the researcher to provide detailed information and supporting evidence to support all reports.  Failure to provide a detailed report will result in delayed triage and/or ticket closure.  Additionally, report disclosed or submitted outside of the HackerOne platform will not be considered for bounty and are strictly prohibited. \n\n# Scope\n\nThe Coinbase Bug Bounty program scope covers all software vulnerabilities in services provided by Coinbase.  \n\nSpecific domains hosting Coinbase services are provided below:\n* *.coinbase.com  (All assets on coinbase.com and subdomains, excepting services provided by third parties)\n* *.cbhq.net (All assets on cbhq.net and subdomains, excepting services provided by third parties)\n* com.coinbase.android (Android: Play Store Coinbase app)\n* com.coinbase.ios (iOS: App Store Coinbase app)\n* 54.175.255.192/27 (All Coinbase provided services hosted on this block of IPs)\n* *.tagomi.com (All assets on tagomi.com and subdomains, except third-party services) ONLY Critical or service Impacting bugs will be accepted. \n\n\nPlease view the scope section for a more detailed list of in-scope and out-of-scope assets. Companies Coinbase has acquired are not in scope of the bug bounty program unless they are specifically added to the scope section and declared in scope. \n\nAdditionally, all vulnerabilities that require or are related to the following are out of scope:\n* Social engineering\n* Username enumeration\n* Rate Limiting (Non-critical issues) \n* Physical security\n* Non-security-impacting UX issues\n* Deprecated Open Source libraries are not in scope.  If you would like to report a vulnerability for one of these libraries, please submit it on github via an issue or PR.  Note: we do accept vulnerability reports through HackerOne for our currently supported, actively maintained open source libraries.\n* Vulnerabilities or weaknesses in third party applications that integrate with Coinbase\n* Ability to abuse existing banking functionality such as ACH or credit card chargebacks\n* Publicly available leaked credentials (database dumps) by themselves that are found on the internet are out of scope. If you are able to leverage our current systems to receive sensitive user information the report will be considered.\n\nIf you feel that a particular asset or activity not mentioned here should be in scope, please submit a report along with a brief description of why you believe that the asset should be covered by this scope.\n\n# Eligibility\nTo participate in the Bug Bounty Program you must:\n\n* Not be a resident of any country under U.S. sanctions or any country that does not allow participation in these types of programs\n* Be at least 14 years old and have legal capacity to agree to these terms and participate in the Bug Bounty Program\n* Have permission from your employer to participate\n* Not be (for the previous 12 months) a Coinbase employee, immediate family member of a Coinbase employee, Coinbase contractor, or Coinbase service provider.\n\nAll submissions for bounties to Coinbase must be through HackerOne.\n\n\n# Fine Print\n\nWe reserve the right to modify the Bug Bounty Program or cancel the Bug Bounty Program at any time.  Anonymous reports are acceptable through HackerOne but are not eligible for bounty awards.\n\nThe current Bug Bounty Program as described on this page is v4.1 of our Bug Bounty Program. Please also refer to [HackerOne\u2019s Finder Terms and Conditions.](https://www.hackerone.com/terms/finder)",
                "profile_picture": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/fwfizd37a3tsttb1ff4539buzmdw/19c85a12ac35f466af1ea2b0ae853bfe5e8f057fb1d6fb62db131707bb67b30d?response-content-disposition=inline%3B%20filename%3D%22Coinbase.png%22%3B%20filename%2A%3DUTF-8%27%27Coinbase.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQXAFJNWKW%2F20250402%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250402T053736Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEGEaCXVzLXdlc3QtMiJHMEUCIGO7uAci%2B5FA8WHx%2B4NbQItNPuO7ETT75zZND7jqKc8tAiEA3Kevc8OjHiS1y%2F5yGekpfESaSRtf7Wcbminfr%2FO8GCQquwUIyv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwwMTM2MTkyNzQ4NDkiDLRAzx3m5jsvOwG0ZCqPBffr6ZkSENp7sJgLuTEhEnLhzbXzFVAk7sNcDo0TFdtkWwEbAIJtlPahhFrvkDYydQzF9slKKEWtAzYKP5uPytsEbj4tfHgIw9rTtgr1TW4mCm6M9FwuZz1Enk9H5CFQCZqszHur0Wxt6gkk4GyUCT%2FUcCbDpcX7XpNSrKFEaS6vrEY8UibepzjcVVAEiQMib7wikFaG%2BG3COVx0vu6D%2FRZpBfA991oCLhnjeM5eqR2WGiBy56IY24NS9TxnQc2rcQq5xTHqGWUrErCv6ER%2BrYov2YqzYCIpd7kFxJx1J85d6OgG5gw9JejI1sglLVhaJ4%2Fq8RYuoYscKt1R0%2F8gtQpOjTDtucvoMES5FH8pmUOeyufsEajMsb57tsNPmIXloCz3EiTIFHUsVzusYpcUhgEu3bU%2BFX2ZB7XjkUoCt%2FqaAZYefxUmADbNCBr0%2FvFrSFuYPA8Oi2V6b1NPqztVBXk7OwvFZNosMBay%2F20KZfH%2FBNn5ZKkVKxNmBnE0nsnmk6%2BX3fHnzg3U9DG1%2Bkk6GsOeC23gyuBc5ggxZOW3l9RK0QnUCP%2FfKqgufgh16%2F3gqZuH1iErqmJgWkmEkJl2pkdzzCTuvGgTn6qYwYLvsAe5Wiq3tLrI7LQ%2F4Z1FkbxiAMS20rOsW68%2FrsBKGa%2BLf7FQDk40ro%2B0h%2F8l3g4k1bhIYOy1tJX%2BCYcyvCjA458fHiE8k2alsILUrtvDZHQm3LundpFZa8NODFkM7W1rNA%2BtmfZpyn1C%2FIXKZm1rCVK1a7ZnbQ9hBAj3l%2F%2Fsra3ciSMhKwUhJmhQ5woiIQc6SCuggrT%2B2Lb1Gbfhw2a9rF7FtBqeWV5gew9b4VcM1QbTMvftV3aqNqGqxm9LIb2Yd58w2o6yvwY6sQHWj8uQtllWZIyFD%2F0TyB0gy4NrUHXPDArM5Y3%2BZTRlXiAqvBU4ea2pCSywIUAKb7BZvwWc6j%2B09O2QddjJIYNev7mo1TpYVkPHIIz2u2T5m9gAqxBG%2FuA5NpblJD32CR1Pm1FoOnxBT61I5lQm5ihmUp%2FslHzhHmmo1hW61ZBZMntsMXHZ7giPu%2FYQ%2BvXX23LTS4tvUDvUH6PixCPEox94XJUHNAzX%2FhtiqysTHXPxEy4%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=b0fe647e09439a8bba05ccc76b9c349631a920753dcb71638b7ba620e4d67487",
                "submission_state": "open",
                "triage_active": null,
                "state": "public_mode",
                "started_accepting_at": "2014-03-28T22:09:39.471Z",
                "number_of_reports_for_user": 0,
                "number_of_valid_reports_for_user": 0,
                "bounty_earned_for_user": 0.0,
                "last_invitation_accepted_at_for_user": null,
                "bookmarked": false,
                "allows_bounty_splitting": true,
                "offers_bounties": true,
                "open_scope": null,
                "fast_payments": null,
                "gold_standard_safe_harbor": true
            }
        },
        {
            "id": "111",
            "type": "program",
            "attributes": {
                "handle": "automattic",
                "name": "Automattic",
                "currency": "usd",
                "policy": "Automattic runs [WordPress.com](https://wordpress.com/), [Jetpack](https://jetpack.com/), [Beeper](https://beeper.com), [Texts](https://texts.com/), [Akismet](https://akismet.com/), [Gravatar](https://gravatar.com/), [WooCommerce](http://www.woothemes.com/woocommerce/), [Tumblr](https://tumblr.com/), [Simplenote](https://simplenote.com/), and more. Find a complete list of projects on our website https://automattic.com/.\n\n> **Please, report vulnerabilities in the [WordPress](http://wordpress.org),  [BuddyPress](http://buddypress.org), or  [bbPress](http://bbpress.org) open-source projects through the [WordPress HackerOne page](https://hackerone.com/wordpress).**\n\n\nEligibility and Responsible Disclosure\n--------------------------------------\nYou are responsible for complying with all applicable laws and **must** only ever use or otherwise access your own test accounts when researching vulnerabilities in any of our products or services. Access to, or modification of user data is explicitly prohibited without prior consent from the account owner.\n\nAny public disclosure of issues prior to resolution may result in disqualification from the program. Individuals who we are legally prohibited from paying, such as those residing in a country on a U.S. sanctions list, are ineligible for rewards.\n\n### Rewards\n\n| Severity | WordPress.com | Everything Else  |\n|-|-|-|\n| Critical | $1,000 | $500 |\n| High | $600 | $300 |\n| Medium | $300 | $200 |\n| Low | $100 | $100 |\n\nThe table above outlines the nominal rewards for in-scope assets. Automattic, at its own discretion, will make a final decision on the bounty for qualifying vulnerabilities. Bounties will be awarded to the first reporter of a vulnerability only.\n\nAmounts may vary depending upon the severity of the issue and quality of the report. \n\n### Crafting a Report\n\nIf our security team cannot reproduce and verify an issue, a bounty cannot be awarded. To help streamline our intake process, we ask that submissions include:\n\n- Description of the vulnerability\n- Steps to reproduce the reported vulnerability\n- Proof of exploitability (e.g. screenshot, video)\n- Perceived impact to another user or the organization\n- Proposed [CVSSv3](https://www.first.org/cvss/calculator/3.0) Vector & Score (without environmental and temporal modifiers)\n- List of URLs and affected parameters\n- Other vulnerable URLs, additional payloads, Proof-of-Concept code\n- Browser, OS and/or app version used during testing\n\n*Note: Failure to adhere to these minimum requirements may result in the loss of a reward.*\n\n**All supporting evidence and other attachments must be stored only within the report you submit.** Do not host any files on external services.\n\n#### Same Bug, Different Host\n\nFor each report, please allow Automattic sufficient time to patch other host instances. If you find the same bug on a different (unique) host, prior to the report reaching a triaged state, file it within the existing report. Any reports filed separately while we are actively working to resolve the issue will be treated as a duplicate.\n\n#### Same Payload, Different Parameter\n\nIn some cases, rewards may be consolidated into a single payout. For example, multiple reports of the same vulnerability across different parameters of a resource, or demonstrations of multiple attack vectors against a fundamental framework issue. We kindly ask you to consolidate reports rather than separate them.\n\nQualifying Vulnerabilities\n--------------------------\nAny reproducible vulnerability that affects the security of our users is likely to be in scope for the program. Common examples include:\n\n - Cross Site Scripting (XSS)\n - Cross Site Request Forgery (CSRF)\n - Server Side Request Forgery (SSRF)\n - Remote Code Execution (RCE)\n - SQL Injection (SQLi)\n\nNon-Qualifying Vulnerabilities (Out of Scope)\n---------------------------------------------\nWe are generally not interested in DoS vulnerabilities that are perceived by a lack of rate-limiting or captcha. As a web-scale service, our threshold for rate limiting is higher than you would probably expect. Of course, if you think you have found an exception to this rule, please let us know.\n\n\"Follow-Ups\" WooCommerce extension is out of scope.\n\nCross Site Scripting (XSS) is out of scope for all impactless domains where arbitrary HTML / JavaScript is intentionally allowed, e.g. `[blog].tumblr.com`, `cldup.com` etc.\n\nTabnabbing vulnerabilities are out of scope.\n\nMissing Best Practices that don't pose a direct security threat will most likely not be accepted.\n\nFine Print\n--------------\nYou are expected to comply with all applicable laws in connection with your participation in this program and you are responsible for the payment of any taxes associated with rewards received. ",
                "profile_picture": "https://profile-photos.hackerone-user-content.com/variants/000/000/111/7f89e1ea233f92916202521a069fdbfe9eced339_original.png/19c85a12ac35f466af1ea2b0ae853bfe5e8f057fb1d6fb62db131707bb67b30d",
                "submission_state": "open",
                "triage_active": null,
                "state": "public_mode",
                "started_accepting_at": "2014-04-14T14:29:04.170Z",
                "number_of_reports_for_user": 0,
                "number_of_valid_reports_for_user": 0,
                "bounty_earned_for_user": 0.0,
                "last_invitation_accepted_at_for_user": null,
                "bookmarked": false,
                "allows_bounty_splitting": true,
                "offers_bounties": true,
                "open_scope": null,
                "fast_payments": null,
                "gold_standard_safe_harbor": null
            }
        },
        {
            "id": "122",
            "type": "program",
            "attributes": {
                "handle": "att",
                "name": "AT&T",
                "currency": "usd",
                "policy": "#AT&T Bug Bounty Program Policy\nWelcome to the AT&T Bug Bounty Program! We now use a pay per vulnerability model and utilize the HackerOne platform! \n\nUPDATE: \nThe following asset has been removed from scope as of 1/2/2025 SupplierGateway.\nRemoved from scope as of 11/16/2021 DIRECTVLA (Vrio Corp, SKY)\n\nThe Program encourages and rewards contributions by developers and security researchers who help make AT&T's public-facing online environment more secure. Through the Program AT&T provides monetary rewards and/or public recognition for security vulnerabilities responsibly disclosed to us.\n\nThe following explains the details of the Program. If you are new to our Program, please be sure to review the Program Guidelines, Program Exclusions, and Terms and Conditions, as well as the Reporting and Payment Process prior to making a submission.\n\n#Program Guidelines\nThe Program applies to security vulnerabilities found within AT&T's Environment, which includes, but is not limited to, AT&T\u2019s websites, exposed APIs, mobile applications, and devices. At this time, any vulnerabilities submitted that are specific to SupplierGateway, Xandr, DIRECTVLA (Vrio Corp, SKY), WarnerMedia assets, including HBO, are out-of-scope of the AT&T program and are therefore ineligible for bounty rewards. A security vulnerability is generally an error, flaw, mistake, failure, or fault in a computer program or system that impacts the security of a device, system, network, or data. Any security vulnerability may be considered for the Program; however, it must be a new, previously unreported, vulnerability in order to be eligible for reward or recognition. \n\nTypically, in-scope submissions will include high impact vulnerabilities. However, any vulnerability that could realistically place the online security of AT&T, our customers, or the public at large at risk is in scope and might be rewarded. Vulnerabilities which directly or indirectly affect the confidentiality or integrity of user data or privacy are prime candidates for a reward. Some characteristics that are considered when \"qualifying\" vulnerabilities include those that:\n\n* Directly or indirectly affect the confidentiality or integrity of user data or privacy;\n* Compromise the integrity of the system;\n* Enable unauthorized access to significant data or resources;\n* Enable the running of unauthorized code;\n* Increase privileges or access beyond that which is intended;\n* Interfere with or bypass security controls or mechanisms;\n* Are exploitable (i.e. not purely theoretical);\n* Can be launched remotely; and\n* Could cause damage to a user's system.\n\n#Focus Assets in scope. \n* att.com/msapi\n* att.com/buy/\n* att.com/acctmgmt/\n* myattwg.att.com/olam/ \n* myATT mobile apps\n* signin.att.com\n* identity.att.com\n\n#Informative Reports\nSubmissions against the following assets are accepted but are not eligible for an award and will be closed as Informative.\n* Credential Stuffing\n* Authorized Resellers\n* Authorized Retailers\n* Preferred Dealer\n\n#Program Exclusions\nThe following categories of vulnerabilities are excluded from reward in the Program unless otherwise directed by AT&T:\n\n* Attacks against AT&T infrastructure;\n* Social engineering and physical attacks;\n* Distributed Denial of Service attacks that require large volumes of data;\n* 0-day vulnerabilities less than 30/60/90 days from patch release are ineligible for bounty;\n* Provisioning and/or usability issues;\n* Violations of licenses or other restrictions applicable to any vendor's product;\n* Security vulnerabilities in third-party products or websites that are not under AT&T\u2019s direct control;\n* Duplicate reports of security issues, including security issues that have already been identified internally;\n* Tenant/cloud systems executing in an Internet Data Center (IDC), where AT&T is simply acting as the site host;\n* Employee Resource Group (ERG) websites;\n* Clickjacking reports against unauthenticated pages and/or static content resources;\n* Reports of missing SPF records for domains with no MX record;\n* Vulnerabilities that are a result of malware;\n* Theoretical security issues with no realistic exploit scenario(s) or attack surfaces, or issues that would require complex end user interactions to be exploited, or\n* Issues determined to be low impact.\n* Self-XSS involving a payload in headers or in the body of the request\n* POST based Reflected XSS\n* Vulnerabilities which require a social engineering component are excluded. i.e. presenting injected data to a user and expecting the user to click on an external link to complete the compromise\n* Login/logout CSRF\n* Content spoofing which depends on a social engineering element to succeed (such as an error page suggesting that a user take an action) is excluded\n* Abandoned CNAME records require a social engineering component to successfully exploit, they are excluded unless there is an existing link from a company resource to the invalid CNAME\n\nIn addition, the submitter:\n\n* Must not be the author of the code with the vulnerability or\n* Must not be employed by AT&T directly or indirectly.\n\nVulnerabilities that are disclosed to any party other than AT&T, including vulnerability brokers, will not qualify for reward. This includes both public disclosure and limited private release.\n\n#Program Terms and Conditions\nThe following Terms and Conditions apply to the Program:\n\n* \"AT&T\" refers to AT&T Services, Inc., and its affiliates.\n* You must comply with the Program and abide by the law.\n* AT&T employees, contractors, and their families are not eligible for rewards.\n* You must submit your report as soon as you have discovered a potential vulnerability. By submitting the vulnerability, you affirm that you have not disclosed and agree that you will not disclose the vulnerability or your submission to anyone other than AT&T following the process set forth in the Program.  Absent AT&T's prior written consent, any disclosure would violate the Program. It is understood and agreed that money damages would not be a sufficient remedy for any breach of this paragraph by you or your representative(s) and that AT&T shall be entitled to specific performance as a remedy for any such breach, including injunctive relief. Such remedy shall not be deemed to be the exclusive remedy for any such breach but shall be in addition to all other remedies available at law or equity to AT&T.\n* Submissions selected for rewards, and the individuals who submitted the vulnerabilities will receive recognition at the sole discretion of AT&T.\n* By submitting information about a potential vulnerability, you agree to all Program Terms and Conditions and grant AT&T a worldwide, royalty-free, non-exclusive license to use your submission. Only the first submission of a given potential vulnerability that AT&T has not yet identified is eligible. In the event of a duplicate submission, only the earliest received is considered.\n* Eligibility for rewards, including the determination of the recipients and reward amount is left up to the sole discretion of AT&T.\n* Out of scope vulnerabilities submitted are generally less likely to receive recognition or rewards under the Program.\n* You are responsible for all taxes associated with and imposed on any reward you may receive in connection with your submission. HackerOne handles all bounty payments through the HackerOne platform. Please refer to HackerOne\u2019s relevant policies [here](https://docs.hackerone.com/hackers/tax-forms.html#___gatsby).                                                                                                                                              \n* You may only exploit, investigate, or target vulnerabilities against your own accounts. Testing must not violate any law, or disrupt or compromise any data or access data that is not yours; intentional access of customer data other than your own is expressly prohibited.\n* If you inadvertently access customer, employee, or business related information during your testing, you must immediately notify AT&T and the information must not be used, disclosed, stored, or recorded in any way. Inadvertent access of the data must be declared within your submission.\n* Your testing activities must not negatively impact AT&T, or AT&T's Environment availability or performance.\n* AT&T reserves the right of non-remediation in its sole discretion.\n* The Program constitutes the entire agreement and understanding of the parties with respect to the items listed herein. The Program may be amended or modified any time without notice in AT&T\u2019s sole and absolute discretion. \n* If any portion of the Program is found to be illegal or unenforceable, then the parties shall be relieved of their responsibilities arising under such portion, but only to the extent that such portion is illegal or unenforceable.\n\n#Reporting Process\nWhen reporting vulnerabilities, you must first register or log on to your account on HackerOne. In describing the vulnerability it is important to include all necessary details required for reproducing the vulnerability as well as the tools required to reproduce the vulnerability. Please note that the vulnerability should be treated in accordance with the terms of the Program.\n\n* Each submission will typically receive a reply within one (1) business day acknowledging that the report was successfully received. \n* Duplicate submissions (where the vulnerability has already been reported to AT&T are not eligible for rewards. In most instances, you will not be notified of a duplicate report condition until after the vulnerability has been remediated.\n* Please recognize that AT&T operates a complex Environment and the amount of time required to address a reported issue can vary from a few hours to several months. You will receive notification of the final outcome of our remediation efforts once the Program is notified by AT&T internal support team. AT&T cannot provide updates on remediation efforts that are in progress.\n\n#Awarding Process\nOnly vulnerabilities will be considered for an award.  Only those vulnerabilities that have been resolved will receive an award. The bounties range from $50 to $3,000 depending on criteria such as the type/severity of the vulnerability, impacted domain(s), potential vulnerability exploits, and vulnerability report submission quality. In general, Reflected XSS will be considered low severity and awarded with minimum bounty unless other impact is shown.THE CRITERIA USED TO DETERMINE THE PAYOUT FOR A VULNERABILITY IS SOLELY AT THE DISCRETION OF AT&T.\n\n#Change to Program Terms\nAT&T reserves the right to discontinue the Program at any time without notice in its sole discretion.\n\n\n",
                "profile_picture": "https://profile-photos.hackerone-user-content.com/variants/000/000/122/d3fcb8930c067881a886d579bee3e2122409fb99_original.png/19c85a12ac35f466af1ea2b0ae853bfe5e8f057fb1d6fb62db131707bb67b30d",
                "submission_state": "open",
                "triage_active": true,
                "state": "public_mode",
                "started_accepting_at": "2019-06-29T21:01:56.634Z",
                "number_of_reports_for_user": 0,
                "number_of_valid_reports_for_user": 0,
                "bounty_earned_for_user": 0.0,
                "last_invitation_accepted_at_for_user": null,
                "bookmarked": false,
                "allows_bounty_splitting": false,
                "offers_bounties": true,
                "open_scope": null,
                "fast_payments": null,
                "gold_standard_safe_harbor": null
            }
        },
        {
            "id": "134",
            "type": "program",
            "attributes": {
                "handle": "khanacademy",
                "name": "Khan Academy",
                "currency": "usd",
                "policy": "At Khan Academy, we're a small, non-profit team trying to give a free, world-class education to anyone, anywhere.\r\n\r\nWe're committed to maintaining a safe website where student data is appropriately protected. If you've discovered a security issue in Khan Academy, we'd love to work with you. Please let us know about it and we'll fix the issue as soon as we can.\r\n\r\n# Guidelines\r\n- When conducting research, please ensure that your methods and report conform to the [HackerOne Code of Conduct](https://www.hackerone.com/policies/code-of-conduct).\r\n- If you need a Khan Academy account (or two) to test your vulnerability, create a new one; don't use another user's account.\r\n- To be considered a valid vulnerability, you must be able to demonstrate a way to negatively impact other users. Methods of changing your own experience - including granting yourself energy points - are not considered security issues. Non-security-related issues can be reported to our public bug tracker, hosted on Zendesk: https://support.khanacademy.org/.\r\n\r\n# Scope\r\nWe're interested in technical vulnerabilities in most *.khanacademy.org sites (see notes below) or in our official mobile apps ([iOS](https://itunes.apple.com/us/app/khan-academy/id469863705?mt=8), [Google Play](https://play.google.com/store/apps/details?id=org.khanacademy.android&hl=en_US)).\r\n- Some parts of our site are hosted by third parties on subdomains (including [shop](https://shop.khanacademy.org/), [life](https://life.khanacademy.org/), and [crowdin](https://crowdin.khanacademy.org/)); we're less interested in these vulnerabilities unless they lead to a vulnerability in the main site.\r\n- Our Turkish language advocates run a site at http://www.khanacademy.org.tr/ -- this site is not officially run via Khan Academy and we are unable to resolve any issues with this site directly. If you report an issue with this site, we will attempt to forward the information appropriately and mark your report as informative.\r\n- https://support.khanacademy.org/ is operated by Zendesk. If you have a report related to this subdomain, please ensure it is a configuration problem (something we can address). If it's a general issue with the support site, it's best to report that directly to [Zendesk on HackerOne](https://hackerone.com/zendesk).\r\n\r\nIssues that only apply to [browsers we do not support](https://khanacademy.zendesk.com/hc/en-us/articles/204795660-Supported-browsers) are generally lower-priority, although we'll still accept more serious issues.\r\n\r\nWe no longer accept reports regarding KaTeX, as it is community-maintained and we do not have direct ownership. Please file KaTeX issues on the [KaTeX project on Github](https://github.com/KaTeX/KaTeX/issues).\r\n\r\n# Notes & Exclusions\r\n- Our [computer programming section](https://www.khanacademy.org/computing/cs) intentionally allows the execution of user-provided JavaScript, but execution is sandboxed to an iframe on a different domain (kasandbox.org); running arbitrary JS within the iframe is not considered a vulnerability unless it leads to another attack.\r\n- Many of our endpoints have very lenient or absent rate-limiting. This is because Khan Academy is used in many schools that are configured to have hundreds or thousands of computers behind one IP address. That means routes such as `/forgotpw` have a very lenient rate limit, though it does exist. We take other steps to detect and mitigate from brute force attacks.\r\n- Please note that we do expire sessions after actions you'd expect for this to happen, such as changing your password. However, it can take up to 5 minutes to propagate the expiration to every session. Rest assured that sensitive account actions are protected during this time with a re-authentication requirement. Please wait at least 5 minutes before re-testing any session expiration that you expect.\r\n- Several of our internal services, including our [mobile build server](https://mobile-ci.khanacademy.org/), deliberately have some public parts.  This is intentional and we don't consider it a vulnerability unless you can use it to compromise the main site.\r\n- We generally only consider spoofing an email that appears to be sent from khanacademy.org as an issue if you can point to specific settings (e.g. SPF records) that aren't configured correctly to prevent it; other reports are generally too client-dependent and difficult to reproduce to be actionable.\r\n- We are not currently planning to implement DNSSEC. In particular, this won't affect the majority of our users with clients that are not using DNSSEC, see for instance: https://bugs.chromium.org/p/chromium/issues/detail?id=50874#c22\r\n- https://blog.khanacademy.org/ has xmlrpc.php enabled. Because this is a known attack vector, we have several protections in place against attacks based on xmlrpc. Please do not report any vulnerability unless you can demonstrate it with a proof-of-concept. Denial-of-service reports related to xmlrpc will be closed.\r\n\r\n# Thanks\r\nWe believe in recognizing the work of others. If your work helps us improve the security of our website, we'd be happy to acknowledge your work in our [Hall of Fame](https://hackerone.com/khanacademy/thanks) and to make you the proud owner of a [Friendly Hacker](https://www.khanacademy.org/badges/friendly-hacker) badge on Khan Academy.",
                "profile_picture": "https://profile-photos.hackerone-user-content.com/variants/000/000/134/e62a822e39ad039f23a0b89bfaaaf7bf97c5f11f_original.png/19c85a12ac35f466af1ea2b0ae853bfe5e8f057fb1d6fb62db131707bb67b30d",
                "submission_state": "open",
                "triage_active": null,
                "state": "public_mode",
                "started_accepting_at": "2014-04-07T20:57:08.850Z",
                "number_of_reports_for_user": 0,
                "number_of_valid_reports_for_user": 0,
                "bounty_earned_for_user": 0.0,
                "last_invitation_accepted_at_for_user": null,
                "bookmarked": false,
                "allows_bounty_splitting": false,
                "offers_bounties": false,
                "open_scope": null,
                "fast_payments": null,
                "gold_standard_safe_harbor": null
            }
        },
        {
            "id": "140",
            "type": "program",
            "attributes": {
                "handle": "irccloud",
                "name": "IRCCloud",
                "currency": "usd",
                "policy": "# Reporting Security Vulnerabilities\n\nThis page is intended for security researchers. To find out more about IRCCloud's security, please visit our [privacy information](https://www.irccloud.com/privacy) page.\n\nIf you believe you have found a security vulnerability on IRCCloud, we encourage you to let us know right away. We will investigate all legitimate reports and do our best to quickly fix the problem.\n\nPlease submit your report here and our security team will respond as soon as possible.\n\n# Responsible Disclosure Policy\n\nIf you give us a reasonable time to respond to your report before making any information public and make a good faith effort to avoid privacy violations, destruction of data and interruption or degradation of our service during your research, we will not bring any lawsuit against you or ask law enforcement to investigate you.\n\n# Automated Testing\n\nAutomated testing against IRCCloud is not allowed. If you use automated testing, your account will be banned and we will not award any bounties.\n\n# Bug Bounty Info\n\nTo show our appreciation for security researchers, we offer a monetary bounty for certain qualifying security bugs. Here is how it works:\n\n# Eligibility\n\nTo qualify for a bounty, you must:\n\n* Follow the [HackerOne Disclosure Guidelines](https://hackerone.com/guidelines)\n* Adhere to our Responsible Disclosure Policy (above)\n* Be the first person to responsibly disclose the bug\n* Report a bug applicable to our main web application on www.irccloud.com, and our open-source [Android](https://github.com/irccloud/android) and [iOS](https://github.com/irccloud/ios) apps.\n* Report a bug that could compromise the integrity of our user data, circumvent the privacy protections of our user data, or enable access to a system within our infrastructure, such as:\n * Cross-Site Scripting (XSS)\n * Cross-Site Request Forgery (CSRF/XSRF)\n * Broken Authentication\n * Circumvention of our Privacy policy\n * Remote Code Execution\n * Privilege Escalation\n * Provisioning Errors\n* Please use a test account instead of a real account when investigating bugs. When you are unable to reproduce a bug with a test account, it is acceptable to use a real account, except for automated testing. Do not interact with other IRC users or channels without the consent of their owners.\n* Reside in a country not under any current U.S. Sanctions (e.g., North Korea, Libya, Cuba, etc.)\n\nWe will assess each bug to determine if it qualifies.\n\n# Rewards\n\n* Our minimum reward is $50 USD for minor issues, while we expect to reward $500+ USD for major vulnerabilities\n* There is no maximum reward: each bug is awarded a bounty based on its severity and creativity\n* Only 1 bounty per security bug will be awarded\n\n# Exclusions\n\nThe following bugs are generally not eligible for a bounty (and we do not recommend testing for these):\n\n* Denial of Service Vulnerabilities\n* Spam or Social Engineering techniques\n* \"Best practice\", e.g. missing CSP headers.\n* Attacks requiring root access to a user device.\n* E-mail impersonation/SPF/DMARC issues.\n\n\"Leaked\" credentials are generally the result of endpoint compromise or credential stuffing - we welcome reports of these and will invalidate reported credentials, but we will not pay a bounty for reports which do not represent a security vulnerability in the IRCCloud service itself.\n\n# Reporting Bugs\n\nPlease only report one bug per HackerOne issue. If you submit a bug report containing a video, you must also clearly describe the issue in the text of the report.\n\nPlease note that we are a small company with no dedicated security engineers. High-priority issues will be dealt with swiftly, but lower-priority issues may take some time to be fixed. We won't issue any rewards until fixes are deployed.",
                "profile_picture": "https://profile-photos.hackerone-user-content.com/variants/000/000/140/c90be8ce0ea099d908ca652a82df9952b782e7c2_original.png/19c85a12ac35f466af1ea2b0ae853bfe5e8f057fb1d6fb62db131707bb67b30d",
                "submission_state": "open",
                "triage_active": null,
                "state": "public_mode",
                "started_accepting_at": "2014-04-10T20:46:39.609Z",
                "number_of_reports_for_user": 0,
                "number_of_valid_reports_for_user": 0,
                "bounty_earned_for_user": 0.0,
                "last_invitation_accepted_at_for_user": null,
                "bookmarked": false,
                "allows_bounty_splitting": true,
                "offers_bounties": true,
                "open_scope": null,
                "fast_payments": null,
                "gold_standard_safe_harbor": null
            }
        },
        {
            "id": "162",
            "type": "program",
            "attributes": {
                "handle": "iandunn-projects",
                "name": "Ian Dunn",
                "currency": "usd",
                "policy": "### Scope\r\n\r\nI'm a developer, so I'm mostly interested in **source code bugs**, rather than network intrusions. Reports must meet these criteria to be accepted:\r\n\r\n* It must show **tangible/practical security implications**. Theoretical scenarios and missing best practices aren't worth the time.\r\n* It must include a **PoC** with complete steps to reproduce. \r\n* It must have a **medium or higher severity**; low severity issues just aren't worth the time *(unless they can be chained together to create a higher severity vulnerability)*. \r\n* It must **not** be mentioned in the `Scope Exclusions` section.\r\n\r\nReports that don't meet those criteria will be marked as **`Not Applicable`**.\r\n\r\n\r\n### Top Targets\r\n\r\n* [Compassionate Comments](https://wordpress.org/plugins/compassionate-comments/)\r\n* [Regolith](https://github.com/iandunn/regolith)\r\n* [Quick Navigation Interface](https://wordpress.org/plugins/quick-navigation-interface/)\r\n\r\nThere are **more targets** listed in the `In Scope` section below.\r\n\r\n\r\n### Bounties\r\n\r\n| Severity | Award            |\r\n| -------- | ------------- |\r\n| High       | $100 - $400 |\r\n| Medium | $25-50          |\r\n| Low        | $0                  |\r\n\r\nSeverity is based on [CVSS 3](https://www.first.org/cvss/calculator/3.0), but may be adjusted up or down at my discretion. For example, a vulnerability in a plugin with 10,000 active installations may be higher than a vulnerability in a plugin with 100 active installations.\r\n\r\n\r\n### Scope Exclusions / Common Invalid Reports\r\n\r\n* My personal website is not in scope. It's not important, and the constant pentesting is annoying.\r\n* Common false reports listed on [WordPress' Reporting Security Vulnerabilities page](https://make.wordpress.org/core/handbook/testing/reporting-security-vulnerabilities/). I don't consider usernames sensitive enough to be information disclosure.\r\n* Brute force, DoS ([including XML-RPC](https://hackerone.com/reports/371550) and [load-scripts.php](https://hackerone.com/reports/770508)), phishing, text injection, or social engineering attacks. \r\n* Output from **automated scans** - please manually verify issues and include a valid proof of concept.\r\n* Clickjacking with minimal security implications\r\n* Lack of HTTP/MX security headers (CSP, X-XSS, SPF, DMARC, DKIM, etc.)\r\n* Mixed content warnings for passive assets like images and videos\r\n* Theoretical vulnerabilities where you can't demonstrate a significant security impact with a PoC.\r\n* **Rare or low-severity edge cases**: Like regular bugs, not all security bugs are worth fixing. Some edge cases may be closed as `Informative`. For example, CEMI attacks using standard trigger characters (like #151516) are welcome, but characters that only work in Excel, or only in old versions of software, etc are not accepted (see #124223).\r\n\r\nInvalid reports will be disclosed in order [to help other researchers and programs learn from them](https://hackerone.com/reports/160488#activity-1220162).",
                "profile_picture": "https://profile-photos.hackerone-user-content.com/variants/jo328q250pb9uztc4p1zivborzwy/91b2506fe54e617e9b2199fff02f67a626ec348f74368200b42055b3004dd8a8",
                "submission_state": "open",
                "triage_active": null,
                "state": "public_mode",
                "started_accepting_at": "2014-04-23T16:15:00.931Z",
                "number_of_reports_for_user": 0,
                "number_of_valid_reports_for_user": 0,
                "bounty_earned_for_user": 0.0,
                "last_invitation_accepted_at_for_user": null,
                "bookmarked": false,
                "allows_bounty_splitting": true,
                "offers_bounties": true,
                "open_scope": null,
                "fast_payments": null,
                "gold_standard_safe_harbor": null
            }
        },
        {
            "id": "165",
            "type": "program",
            "attributes": {
                "handle": "stopthehacker",
                "name": "StopTheHacker",
                "currency": "usd",
                "policy": "# StopTheHacker + CloudFlare\r\n\r\nStopTheHacker is part of the [CloudFlare](https://www.cloudflare.com/) family. Before submitting an issue to us, please make certain you have read CloudFlare's [Vulnerability Disclosure Policy](https://hackerone.com/cloudflare). \r\n\r\n# Scope\r\n\r\nAny domains accessible under `*.stopthehacker.com` are in scope for the program.\r\n\r\n# Eligibility and Disclosure\r\n\r\nIn order for your submission to be eligible:\r\n\r\n- You must agree to our [Vulnerability Disclosure Policy](https://hackerone.com/cloudflare).\r\n- You must be the first person to responsibly disclose an unknown issue.\r\n\r\nAll legitimate reports will be reviewed and assessed by our security team to determine if it is eligible.\r\n\r\n# Rewards\r\n\r\nFor each eligible vulnerability report, the reporter will receive:\r\n\r\n- Recognition on our Hall of Fame.\r\n- A limited edition CloudFlare bug hunter t-shirt. CloudFlare employees don't even have this shirt. It's only for you all. Wear it with pride: you're part of an exclusive group.\r\n- 12 months of CloudFlare's Pro or 1 month of Business service on us.\r\n\r\nMonetary compensation is not offered under the program.\r\n\r\n#Exclusions\r\n\r\nThe following conditions are out of scope for the vulnerability disclosure program. Any of the activities below will result in disqualification from the program permanently.\r\n\r\n- **Automated vulnerability scanners are not permitted.**\r\n- Physical attacks against StopTheHacker employees, offices, and data centers.\r\n- Social engineering of StopTheHacker employees, contractors, vendors, or service providers.\r\n- Knowingly posting, transmitting, uploading, linking to, or sending any malware.\r\n- Pursuing vulnerabilities which send unsolicited bulk messages (spam) or unauthorized messages.\r\n- Any vulnerability obtained through the compromise of a StopTheHacker customer or employee accounts. If you need to test a vulnerability, please create an account.\r\n- Being an individual on, or residing in any country on, any U.S. sanctions lists.",
                "profile_picture": "https://profile-photos.hackerone-user-content.com/variants/000/000/165/6b4d20f08a903f083c9920ff0109356c9649d891_original.png/19c85a12ac35f466af1ea2b0ae853bfe5e8f057fb1d6fb62db131707bb67b30d",
                "submission_state": "paused",
                "triage_active": null,
                "state": "public_mode",
                "started_accepting_at": "2014-04-24T20:03:25.373Z",
                "number_of_reports_for_user": 0,
                "number_of_valid_reports_for_user": 0,
                "bounty_earned_for_user": 0.0,
                "last_invitation_accepted_at_for_user": null,
                "bookmarked": false,
                "allows_bounty_splitting": false,
                "offers_bounties": false,
                "open_scope": null,
                "fast_payments": null,
                "gold_standard_safe_harbor": null
            }
        },
        {
            "id": "204",
            "type": "program",
            "attributes": {
                "handle": "glassdoor",
                "name": "Glassdoor",
                "currency": "usd",
                "policy": "# \ud83d\udc9a Our Mission\nHelping people everywhere find jobs and companies they love.\n\n**At Glassdoor we take our security very seriously and welcome any responsible disclosure of potential gaps in our systems.** We believe that working with skilled security researchers across the globe is crucial in providing a trusted and secure service to help people everywhere find jobs and companies they love.Please read through the following details to help you focus on the areas most important to us. \n\nAdditionally, Glassdoor may award an additional reward bonus for exceptional reports. This will be done at Glassdoor's discretion. Good luck, and happy hunting!\n\n---\n\n#\ud83e\uddea  Testing Requirements:\n> ==Please do **not** perform any testing on live bowls or real company pages. All testing must happen in our approved WeAreHackerOne bowl (or private test bowls **you** create) or the Acme/Winkler Web Design company pages.  **Failure to comply may result in disqualification from our program.**==\n\nCreate your Glassdoor account with `+hackerone`: Example  `researcher+hackerone@wearehackerone.com`  \nWhere possible, add text `bugbounty` to requests you are sending to our applications, so our team can identify the traffic being generated as part of your testing.\n\n### Testing Glassdoor Payloads:\nUse our test companies [Acme Corp](https://www.glassdoor.com/Overview/Working-at-Acme-Corp-EI_IE4708436.11,20.htm) and/or [Winkler Web Designs](https://www.glassdoor.com/Overview/Working-at-Winkler-Web-Designs-EI_IE1901640.11,30.htm) - please DO NOT test against other companies which you don't have explicit permission to. \nTo get invited to both or either of the companies fill out the following [Google Form](https://forms.gle/JVaaZPyEG33o25Fy5) and we will do our best to invite you as soon as possible\n\n### Testing Fishbowl Payloads:\nRegister on Fishbowl using your HackerOne email Alias. Example `researcher+hackerone@wearehackerone.com`. In doing so you will be automatically included in the company bowl `\"We Are Hackerone\"`. For more information on how the HackerOne email Alias works see the [following documentation](https://docs.hackerone.com/hackers/hacker-email-alias.html)\n\n---\n\n#\ud83d\udcdc  Program Ground Rules\n- Respect our users' privacy.\n- Leave the Site as you found it.\n- Do not violate our Terms of Service or the law.\n- Do not impact our services.\n- No interacting with others.\n- Cooperate with Glassdoor.\n- Participation Eligibility.\n- Follow [Hackerone's Code of Conduct](https://www.hackerone.com/policies/code-of-conduct).\n\n### **Respect our users' privacy.**\nIf during your research you happen to encounter any information about another user or other individual, **immediately stop and report** this to Glassdoor. **To participate in this program, you only need to explain the technical vulnerability you discovered.**\n\nYou must avoid any viewing, copying, altering, destroying, or otherwise interacting with any data, in particular data of other individuals, to which you may gain access through your research. If a vulnerability provides unintended access to data, limit the amount of data you access to the minimum required for effectively demonstrating the vulnerability; cease testing, and submit a report immediately if you encounter any user data during testing. This may include Personally Identifiable Information (PII), Diversity and Inclusion data, or Proprietary Information.\n\n### **Leave the Site as you found it.**\nDo not copy, save, store, transfer, disclose, or otherwise retain any information you find on our site during your research, except to report your research to Glassdoor.\n\n### **Don't violate our Terms of Service or the law.**\nAll access to our Site must otherwise be in accordance with our Terms of Service and all applicable laws.\nIn the event you access PII or other sensitive data, note that you are required to follow all laws and regulations applicable to the access and processing of such personally identifiable information and/or data, such as the California Consumer Privacy Act of 2018, the California Privacy Rights Act of 2020, New York Privacy Act 2021, once they become effective, and the European Union\u2019s General Data Protection Regulation (Regulation (EU) 2016/679), including the European Commission\u2019s Standard Contractual Clauses regarding the transfer of personal data to processors\n\n### **Don't impact our services.**\nYou must avoid causing any interruption or degradation of our services. Researchers who are found to be using aggressive automated tools will be reported to Hackerone for non co-operation.\n\n### **No interacting with others.**\nAny form of interaction with others on or through our Site, including but not limited to other Glassdoor users, is strictly prohibited. Do not make any attempts to phish users or employees.\n\n### **Cooperate with Glassdoor.**\nYou will be expected to cooperate with us if we request your assistance in connection with your research.\n\n### **Participation Eligibility.**\nCurrent employees or contractors of Glassdoor are not eligible to participate in the program. Former employees and contractors are eligible to participate in the program only, if:\n- they have left Glassdoor more than 1 year prior to submission, and\n- they are not making use of, or referring to, any non-public Glassdoor information obtained when they were an employee or contractor.\n\n### **Follow Hackerone's Code of Conduct.**\nA researcher you are expected to follow [Hackerone's Code of Conduct](https://www.hackerone.com/policies/code-of-conduct).\n\n---\n\n# \u2139\ufe0f Helpful Tips For Your Testing: \n- **Group similar submissions:** We ask that researchers who are able to identify the same or similar types of issues in multiple locations, across one of our applications combine those findings into a single submission that includes a description as well as the various locations where vulnerabilities have been identified.\n- **Localization:** Glassdoor is an international company with many different subdomains for different countries, running the same applications in different languages. Localized versions can share the same codebase and therefore, a vulnerability found on many may only be eligible to be rewarded once.\n- **Third party applications:** For third party applications, such as Wordpress or Salesforce, will only be eligible for reward if there is a reasonable action Glassdoor can take to mitigate issues identified. A good example of something we wouldn't payout for is the output of WPScan showing recently out of date plugins, since regular patching is part of our WP management. An example of something we would payout for is a POC showing unintended behavior that isn't in a vendor patch, which is in our ability to fix.\n- **Disclosing results:** This bounty requires explicit permission to disclose the results of a submission.\n\n---\n# \ud83c\udfaf Target Overviews\n### Fishbowl\n**Different Accounts Types and Roles:**\u00a0\n- **Student Account:**  An account linked to a school email address allowing access to that school's bowl. \n- **Professional:** A regular account can be tied to organization or personal email.\n  \n**Note:** Any difference in *role based access* between the Professional and Student account does not necessarily indicate a secuirty risk.\n  \n| Target                        | Description                                                                                    |\n| ----------------------------- | ---------------------------------------------------------------------------------------------- |\n| https://api.fishbowlapp.com/* | Fishbowl's  Restful API endpoint. *Focus areas: privilege escalation, sensitive data exposure* |\n|    https://www.fishbowlapp.com/*                           |  Fishbowl's Web App. *Focus areas: privilege escalation, sensitive data exposure, Injection attacks, broken access control*                                                                                              |  \n\n\n### Glassdoor \n**Different Accounts Types and Roles:**\u00a0\n- **General User:**  Typical user access \n- **Employer User:** [Glassdoor Employee Center Guide](https://www.glassdoor.com/employers/resources/glassdoor-employer-center-guide/)\n \n| Target                                   | Description                                                                                                                                                                                                                                                                                       |     |\n| ---------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --- |\n| https://api.glassdoor.com/*              | Glassdoor's API endpoint formatted in XML or JSON. [Developer Documentation](https://www.glassdoor.com/developer/index.htm) *Focus areas: privilege escalation, sensitive data exposure*                                                                                                          |     |\n| https://www.glassdoor.com/*                  | Glassdoor's  primary web application. **A good place to start your testing**. *Focus Areas: Injection attacks, privilege escalation*                                                                                                                                                              |     |\n| https://www.glassdoor.com/member/*           | User focused area contributions, my account, my information, resume uploads, and profile controls. *Focus Areas: Injection attacks, privilege escalation*                                                                                                                                         |     |\n| https://www.glassdoor.com/employers/ec/* | Access control platform for employers to manage and review engagement, reviews, and management tools. Documentation: [Glassdoor Employee Center Guide](https://www.glassdoor.com/employers/resources/glassdoor-employer-center-guide/) *Focus Areas: broken access control, privilege escalation* |     |\n| https://help.glassdoor.com/*             | Glassdoor's Help Center. *Focus Areas: Injection attacks, Sensitive Data Disclosure*                                                                                                                                                                                                              |     |                                                                                                                                                                                                                             |     |\n|https://www.glassdoor.com/Job/*|Job search features. *Focus Area: Injection Attacks*|\n|https://www.glassdoor.com/Reviews/*|Explore companies features. *Focus Area: Injection Attacks*|\n|https://www.glassdoor.com/Compare/*|Company comparison tool. *Focus Area: Injection Attacks*|\n|https://www.glassdoor.com/mz-survey/*|Company review survey. *Focus Area: Injection Attacks*|\n|https://www.glassdoor.com/Salaries/*|Salary Discovery tool. *Focus Area: Injection Attacks*|\n___\n# \ud83d\udcf0 Legal Terms:\n\nBy participating in Glassdoor\u2019s Bug Bounty program (the \u201cProgram\u201d), you acknowledge that you have read and agree to [Glassdoor\u2019s Terms of Use](https://www.glassdoor.com/about/terms/) as well as the following:\n\n- Your participation in the Program will not violate any law applicable to you, or disrupt or compromise any data that is not your own.\n- You agree that any and all information acquired or accessed by you while participating in the program is confidential to Glassdoor and you shall hold the confidential information in strict confidence and shall not copy, reproduce, sell, assign, license, market, transfer, or otherwise dispose of, give or disclose such information to third parties or use such information for any purposes other than for the performance of your work under the Program.\n- You acknowledge and agree that any and all information you encounter is owned by Glassdoor or its third-party providers, users, or customers. You have no rights, title, or ownership to any information that you may encounter.\n- Any activities conducted in a manner consistent with these terms and the Program will be considered authorized conduct and we will not initiate legal action against you. If legal action is initiated by a third party against you in connection with activities conducted under these terms and the Program, we may take steps to make it known that your actions were conducted in compliance with the terms and the Program, in our sole discretion. Glassdoor cannot authorize any activity on third-party products or guarantee they won\u2019t pursue legal action against you. We aren\u2019t responsible for your liability for actions performed on third parties.\n- This is not a competition, but rather a discretionary rewards program. The decision to pay or not pay a reward is in our sole discretion.\n- We are unable to issue rewards to individuals who are on sanctions lists, or who are in countries (e.g., Cuba, Iran, North Korea, Syria, Crimea, and the so-called Donetsk People's Republic and Luhansk People's Republic) on sanctions lists. You are responsible for any tax implications depending on your country of residency and citizenship. There may be additional restrictions on your ability to enter depending upon your local law.\n- You are solely responsible for any applicable taxes and/or withholdings, arising from or relating to your participation in the Program, including from any bounty payments.\n- We reserve the right to terminate or discontinue the Program at any time, in our sole discretion.\n\nThank you for helping keep Glassdoor and our users safe!\n",
                "profile_picture": "https://profile-photos.hackerone-user-content.com/variants/u258rsub76htn189l6jc17ycwrc4/91b2506fe54e617e9b2199fff02f67a626ec348f74368200b42055b3004dd8a8",
                "submission_state": "open",
                "triage_active": true,
                "state": "public_mode",
                "started_accepting_at": "2015-10-05T20:53:55.946Z",
                "number_of_reports_for_user": 0,
                "number_of_valid_reports_for_user": 0,
                "bounty_earned_for_user": 0.0,
                "last_invitation_accepted_at_for_user": null,
                "bookmarked": false,
                "allows_bounty_splitting": true,
                "offers_bounties": true,
                "open_scope": null,
                "fast_payments": null,
                "gold_standard_safe_harbor": null
            }
        },
        {
            "id": "205",
            "type": "program",
            "attributes": {
                "handle": "zendesk",
                "name": "Zendesk",
                "currency": "usd",
                "policy": "# **BUG BOUNTY POLICY**\n\nCapitalised terms used in this Bug Bounty Policy and not otherwise defined have the meaning ascribed to such terms in our [Master Subscription Agreement](https://www.zendesk.com/company/customers-partners/master-subscription-agreement).\n\nZendesk aims to keep its Service safe for everyone, and data security is of utmost priority. If you are a security researcher and have discovered a security vulnerability in the Service, we appreciate your help in disclosing it to us privately and giving us an opportunity to fix it before publishing technical details.\n\nZendesk will engage with security researchers when vulnerabilities are reported to us as described here. We will validate, respond, and fix vulnerabilities in support of our commitment to security and privacy. We won\u2019t take legal action against, suspend, or terminate access to the Service of those who discover and report security vulnerabilities responsibly. Zendesk reserves all of its legal rights in the event of any noncompliance.\n\n## **Reporting**\n\nShare the details of any suspected vulnerabilities with the Zendesk Security Team by filing a [report](https://hackerone.com/zendesk/reports/new). Please do not publicly disclose these details outside of this process without explicit permission. In reporting any suspected vulnerabilities, please include the following information:\n\n* **Vulnerable URL** \\- the endpoint where the vulnerability occurs;  \n* **Vulnerable Parameter** \\- if applicable, the parameter where the vulnerability occurs;  \n* **Vulnerability Type** \\- the type of the vulnerability;  \n* **Steps to Reproduce** \\- step-by-step information on how to reproduce the issue  \n* **Screenshots or Video** \\- a demonstration of the attack; and  \n* **Attack Scenario** \\- an example attack scenario may help demonstrate the risk and get your issue resolved faster.\n\nReports should only reference accounts owned by the researcher. Researchers can sign up for a trial account `(See Sign Up Process below)`. Reports that carry an acceptable risk but demonstrate a valid security-related behaviour will be closed as informative. Submissions that don\u2019t present a security risk, are false positives, or are out of scope will be closed as N/A. (Please note that the scope is outlined below.)\n\nIdentical reports will be marked as \u201cDuplicate\\[s\\]\u201d of the original submission; the original report can be marked as (but not limited) to \u201cTriaged\u201d, \u201cN/A\u201d, or \u201cInformative.\u201d\n\nMore information on a [proper submission](https://docs.hackerone.com/hackers/submitting-reports.html), [report states](https://docs.hackerone.com/hackers/report-states.html), and [acceptable reporting behaviour](https://docs.hackerone.com/hackers/misconduct.html), can be found on linked HackerOne\u2019s articles.\n\n## **Sign Up Process**\n\nTo sign up for a Zendesk Trial Account for testing purposes, please use your HackerOne details as follows: \n\n* Step 1/3 \\- Work Email \\- please use `<hackerone-username>@wearehackerone.com`  \n* Step 2/3 \\- First name, Last name and Phone number  \n* Step 3/3 \\- Company name \\- please use `h1-<hackerone-username>-nn`  \n  * where nn is an integer that can be used to create new accounts if you need to do more testing past the trial expiry period. \n\nFollowing these steps creates a trial account that looks like  `h1-thisismyusername-01.zendesk.com`\n\n**All research must be conducted using your own Zendesk instance which you can sign up for [here](https://www.zendesk.com/register/)**.\n\n## **Testing Exclusion**\n\nIn no event are you permitted to access, download or modify data residing in any other Account, or one that is not registered to you. We will not honour any issues which result from testing our customers.\n\nYou are also prohibited from:\n\n* In \u200bno event are you permitted to access, download or modify data residing in any other Account. If you wish to test cross-account or access control vulnerabilities you must create multiple Zendesk instances.  \n* You are prohibited from attempting to social engineer Zendesk staff including contacting Zendesk via our Support channels without identifying yourself as a security researcher.  \n* You are prohibited from attempting to upgrade your trial account to a paid account without payment or otherwise attempting to circumvent charges or fees.   \n* You are prohibited from executing or attempting to execute a Denial of Service attack.  \n* Knowingly posting, transmitting, uploading, linking to, sending or storing any malicious or illegal software or files. You can find details on how we handle malicious attachments [here](https://support.zendesk.com/hc/en-us/articles/4483794022170-Managing-malicious-attachments)   \n* Testing in a manner that would result in the sending of unsolicited or unauthorised junk mail, spam, pyramid schemes or other forms of duplicative or unsolicited messages.  \n* Attempting to rename an account or testing of the account name change functionality.\n\n## **Bounty Ineligible Issues**\n\nIn some cases, we may already know about a vulnerability, or the vulnerability might pose an acceptable level of risk to us at this stage. The following categories of reports are generally considered ineligible for bounty: :\n\n* Already public vulnerabilities (i.e. CVE\u2019s) in infrastructure, frameworks or libraries we use    \n* SPF, DKIM, DMARC issues.  \n* Malicious attachments on file uploads or attachments.  \n* Missing security controls related to HTTP headers, such as HSTS,CSP, X-Frame-Options or cookie directives..  \n* Mobile issues that require a Rooted or Jailbroken device.  \n* Brute-force, / Rate-limiting, / Velocity throttling, and other denial of service based issues.  \n* XSS (or a behaviour) where you can only attack yourself (e.g. \"Self XSS\").  \n* XSS on pages where administrators are intentionally given full HTML editing capabilities, such as custom theme editing  \n* HTML injection or injection attacks that rely on phishing via links, images or use of the \\<a\\> tag.    \n* EXIF information on images\n* All issues affecting Contributor Role and Light Agent are ineligible for bounty until further notice.\n\n## **Bounties**\n\nWe are pleased to offer a bounty for vulnerability information that helps us protect our customers as a thanks to the security researchers who choose to participate in our bug bounty program.We use a combination of methodologies for severity assessments; whilst we take CVSS into account we also weigh a qualitative risk assessment based on a number of internal factors.  **Zendesk will decide the bounty amounts at our sole discretion, and all decisions are final. The following vulnerability examples are a guide only and are not guaranteed bounties for a given report.** \n\n| Severity | Estimated Bounty | Example vulnerabilities |\n| :---- | :---- | :---- |\n| Critical | $5,000-$10,000 | Remote code execution, SQL injection, cross account data access, SSRF |\n| High | $2,000 | Broken authentication or session management, (stored XSS, CSRF, privilege escalation **on critical functionality**) |\n| Medium | $750 | Privilege escalation, stored/reflected XSS, CSRF, open redirection |\n| Low | $250 | Information leakage, Incorrect API access controls |\n\nWe will only reward the first reporter of a **valid** vulnerability who demonstrates the issue using their own account. Duplicate reports will not be rewarded.\n\nYou are responsible for paying any taxes associated with the reward. Submissions from countries where we are prohibited by law from making payments, such as the [US Sanction Lists](http://www.treasury.gov/resource-center/sanctions/Programs/Pages/Programs.aspx), are ineligible for rewards.\n\n## **Our Commitment**\n\nIf you identify a verified security vulnerability in compliance with this Bug Bounty Policy, Zendesk commits to:\n\n* Acknowledge receipt of your vulnerability report in a timely manner;  \n* Notify you when the vulnerability is fixed; and  \n* Publicly thank you for your responsible disclosure and helping us keep our customers safe.\n\n## **Scope**\n\nYou may only submit reports against Zendesk instances for which you are the Account Owner. **If you have tested on a customer instance that you are authorised to do so and find a vulnerability, please recreate the vulnerability on your own test instance.**\n\n[**Zendesk for Service**](https://support.zendesk.com/hc/en-us/articles/4408881937306-Getting-started-with-Zendesk-Suite-Introduction) \n\nThis is our core product and main platform for accessing all things Zendesk. Also known as the Zendesk Suite, this includes our Support, Guide, Messaging, Voice, Sunshine and Reporting & Analytics capabilities. \n\n* `https://[your-zendesk-subdomain].zendesk.com`  \n* Zendesk [mobile applications](https://www.zendesk.com/product/mobile/)  \n* Zendesk Mobile SDK on [iOS](https://developer.zendesk.com/documentation/zendesk-sdks/\\#ios) and [Android](https://developer.zendesk.com/documentation/zendesk-sdks/\\#android)\n\n[**Zendesk for Sales**](https://support.zendesk.com/hc/en-us/articles/4408843443866-Getting-started-with-Zendesk-Sell)\n\nAlso known as Sell, Zendesk for sales is a modern sales CRM that frees you to maximise productivity, maintain pipeline visibility, and grow revenue.\n* `https://[your-zendesk-subdomain].zendesk.com/sales/`  \n* [Zendesk Sell for iOS](https://apps.apple.com/us/app/base-crm-sales-tracking/id488534576)  \n* [Zendesk Sell for Android](https://play.google.com/store/apps/details?id=com.futuresimple.base) \n\n[**Zendesk Workforce Management**](https://support.zendesk.com/hc/en-us/articles/6457209788442-Zendesk-Workforce-management-WFM-resources)\n\nFormally Tymeshift, Workforce Management (WFM) is the ideal scheduling solution to meet AI-forecasted needs and to provide comprehensive historical and real-time reporting into team performance and capacity.\n\n* [https://\\[your-zendesk-subdomain\\].zendesk.com/wfm/v2](https://\\[your-zendesk-subdomain\\].zendesk.com/wfm/v2)\n\n[**Zendesk Quality Assurance**](https://support.zendesk.com/hc/en-us/articles/7043760283546-Accessing-and-using-Zendesk-QA) \n\nFormerly Klaus, Quality Assurance (QA) can automatically analyze 100% of conversations across human and AI agents, BPOs, channels, and languages. AI detects issues, knowledge gaps and coaching opportunities to improve service.\n\n* `https://[your-zendesk-subdomain].zendesk.com/qa`\n  * We will also accept bounties for the legacy domains[https://app.klausapp.com](https://app.klausapp.com/) & [https://kibbles.klausapp.com](https://kibbles.klausapp.com/) however note you cannot create new accounts under these domains.\n* The Klaus [Chrome extension](https://chromewebstore.google.com/detail/klaus/eienihkhapninadhneligjdemdpkakme)\n\n\n[**Advanced AI**](https://support.zendesk.com/hc/en-us/articles/5608652527386-Getting-started-with-Zendesk-AI-and-Advanced-AI)\n\nAdvanced AI that instantly understands common customer issues, routes tickets, and gives your teams actionable insights and suggestions. It comes with AI-powered tools to optimise your service workflows, empower agents to solve issues faster, and easily scale your knowledge base.\n\n* We are pleased to accept submissions for vulnerabilities related to our Large Language Models (LLM\u2019s) or AI feature offerings such as:  \n  * Prompt injection that compromises the confidentiality or integrity of an interaction  \n  * Poisoning of training data or model manipulation  \n  * Other vulnerabilities that cross established data security boundaries (i.e. cross customer access) \n\nPlease note that a tangible security impact must be displayed to be eligible for bounty. \n\n**Zendesk public repositories & codebase**\n\nWe welcome review of our public facing repositories for vulnerabilities. Any public repositories from the following organisations are in-scope:\n\n* [https://github.com/zendesk](https://github.com/zendesk)  \n* [https://github.com/Tymeshift](https://github.com/Tymeshift)  \n* [https://github.com/klausapp](https://github.com/klausapp)  \n* [https://github.com/ultimateai](https://github.com/ultimateai)\n\nArchived repositories are **not eligible** for bounty.\n\n**Zendesk Marketplace apps created by Zendesk** \n\nWe provide customers & developers the ability to provide extensibility and integrations with our Products through Zendesk Marketplace. We also publish apps and integrations that can be found under the following profiles: \n\n* [Zendesk owned apps & integrations](https://www.zendesk.com/marketplace/partners/475/zendesk/)   \n* [WFM app](https://www.zendesk.com/marketplace/apps/support/4895/zendesk-workforce-management/)  \n* [Ultimate app](https://www.zendesk.com/marketplace/partners/2196/ultimate/)  \n* [Klaus Chat app](https://www.zendesk.com/marketplace/apps/chat/181357/klaus/?queryID=9b0ed729ffdbec96657b1bd437baa91d)  \n* [Klaus Support app](https://www.zendesk.com/marketplace/apps/support/181357/klaus/?queryID=9b0ed729ffdbec96657b1bd437baa91d) \n\n**Only Zendesk owned & developed applications are eligible for bounty.** If you find vulnerabilities in other Marketplace apps, integrations or themes please contact the developer through the \u201ccontact us\u201d button on the developers page. \n\n\n",
                "profile_picture": "https://profile-photos.hackerone-user-content.com/variants/vqazo0hs6n64m1y7wrfnhrao63p9/19c85a12ac35f466af1ea2b0ae853bfe5e8f057fb1d6fb62db131707bb67b30d",
                "submission_state": "open",
                "triage_active": true,
                "state": "public_mode",
                "started_accepting_at": "2015-04-27T17:23:40.876Z",
                "number_of_reports_for_user": 0,
                "number_of_valid_reports_for_user": 0,
                "bounty_earned_for_user": 0.0,
                "last_invitation_accepted_at_for_user": null,
                "bookmarked": false,
                "allows_bounty_splitting": true,
                "offers_bounties": true,
                "open_scope": null,
                "fast_payments": null,
                "gold_standard_safe_harbor": null
            }
        }
    ],
    "links": {
        "self": "https://api.hackerone.com/v1/hackers/programs",
        "next": "https://api.hackerone.com/v1/hackers/programs?page%5Bnumber%5D=2"
    }
}